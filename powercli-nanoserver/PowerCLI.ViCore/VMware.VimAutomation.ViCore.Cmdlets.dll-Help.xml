<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns="http://msh" schema="maml">
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Add-PassthroughDevice</command:name>
		<maml:description>
			<maml:para>This cmdlet attaches pass-through devices to the specified virtual machine.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>PassthroughDevice</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet attaches pass-through devices to the specified virtual machine. Note that the value of the ControllerKey property of the returned device might not be up to date, if a new SCSI controller creation process  is running in the background.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-PassthroughDevice</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine to which you want to attach the passthrough devices.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>PassthroughDevice</maml:name>
				<maml:description>
					<maml:para>Specifies the passthrough devices you want to add to the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PassThroughDevice[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine to which you want to attach the passthrough devices.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>PassthroughDevice</maml:name>
			<maml:description>
				<maml:para>Specifies the passthrough devices you want to add to the virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PassThroughDevice[]</command:parameterValue>
			<dev:type>
				<maml:name>PassThroughDevice[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more newly added PassthroughDevice objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Passing PciPassthroughDevice objects to the Device parameter is supported only on servers that are vCenter Server 4.1 and ESX 4.1, and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$scsiDeviceList = Get-PassthroughDevice -VMHost Host -Type Scsi

Add-PassthroughDevice -VM $vm -PassthroughDevice $scsiDeviceList[0]</dev:code>
  			<dev:remarks>
				<maml:para>Adds the first SCSI passthrough device of the Host host to the $vm virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Add-PassthroughDevice.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-PassthroughDevice</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-PassthroughDevice</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unknown</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Add-VirtualSwitchPhysicalNetworkAdapter</command:name>
		<maml:description>
			<maml:para>This cmdlet adds a host physical NIC to a standard virtual switch.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>VirtualSwitchPhysicalNetworkAdapter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet adds a host physical NIC to a standard virtual switch. If VMHost virtual network adapters are specified, the cmdlet migrates them to the virtual switch as well. 

Note: If VMHost virtual network adapters are specified, the cmdlet migrates them to the respective port groups or creates new ones if VirtualNicPortgroup is not specified.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-VirtualSwitchPhysicalNetworkAdapter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>VMHostPhysicalNic</maml:name>
				<maml:description>
					<maml:para>Specifies the host physical network adapters that you want to add or migrate to the standard virtual switch.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PhysicalNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VirtualSwitch</maml:name>
				<maml:description>
					<maml:para>Specifies the standard virtual switch to which you want to migrate physical or virtual network adapters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualSwitch</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VirtualNicPortgroup</maml:name>
				<maml:description>
					<maml:para>Specifies the port groups to which to attach the host virtual network adapters. Accepts the same number of port groups as the number of virtual network adapters specified. The first adapter is attached to the first port group, the second adapter - to the second port group, and so on.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualPortGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMHostVirtualNic</maml:name>
				<maml:description>
					<maml:para>Specifies the host virtual network adapters to be migrated along with the physical adapter, so that their connectivity is preserved.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HostVirtualNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>VMHostPhysicalNic</maml:name>
			<maml:description>
				<maml:para>Specifies the host physical network adapters that you want to add or migrate to the standard virtual switch.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PhysicalNic[]</command:parameterValue>
			<dev:type>
				<maml:name>PhysicalNic[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>VirtualSwitch</maml:name>
			<maml:description>
				<maml:para>Specifies the standard virtual switch to which you want to migrate physical or virtual network adapters.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualSwitch</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>VirtualNicPortgroup</maml:name>
			<maml:description>
				<maml:para>Specifies the port groups to which to attach the host virtual network adapters. Accepts the same number of port groups as the number of virtual network adapters specified. The first adapter is attached to the first port group, the second adapter - to the second port group, and so on.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualPortGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualPortGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMHostVirtualNic</maml:name>
			<maml:description>
				<maml:para>Specifies the host virtual network adapters to be migrated along with the physical adapter, so that their connectivity is preserved.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HostVirtualNic[]</command:parameterValue>
			<dev:type>
				<maml:name>HostVirtualNic[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVMHostNetworkAdapter = Get-VMhost &quot;MyVMHost&quot; | Get-VMHostNetworkAdapter -Physical -Name vmnic2
Get-VirtualSwitch &quot;MyVirtualSwitch&quot; | Add-VirtualSwitchPhysicalNetworkAdapter -VMHostPhysicalNic $myVMHostNetworkAdapter</dev:code>
  			<dev:remarks>
				<maml:para>Adds a VMHost physical network adapter to the specified distributed switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVMHost = Get-VMHost &#39;MyVMHost&#39;
$myVDSwitch = Get-VDSwitch &#39;MyVDSwitch&#39;
$physicalNic = Get-VMHostNetworkAdapter -VMHost $myVMHost -VirtualSwitch $myVDSwitch -Name &#39;vmnic0&#39;
$virtualNic = Get-VMHostNetworkAdapter -VMHost $myVMHost -VirtualSwitch $myVDSwitch -Name &#39;vmk0&#39;
$myStandardSwitch = Get-VirtualSwitch -VMHost $myVMHost -Name &#39;vSwitch0&#39;
Add-VirtualSwitchPhysicalNetworkAdapter -VirtualSwitch $myStandardSwitch -VMHostPhysicalNic $physicalNic -VMHostVirtualNic $virtualNic</dev:code>
  			<dev:remarks>
				<maml:para>Migrates VMHost physical and virtual network adapters from a distributed virtual switch to a standard virtual switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Add-VirtualSwitchPhysicalNetworkAdapter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VirtualSwitchPhysicalNetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Add-VMHost</command:name>
		<maml:description>
			<maml:para>This cmdlet adds a host to be managed by a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>VMHost</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet adds a host to be managed by a vCenter Server system. The host is added to the datacenter or folder specified by the Location parameter. One of the User/Password and Credential parameters must be provided in order to authenticate with the host. If both are specified, the Credential parameter is used and the User and Password parameters are ignored.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-VMHost</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the host you want to add to a vCenter Server system.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>Specifies the port on the host you want to use for the connection.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies a datacenter or folder where you want to place the host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the virtual machine host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>User</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet runs even if the authenticity of the host SSL certificate cannot be verified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the host you want to add to a vCenter Server system.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Port</maml:name>
			<maml:description>
				<maml:para>Specifies the port on the host you want to use for the connection.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>For ESX 2.x hosts this is the authd port (902 by default). For ESX 3.x and above this is the https port (443 by default).</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies a datacenter or folder where you want to place the host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the virtual machine host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>User</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet runs even if the authenticity of the host SSL certificate cannot be verified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly added VMHost object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Add-VMHost works only if there is a connection to vCenter Server.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myServer = Connect-VIServer -Server 10.23.112.235
Add-VMHost -Server $myServer -Name MyVMHost1 -Location MyDatacenter1 -User MyUsername1 -Password MyPassword1</dev:code>
  			<dev:remarks>
				<maml:para>Adds a VM host to a specified vCenter Server system and provides a username and password for authentication.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myCredentials = Get-VICredentialStoreItem -File &quot;C:\MyCredentials.xml&quot;
$myServer = Connect-VIServer -Server 10.23.112.235
Add-VMHost -Server $myServer -Name MyVMHost1 -Location MyDatacenter1 -Credentials $myCredentials</dev:code>
  			<dev:remarks>
				<maml:para>Adds a VM host to a vCenter Server system and specifies a PSCredential object that contains authentication credentials.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myCredentials = Get-VICredentialStoreItem -File &quot;C:\MyCredentials.xml&quot;
$myServer = Connect-VIServer -Server 10.23.112.235
Add-VMHost -Server $server -Name MyVMHost1 -Location MyDatacenter1 -Credentials $myCredentials -Port MyVMHostPortNumber1 -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Adds a VM host to a vCenter Server system without asking for confirmation and specifies a port on the host for connecting.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myCredentials = Get-VICredentialStoreItem -File &quot;C:\MyCredentials.xml&quot;
$myServer = Connect-VIServer -Server 10.23.112.235
Add-VMHost -Server $myServer -Name MyVMHost1 -Location MyDataCenter1 -Credentials $myCredentials -Port MyVMHostPortNumber1 -Force</dev:code>
  			<dev:remarks>
				<maml:para>Adds a VM host to a vCenter Server system even if the authenticity of the host SSL certificate cannot be verified.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Add-VMHost.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Add-VMHostNtpServer</command:name>
		<maml:description>
			<maml:para>This cmdlet adds the specified NTP servers to the NTP server list of the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>VMHostNtpServer</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet adds the specified NTP servers to the NTP server list of the specified hosts. If a server is already in the list, a non-terminating error is generated and a duplicate is not created.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-VMHostNtpServer</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>NtpServer</maml:name>
				<maml:description>
					<maml:para>Specifies the domain name or the IP address of the NTP server you want to add to the host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies a host to which you want to add the NTP server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>NtpServer</maml:name>
			<maml:description>
				<maml:para>Specifies the domain name or the IP address of the NTP server you want to add to the host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies a host to which you want to add the NTP server.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more System.String objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>Zero or more strings - one for each Ntp server added to a host.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Add-VmHostNtpServer -NtpServer &quot;ntp-server-name.com&quot; -VMHost $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Adds the NTP server with a domain name &quot;ntp-server-name.com&quot; to the virtual machine hosts stored in the $vmhost variable.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Add-VmHostNtpServer -NtpServer &quot;192.168.1.5&quot; -VMHost (Get-VMHost)</dev:code>
  			<dev:remarks>
				<maml:para>Adds the NTP server with an IP address &quot;192.168.1.5&quot; to the virtual machine hosts pipelined through the Get-VMHost cmdlet.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Add-VmHostNtpServer.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostNtpServer</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostNtpServer</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Connect-SrmServer</command:name>
		<maml:description>
			<maml:para>This cmdlet establishes a connection to a vCenter Site Recovery Manager (SRM) server.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Connect</command:verb>
		<command:noun>SrmServer</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet establishes a connection to an SRM server. To access the SRM API, use the ExtensionData property of the output of this command.

The resulting connections are added to the list of default connections in a global variable named &quot;$global:DefaultSrmServers&quot; (if the NotDefault switch was not specified).

If you are already connected to a vCenter Server system, you can connect to its corresponding SRM server by passing that connection to the Server parameter (see Example 1). If you call Connect-SrmServer and do not specify which server to connect to, the cmdlet uses the default vSphere connections.

To connect to an SRM server without connecting its corresponding vCenter Server first, use the SrmServerAddress parameter.

An SRM deployment typically consists of two sites – a protected site and protecting site. Certain operations require that the session is logged to both sites. To create such a session, specify the RemoteCredential parameter. Some operations are valid for execution only at a protected or protecting site. For those cases, establish the session to that site by specifying the SRM server address at that site to the SrmServerAddress parameter or passing a connection to the vSphere server at that site to the Server parameter.

For more information about SRM API operations, see the SRM API reference guide installed with PowerCLI.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Connect-SrmServer</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>User</maml:name>
				<maml:description>
					<maml:para>Specifies the user name that is used to log in to the SRM server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Specifies the password for the connection to the SRM server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>Specifies the port on the server you want to use for the connection. If not specified, a protocol-specific default value is used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Protocol</maml:name>
				<maml:description>
					<maml:para>Specifies the Internet protocol you want to use for the connection. It can be either HTTP or HTTPS. If not specified, HTTPS is used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Specifies the credentials to be used to log in to the SRM server. This parameter is an alternative to the user/password pair of parameters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoteCredential</maml:name>
				<maml:description>
					<maml:para>Specifies the credentials for a remote SRM server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoteUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name that is used to log on in to the remote SRM server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemotePassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password for the connection to the remote SRM server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NotDefault</maml:name>
				<maml:description>
					<maml:para>If specified, the resulting connection is not listed in the list of default connections to SRM servers and must be manually specified when used with a cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IgnoreCertificateErrors</maml:name>
				<maml:description>
					<maml:para>If specified, any errors related to a bad server certificate of the SRM server are ignored.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server system that the SRM server is associated to. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Connect-SrmServer</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>User</maml:name>
				<maml:description>
					<maml:para>Specifies the user name that is used to log in to the SRM server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Specifies the password for the connection to the SRM server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>SrmServerAddress</maml:name>
				<maml:description>
					<maml:para>Specifies the IP address or fully qualified domain name (FQDN) of the SRM server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>Specifies the port on the server you want to use for the connection. If not specified, a protocol-specific default value is used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Protocol</maml:name>
				<maml:description>
					<maml:para>Specifies the Internet protocol you want to use for the connection. It can be either HTTP or HTTPS. If not specified, HTTPS is used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Specifies the credentials to be used to log in to the SRM server. This parameter is an alternative to the user/password pair of parameters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoteCredential</maml:name>
				<maml:description>
					<maml:para>Specifies the credentials for a remote SRM server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoteUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name that is used to log on in to the remote SRM server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemotePassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password for the connection to the remote SRM server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NotDefault</maml:name>
				<maml:description>
					<maml:para>If specified, the resulting connection is not listed in the list of default connections to SRM servers and must be manually specified when used with a cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Locale</maml:name>
				<maml:description>
					<maml:para>If specified, defines the locale of the strings produced by the server for this connection.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IgnoreCertificateErrors</maml:name>
				<maml:description>
					<maml:para>If specified, any errors related to a bad server certificate of the SRM server are ignored.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>User</maml:name>
			<maml:description>
				<maml:para>Specifies the user name that is used to log in to the SRM server.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Specifies the password for the connection to the SRM server.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Port</maml:name>
			<maml:description>
				<maml:para>Specifies the port on the server you want to use for the connection. If not specified, a protocol-specific default value is used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Protocol</maml:name>
			<maml:description>
				<maml:para>Specifies the Internet protocol you want to use for the connection. It can be either HTTP or HTTPS. If not specified, HTTPS is used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Specifies the credentials to be used to log in to the SRM server. This parameter is an alternative to the user/password pair of parameters.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoteCredential</maml:name>
			<maml:description>
				<maml:para>Specifies the credentials for a remote SRM server.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoteUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name that is used to log on in to the remote SRM server.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemotePassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password for the connection to the remote SRM server.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotDefault</maml:name>
			<maml:description>
				<maml:para>If specified, the resulting connection is not listed in the list of default connections to SRM servers and must be manually specified when used with a cmdlet.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IgnoreCertificateErrors</maml:name>
			<maml:description>
				<maml:para>If specified, any errors related to a bad server certificate of the SRM server are ignored.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server system that the SRM server is associated to. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>SrmServerAddress</maml:name>
			<maml:description>
				<maml:para>Specifies the IP address or fully qualified domain name (FQDN) of the SRM server.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Locale</maml:name>
			<maml:description>
				<maml:para>If specified, defines the locale of the strings produced by the server for this connection.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>SrmServer</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-VIServer &quot;myVCServerIp&quot; -User &quot;myUser&quot; -Password &quot;myPassword&quot;
Connect-SrmServer</dev:code>
  			<dev:remarks>
				<maml:para>Connects to a vCenter Server system, that has an SRM server associated with it. Then, invokes the cmdlet without specifying any parameters to establish a connection to the SRM server registered with the connected vCenter Server system. If you have previously connected to other vCenter Server systems configured with SRM server support, this cmdlet invocation will establish a connection to their corresponding SRM servers as well.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-SrmServer -SrmServerAddress 192.0.2.1 -User &quot;myUser&quot; -Password &quot;myPassword&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Connects to an SRM server with an IP address of 192.0.2.1 by passing a valid user name and password.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-VIServer &quot;myVCServerIp&quot; -User &quot;myUser&quot; -Password &quot;myPassword&quot;
Connect-SrmServer -RemoteCredential $myRemoteCredential</dev:code>
  			<dev:remarks>
				<maml:para>Connects to a vCenter Server system associated with an SRM server. Then, establishes a connection to that SRM server by passing valid credentials for connection to the remote SRM server.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-VIServer &quot;myVCServerIp&quot; -User &quot;myUser&quot; -Password &quot;myPassword&quot;
Connect-SrmServer -NotDefault -IgnoreCertificateErrors</dev:code>
  			<dev:remarks>
				<maml:para>Connects to a vCenter Server system, that has an associated SRM server. Then, establishes an SRM server connection by ignoring any errors related to bad server certificates. The newly created SRM server connection is not added to the default list of SRM server connections.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Connect-SrmServer.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disconnect-SrmServer</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Connect-VIServer</command:name>
		<maml:description>
			<maml:para>This cmdlet establishes a connection to a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Connect</command:verb>
		<command:noun>VIServer</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet establishes a connection to a vCenter Server system. The cmdlet starts a new session or re-establishes a previous session with a vCenter Server system using the specified parameters.

When you attempt to connect to a server, the server checks for valid certificates. To set the default behavior of vSphere PowerCLI when no valid certificates are recognized, use the InvalidCertificateAction parameter of the Set-PowerCLIConfiguration cmdlet. For more information about invalid certificates, run &#39;Get-Help about_invalid_certificates&#39;.  

You can have more than one connections to the same server. To disconnect from a server, you need to close all active connections to this server.
vSphere PowerCLI supports working with multiple default servers. If you select this option, every time when you connect to a different server using Connect-VIServer, the new server connection is stored in an array variable together with the previously connected servers, unless the NotDefault parameter is set.  This variable is named $DefaultVIServers and its initial value is an empty array. When you run a cmdlet and the target servers cannot be determined from the specified parameters, the cmdlet runs against all servers stored in the array variable. To remove a server from the $DefaultVIServers variable, you can either use Disconnect-Server to close all active connections to the server, or modify the value of $DefaultVIServers manually.

If you choose to work with a single default server, when you run a cmdlet and the target servers cannot be determined from the specified parameters, the cmdlet runs against the last connected server. This server is stored in the $defaultVIServer variable, which is updated every time you establish a new connection.

To switch between single and multiple default servers working mode, use DefaultServerMode parameter of the Set-PowerCLIConfiguration cmdlet. Working with multiple default servers will be enabled by default in a future release.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Connect-VIServer</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the IP address or the DNS name of the vSphere server to which you want to connect. You can also specify a server by providing its IPv6 address enclosed in square brackets, for example [fe80::250:56ff:feb0:74bd%4].</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>Specifies the port on the server you want to use for the connection.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Protocol</maml:name>
				<maml:description>
					<maml:para>Specifies the Internet protocol you want to use for the connection. It can be either http or https.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the server. For more information about the server authentication logic of PowerCLI, run &quot;help about_server_authentication&quot;. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>User</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the server. If the Credential parameter is also specified, this parameter is ignored. For more information about the server authentication logic of PowerCLI, run &quot;help about_server_authentication&quot;. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.

Note: If the user name contains special characters, enclose the entire string in single quotes (&#39;).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the server. If the Credential parameter is also specified, this parameter is ignored. For more information about the server authentication logic of PowerCLI, run &quot;help about_server_authentication&quot;.

Note: If the password contains special characters, enclose the entire string in single quotes (&#39;).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Session</maml:name>
				<maml:description>
					<maml:para>Specifies the ID of an existing vCenter Server session you want to reestablish.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NotDefault</maml:name>
				<maml:description>
					<maml:para>Indicates that you do not want to include the server to which you connect into the $defaultVIServers variable.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SaveCredentials</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to save the specified credentials in the local credential store.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AllLinked</maml:name>
				<maml:description>
					<maml:para>Indicates whether you want to connect to vCenter Server in linked mode. If you specify $true for the AllLinked parameter and the server to which you want to connect is a part of a federation vCenter Server, you&#39;ll be connected to all members of the linked vCenter Server.

To use this option, PowerCLI must be configured to work in multiple servers connection mode. To configure PowerCLI to support multiple servers connection, specify Multiple for the DefaultVIServerMode parameter of the Set-PowerCLI Configuration cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Suppresses all user interface prompts during the cmdlet execution. Currently these include &#39;Multiple default servers&#39; and &#39;Invalid certificate action&#39;.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Connect-VIServer</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Menu</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to select a connection server from a list of recently connected servers. If Menu is set to $true, the cmdlet retrieves a list of the last visited servers and enters a nested command prompt, so that you can select a server from the list.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the IP address or the DNS name of the vSphere server to which you want to connect. You can also specify a server by providing its IPv6 address enclosed in square brackets, for example [fe80::250:56ff:feb0:74bd%4].</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Port</maml:name>
			<maml:description>
				<maml:para>Specifies the port on the server you want to use for the connection.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Protocol</maml:name>
			<maml:description>
				<maml:para>Specifies the Internet protocol you want to use for the connection. It can be either http or https.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the server. For more information about the server authentication logic of PowerCLI, run &quot;help about_server_authentication&quot;. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>User</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the server. If the Credential parameter is also specified, this parameter is ignored. For more information about the server authentication logic of PowerCLI, run &quot;help about_server_authentication&quot;. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.

Note: If the user name contains special characters, enclose the entire string in single quotes (&#39;).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the server. If the Credential parameter is also specified, this parameter is ignored. For more information about the server authentication logic of PowerCLI, run &quot;help about_server_authentication&quot;.

Note: If the password contains special characters, enclose the entire string in single quotes (&#39;).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Session</maml:name>
			<maml:description>
				<maml:para>Specifies the ID of an existing vCenter Server session you want to reestablish.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotDefault</maml:name>
			<maml:description>
				<maml:para>Indicates that you do not want to include the server to which you connect into the $defaultVIServers variable.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SaveCredentials</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to save the specified credentials in the local credential store.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllLinked</maml:name>
			<maml:description>
				<maml:para>Indicates whether you want to connect to vCenter Server in linked mode. If you specify $true for the AllLinked parameter and the server to which you want to connect is a part of a federation vCenter Server, you&#39;ll be connected to all members of the linked vCenter Server.

To use this option, PowerCLI must be configured to work in multiple servers connection mode. To configure PowerCLI to support multiple servers connection, specify Multiple for the DefaultVIServerMode parameter of the Set-PowerCLI Configuration cmdlet.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Suppresses all user interface prompts during the cmdlet execution. Currently these include &#39;Multiple default servers&#39; and &#39;Invalid certificate action&#39;.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Menu</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to select a connection server from a list of recently connected servers. If Menu is set to $true, the cmdlet retrieves a list of the last visited servers and enters a nested command prompt, so that you can select a server from the list.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>The VIServer object you have connected to</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>VIServer</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>When you connect to a server via Connect-ViServer you allocate resources on this server, and these resources remain opened until Disconnect-ViServer -Force is called on this connection. Closing the PowerCLI process does not close the server resources.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-VIServer -Server 10.23.112.235 -Protocol https -User admin -Password pass</dev:code>
  			<dev:remarks>
				<maml:para>Connects to a vSphere server using the User and Password parameters.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-VIServer Server -Credential $myCredentialsObject -Port 1234</dev:code>
  			<dev:remarks>
				<maml:para>Connects to a vSphere server by using a credential object.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-VIServer &quot;Server&quot; -SessionId $sessionId</dev:code>
  			<dev:remarks>
				<maml:para>Connect by using a server session ID.
Once you connect to a server, you can save the session ID - $serverObject.SessionId, so that you can restore the existing server connection instead of reconnecting.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-VIServer Server</dev:code>
  			<dev:remarks>
				<maml:para>Connect by using integrated authentication. In this case, the credentials you are logged on to your machine must be the same as those for the server.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-VIServer &quot;Server&quot; -User user -Password pass -SaveCredentials</dev:code>
  			<dev:remarks>
				<maml:para>Connect to a server and save the credentials in the credential store. After the credentials are stored, you can connect to the server without specifying them. To get a previously saved credential store item, use the Get-VICredentialStoreItem cmdlet.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 6 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-VIServer -Menu</dev:code>
  			<dev:remarks>
				<maml:para>Connect to a server by choosing the server address from a list of previously connected servers.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 7 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-VIServer &quot;Server&quot; -AllLinked</dev:code>
  			<dev:remarks>
				<maml:para>Connect to a vSphere server which is a part of a federation vCenter Server. This will Connect you to all vSphere servers in the federation as well.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Connect-VIServer.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disconnect-VIServer</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Copy-DatastoreItem</command:name>
		<maml:description>
			<maml:para>This cmdlet copies items between datastores and between a datastore and a local file system provider.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Copy</command:verb>
		<command:noun>DatastoreItem</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet copies items between datastores and between a datastore and a local file system provider.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Copy-DatastoreItem</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Item</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore item you want to copy. You can use a string to provide a relative path to the item in the current provider location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Object[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the destination where you want to copy the datastore item. You can use a string to specify a relative path to the destination object in the current provider location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Object</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates whether to overwrite all items with the same name at the provided destination.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet returns the copied item.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Recurse</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to copy not only the item, but its children items as well.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Item</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore item you want to copy. You can use a string to provide a relative path to the item in the current provider location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Object[]</command:parameterValue>
			<dev:type>
				<maml:name>Object[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies the destination where you want to copy the datastore item. You can use a string to specify a relative path to the destination object in the current provider location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>.</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates whether to overwrite all items with the same name at the provided destination.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$false</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet returns the copied item.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$false</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recurse</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to copy not only the item, but its children items as well.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$false</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more FileInfo or DatastoreItem objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Copy-DatastoreItem vmstore:\Datacenter\Storage1\MyVM\* c:\VMFolder\MyVM\</dev:code>
  			<dev:remarks>
				<maml:para>Copies the contents of a datastore folder in a local folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Copy-DatastoreItem c:\VMFolder\MyVM\* vmstore:\Datacenter\Storage1\NewVM\ -Force</dev:code>
  			<dev:remarks>
				<maml:para>Copies the contents of a local folder into a datastore folder. If the destination folder does not exist, the Force parameter enforces its creation.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Copy-DatastoreItem c:\VMFolder\* vmstore:\Datacenter\Storage1\VMs\ -Force -Recurse</dev:code>
  			<dev:remarks>
				<maml:para>Copies recursively the contents of a local folder into a datastore folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Copy-DatastoreItem Windows.ISO vmstore:\Datacenter\Storage1\ISOFiles\WinXPSP3.iso</dev:code>
  			<dev:remarks>
				<maml:para>Copies a file into a datastore folder and changes the file name.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Copy-DatastoreItem.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Copy-HardDisk</command:name>
		<maml:description>
			<maml:para>Copies a virtual hard disk to another destination.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Copy</command:verb>
		<command:noun>HardDisk</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Copies a virtual hard disk to another destination specified by the DestinationPath parameter. DestinationPath must be a datastore path to the destination folder.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Copy-HardDisk</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>HardDisk</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual hard disk you want to copy.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HardDisk[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>DestinationPath</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore path to the folder where you want to copy the hard disk. The datastore name is included in the path in square braces.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DestinationStorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the hard disk copy. The valid values are Thin, Thick, and EagerZeroedThick. This parameter is only applicable when you are connected to an ESX/ESXi host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates whether to overwrite all disks with the same name at the provided destination.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>HardDisk</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual hard disk you want to copy.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HardDisk[]</command:parameterValue>
			<dev:type>
				<maml:name>HardDisk[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>DestinationPath</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore path to the folder where you want to copy the hard disk. The datastore name is included in the path in square braces.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DestinationStorageFormat</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the hard disk copy. The valid values are Thin, Thick, and EagerZeroedThick. This parameter is only applicable when you are connected to an ESX/ESXi host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualDiskStorageFormat</command:parameterValue>
			<dev:type>
				<maml:name>VirtualDiskStorageFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates whether to overwrite all disks with the same name at the provided destination.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The copied HardDisk object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Supported only on ESX 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-HardDisk -VM $vm | Copy-HardDisk &quot;[Storage1]/&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the hard disks of a virtual machine and copies them into the storage1 root folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Copy-HardDisk -HardDisk $hdd -DestinationPath &quot;[Storage1] vms/disks&quot; -DestinationStorageFormat Thick</dev:code>
  			<dev:remarks>
				<maml:para>Copies the $hdd hard disk to the &quot;vms/disks&quot;location on storage1 and changes the storage format of the destination disk to Thick.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Copy-HardDisk.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Copy-VMGuestFile</command:name>
		<maml:description>
			<maml:para>This cmdlet copies files and folders from and to the guest OS of the specified virtual machines using VMware Tools.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Copy</command:verb>
		<command:noun>VMGuestFile</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet copies files and folders from and to the guest OS of the specified virtual machines using VMware Tools. If a file with the same name exists in the destination directory, it is overwritten. Use the GuestUser and GuestPassword, or GuestCredential parameters to authenticate when connecting to the VMware Tools. To authenticate with the host, use the HostUser and HostPassword, or HostCredential parameters. SSPI is not supported. For a list of supported operating systems, see the PowerCLI User&#39;s Guide.

To run this cmdlet against vCenter Server/ESX/ESXi versions earlier than 5.0, you need to meet the following requirements:
*You must run the cmdlet on the 32-bit version of Windows PowerShell.
*You must have access to the ESX that hosts the virtual machine over TCP port 902.
*For vCenter Server/ESX/ESXi versions earlier than 4.1, you need VirtualMachine.Interact.ConsoleInteract privilege. For vCenter Server/ESX/ESXi 4.1 and later, you need VirtualMachine.Interact.GuestControl privilege.

To run this cmdlet against vCenter Server/ESXi 5.0 and later, you need VirtualMachine.GuestOperations.Modify privilege.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Copy-VMGuestFile</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByPropertyName)" position = "1" >
				<maml:name>Source</maml:name>
				<maml:description>
					<maml:para>Specifies the file you want to copy. If the file is on a virtual machine, specifies the absolute file path. Relative file paths are supported only when copying files from a local storage. Wildcards are allowed only at the end of the source path. If you are copying files from the guest operating system of a virtual machine to a local directory, the Source parameter supports wildcards only on vCenter Server 5.0 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the destination path where you want to copy the file. If the destination points to a virtual machine, specify the absolute file path. Relative destination paths are supported only when copying files to a local storage.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>LocalToGuest</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to copy a file from a local directory to the guest operating system of the virtual machine.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that the non-existing directories in the specified destination path are automatically created.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine where the file is located.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host where the file is to be copied. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the host where the file is to be copied. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the host where the file is to be copied. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS where the file to be copied is located.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the guest OS where the file to be copied is located.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the guest OS where the file to be copied is located.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ToolsWaitSecs</maml:name>
				<maml:description>
					<maml:para>Specifies the time in seconds to wait for a response from the VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Copy-VMGuestFile</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByPropertyName)" position = "1" >
				<maml:name>Source</maml:name>
				<maml:description>
					<maml:para>Specifies the file you want to copy. If the file is on a virtual machine, specifies the absolute file path. Relative file paths are supported only when copying files from a local storage. Wildcards are allowed only at the end of the source path. If you are copying files from the guest operating system of a virtual machine to a local directory, the Source parameter supports wildcards only on vCenter Server 5.0 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the destination path where you want to copy the file. If the destination points to a virtual machine, specify the absolute file path. Relative destination paths are supported only when copying files to a local storage.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestToLocal</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to copy a file from the guest operating system of the virtual machine to a local directory.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that the non-existing directories in the specified destination path are automatically created.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine where the file is located.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host where the file is to be copied. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the host where the file is to be copied. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the host where the file is to be copied. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS where the file to be copied is located.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the guest OS where the file to be copied is located.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the guest OS where the file to be copied is located.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ToolsWaitSecs</maml:name>
				<maml:description>
					<maml:para>Specifies the time in seconds to wait for a response from the VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Source</maml:name>
			<maml:description>
				<maml:para>Specifies the file you want to copy. If the file is on a virtual machine, specifies the absolute file path. Relative file paths are supported only when copying files from a local storage. Wildcards are allowed only at the end of the source path. If you are copying files from the guest operating system of a virtual machine to a local directory, the Source parameter supports wildcards only on vCenter Server 5.0 and later.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies the destination path where you want to copy the file. If the destination points to a virtual machine, specify the absolute file path. Relative destination paths are supported only when copying files to a local storage.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LocalToGuest</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to copy a file from a local directory to the guest operating system of the virtual machine.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that the non-existing directories in the specified destination path are automatically created.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="3">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine where the file is located.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host where the file is to be copied. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the host where the file is to be copied. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the host where the file is to be copied. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS where the file to be copied is located.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the guest OS where the file to be copied is located.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the guest OS where the file to be copied is located.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ToolsWaitSecs</maml:name>
			<maml:description>
				<maml:para>Specifies the time in seconds to wait for a response from the VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>20</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestToLocal</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to copy a file from the guest operating system of the virtual machine to a local directory.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Copy-VMGuestFile -Source c:\text.txt -Destination c:\temp\ -VM VM -GuestToLocal -GuestUser user -GuestPassword pass2</dev:code>
  			<dev:remarks>
				<maml:para>Copies the text.txt file from the guest OS system to the local Temp directory.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Get-VM -Name VM

Get-Item &quot;c:\FolderToCopy\*.*&quot; | Copy-VMGuestFile -Destination &quot;c:\MyFolder&quot; -VM $vm -LocalToGuest -GuestUser -GuestPassword pass2</dev:code>
  			<dev:remarks>
				<maml:para>Copies files from a local machine to a guest operating system.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Copy-VMGuestFile.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Disconnect-SrmServer</command:name>
		<maml:description>
			<maml:para>This cmdlet closes the connection to one or more vCenter Site Recovery Manager (SRM) servers.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Disconnect</command:verb>
		<command:noun>SrmServer</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet logs out and closes the connection to one or more SRM servers. In PowerCLI, you can have multiple connections to a server. In order to disconnect from a server, you must close all active connections to it. By default, Disconnect-SrmServer closes only the last connection to the specified server. To close all active connections to a server, use the Force parameter or run the cmdlet for each connection.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disconnect-SrmServer</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the SRM servers you want to disconnect from.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >SrmServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to close all active connections to the specified SRM server and disconnect from it. If the value is $false, the cmdlet closes only the last connection to the specified server and you must run Disconnect-SrmServer for each active connection to this server in order to disconnect from it.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the SRM servers you want to disconnect from.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">SrmServer[]</command:parameterValue>
			<dev:type>
				<maml:name>SrmServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to close all active connections to the specified SRM server and disconnect from it. If the value is $false, the cmdlet closes only the last connection to the specified server and you must run Disconnect-SrmServer for each active connection to this server in order to disconnect from it.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Disconnect-SrmServer -Server &#39;*&#39; -Force</dev:code>
  			<dev:remarks>
				<maml:para>Disconnects all SRM server connections.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$srmServer = Connect-SrmServer -SrmServerAddress &quot;mySrmServerIp&quot; -User &quot;mySrmUSer&quot; -Password &quot;mySrmPassword&quot;
Disconnect-SrmServer -Server $srmServer</dev:code>
  			<dev:remarks>
				<maml:para>Connects to a specified SRM server by passing the local site credentials for login and then invokes the cmdlet to disconnect from the that server.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Disconnect-SrmServer -Server $global:DefaultSrmServers -Force</dev:code>
  			<dev:remarks>
				<maml:para>Logs out and closes all connections to the SRM servers included in the default list of connections established to SRM servers.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Disconnect-SrmServer.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Connect-SrmServer</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Disconnect-VIServer</command:name>
		<maml:description>
			<maml:para>This cmdlet closes the connection to a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Disconnect</command:verb>
		<command:noun>VIServer</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet closes the connection to a vCenter Server system. In PowerCLI, you can have multiple connections to a server. In order to disconnect from a server, you must close all active connections to it. By default, Disconnect-VIServer closes only the last connection to the specified server. To close all active connections to a server, use the Force parameter or run the cmdlet for each connection. When a server is disconnected, it is removed from the default servers list. For more information about default servers, see the description of Connect-VIServer.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disconnect-VIServer</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems you want to disconnect from.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to close all active connections to the specified server and disconnect from it. If the value is $false, the cmdlet closes only the last connection to the specified server and you must run Disconnect-VIServer for each active connection to this server in order to disconnect from it.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems you want to disconnect from.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to close all active connections to the specified server and disconnect from it. If the value is $false, the cmdlet closes only the last connection to the specified server and you must run Disconnect-VIServer for each active connection to this server in order to disconnect from it.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$Server = Connect-VIServer 10.23.112.235

Disconnect-VIServer -Server $Server</dev:code>
  			<dev:remarks>
				<maml:para>Connects to a server with an IP address 10.23.112.235 and saves the returned VIServer object in the $Server variable. Then disconnects from the specified server.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Disconnect-VIServer -Server $global:DefaultVIServers -Force</dev:code>
  			<dev:remarks>
				<maml:para>Closes all connections to the default servers.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Disconnect-VIServer -Server * -Force</dev:code>
  			<dev:remarks>
				<maml:para>Disconnects all server connections.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Disconnect-VIServer.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Connect-VIServer</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Dismount-Tools</command:name>
		<maml:description>
			<maml:para>This cmdlet dismounts the VMware Tools installer CD.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Dismount</command:verb>
		<command:noun>Tools</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet dismounts the VMware Tools installer CD from one or more virtual machines operating systems specified by the VM and Guest parameters. To specify a server different from the default one, use the Server parameter. The virtual machines must be powered on.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Dismount-Tools</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Guest</maml:name>
				<maml:description>
					<maml:para>Specifies the guest operating systems from which you want to remove the VMware Tools.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuest[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Dismount-Tools</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines from which you want to remove the VMware Tools.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which the search for virtual machine names passed by the VM parameter is performed. If no value is given to this parameter, the search for the virtual machine names is performed on the default server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Guest</maml:name>
			<maml:description>
				<maml:para>Specifies the guest operating systems from which you want to remove the VMware Tools.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuest[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuest[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines from which you want to remove the VMware Tools.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which the search for virtual machine names passed by the VM parameter is performed. If no value is given to this parameter, the search for the virtual machine names is performed on the default server.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Dismount-Tools VM</dev:code>
  			<dev:remarks>
				<maml:para>Dismounts the VMware Tools from the VM virtual machine. The virtual machine must be powered on.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMGuest VM | Dismount-Tools</dev:code>
  			<dev:remarks>
				<maml:para>Dismounts the VMware Tools from the virtual machine specified by its guest operating system. The virtual machine must be powered on.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Dismount-Tools.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Update-Tools</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Mount-Tools</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Export-VApp</command:name>
		<maml:description>
			<maml:para>This cmdlet exports a vApp or a single virtual machine to the specified destination.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>VApp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet exports a vApp or a single virtual machine to the specified destination. If no destination is specified, the cmdlet creates a new folder in the current working directory and exports the vApp or the virtual machine to it. The name of the new folder is the same as the name of the vApp or the virtual machine as it appears in vCenter Server.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Export-VApp</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies a destination path to the file system location where you want to export the vApp or the virtual machine. If the value of the Destination parameter is a folder, the vApp or the virtual machine is exported to a container folder (OVF). If the destination is a file, the vApp or the virtual machine is exported in OVA format.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VApp</maml:name>
				<maml:description>
					<maml:para>Specifies the vApp that you want to export.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VApp[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the exported vApp or virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet overwrites the existing destination files and creates directories to complete the specified file path.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Format</maml:name>
				<maml:description>
					<maml:para>Specifies the file format of the specified vApp or virtual machine. The default format is OVF. The valid values are OVF and OVA.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VAppStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CreateSeparateFolder</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to create a separate folder for each vApp or virtual machine.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Provides a description of the exported vApp or virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Export-VApp</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies a destination path to the file system location where you want to export the vApp or the virtual machine. If the value of the Destination parameter is a folder, the vApp or the virtual machine is exported to a container folder (OVF). If the destination is a file, the vApp or the virtual machine is exported in OVA format.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine that you want to export.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the exported vApp or virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet overwrites the existing destination files and creates directories to complete the specified file path.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Format</maml:name>
				<maml:description>
					<maml:para>Specifies the file format of the specified vApp or virtual machine. The default format is OVF. The valid values are OVF and OVA.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VAppStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CreateSeparateFolder</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to create a separate folder for each vApp or virtual machine.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Provides a description of the exported vApp or virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies a destination path to the file system location where you want to export the vApp or the virtual machine. If the value of the Destination parameter is a folder, the vApp or the virtual machine is exported to a container folder (OVF). If the destination is a file, the vApp or the virtual machine is exported in OVA format.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VApp</maml:name>
			<maml:description>
				<maml:para>Specifies the vApp that you want to export.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VApp[]</command:parameterValue>
			<dev:type>
				<maml:name>VApp[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the exported vApp or virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet overwrites the existing destination files and creates directories to complete the specified file path.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Format</maml:name>
			<maml:description>
				<maml:para>Specifies the file format of the specified vApp or virtual machine. The default format is OVF. The valid values are OVF and OVA.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VAppStorageFormat</command:parameterValue>
			<dev:type>
				<maml:name>VAppStorageFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreateSeparateFolder</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to create a separate folder for each vApp or virtual machine.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Provides a description of the exported vApp or virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine that you want to export.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more FileInfo objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>A FileInfo object for the created file</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VApp -Name &quot;MyVApp*&quot; | Export-VApp -Destination &quot;C:\vapps\&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all vApps whose names start with &quot;MyVApp&quot; and exports them to the specified path.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVApp = Get-VApp -Name &quot;MyVApp1&quot; 
Export-VApp -Destination &quot;C:\NewFolder\&quot; -VApp $myVApp -Name &quot;EMail_vApp&quot; -Force</dev:code>
  			<dev:remarks>
				<maml:para>Exports the vApp in the $myVApp variable to the specified location and assigns a name to the folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVApp = Get-VApp -Name &quot;MyVApp1&quot; 
Export-VApp -vApp $myVApp -Destination &quot;C:\vapps\Vapp\&quot; -Force -CreateSeparateFolder:$false</dev:code>
  			<dev:remarks>
				<maml:para>Exports the vApp in the $myVApp variable to the specified location without creating a separate folder for each virtual appliance.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVApp = Get-VApp -Name &quot;MyVApp1&quot; 
Export-VApp -vApp $myVApp -Destination &quot;C:\vapps\myVapp\&quot; -Format Ova</dev:code>
  			<dev:remarks>
				<maml:para>Exports a vApp in OVA format.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM -Name MyVM* | Export-VApp -Destination &quot;C:\MyVMs\&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all virtual machines whose names start with &quot;MyVM&quot; and exports them to the specified path.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 6 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVM = New-VM -Name MyVM1 -VMHost MyVMHost1
Export-VApp -Destination &quot;C:\MyVMs\&quot; -VM $myVM -Format Ova</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new virtual machine and exports it in OVA format.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 7 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVM = New-VM -Name &quot;MyVM1&quot; -VMHost MyVMHost1
Get-VM -Name MyVM | Export-VApp -Destination &quot;C:\MyVMs\&quot;
Export-VApp -Destination &quot;C:\MyVMs\&quot; -VM $myVM -Force</dev:code>
  			<dev:remarks>
				<maml:para>Exports a virtual machine to the same path twice. The second time forces an override of the previously exported files.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Export-VApp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Export-VMHostProfile</command:name>
		<maml:description>
			<maml:para>This cmdlet exports the specified host profile to a file.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>VMHostProfile</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet exports the specified host profile to a file that is in the VMware profile format (.vpf). If the value of the Force parameter is $false and the destination file exists or the target parent directory does not exist, a terminating error is generated. If the value of the Force parameter is $true, the existing destination file is overwritten and directories are created to complete the specified file path.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Export-VMHostProfile</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>FilePath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the file where you want to export the host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Profile</maml:name>
				<maml:description>
					<maml:para>Specifies the host profile you want to export.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHostProfile</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet overwrites the existing destination files and creates directories to complete the specified file path.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIServer</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>FilePath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the file where you want to export the host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Profile</maml:name>
			<maml:description>
				<maml:para>Specifies the host profile you want to export.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHostProfile</command:parameterValue>
			<dev:type>
				<maml:name>VMHostProfile</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet overwrites the existing destination files and creates directories to complete the specified file path.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIServer</command:parameterValue>
			<dev:type>
				<maml:name>VIServer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more FileInfo objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>A FileInfo object for the created file</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$profile = (Get-VMHostProfile -Name Profile )[0]

Export-VMHostProfile -FilePath export.prf -Profile $profile -Force</dev:code>
  			<dev:remarks>
				<maml:para>Exports the selected host profile to the export.prf file.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Export-VMHostProfile.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Invoke-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Test-VMHostProfileCompliance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Format-VMHostDiskPartition</command:name>
		<maml:description>
			<maml:para>This cmdlet formats a new VMFS (Virtual Machine File System) on each of the specified host disk partitions.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Format</command:verb>
		<command:noun>VMHostDiskPartition</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet formats a new VMFS (Virtual Machine File System) on each of the specified host disk partitions.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Format-VMHostDiskPartition</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>VolumeName</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new VMFS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHostDiskPartition</maml:name>
				<maml:description>
					<maml:para>Specifies the disk partitions on which you want to format a new VMFS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostDiskPartition[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>VolumeName</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new VMFS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHostDiskPartition</maml:name>
			<maml:description>
				<maml:para>Specifies the disk partitions on which you want to format a new VMFS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostDiskPartition[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostDiskPartition[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more formatted VMHostDiskPartition objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost Host | Get-VMHostDisk | Get-VMHostDiskPartition | ? {.Type -eq &quot;Ntfs&quot;} | Format-VMHostDiskPartition -VolumeName &quot;NewStorage&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Formats the NTFS disk partitions of a host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Format-VMHostDiskPartition.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostDiskPartition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-AdvancedSetting</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the advanced settings for the specified entity.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>AdvancedSetting</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the advanced settings for the specified entity.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-AdvancedSetting</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies the entities for which you want to retrieve the advanced settings. This parameter accepts VIServer, VirtualMachine, VMHost, DatastoreCluster, and Cluster objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the advanced settings you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies the entities for which you want to retrieve the advanced settings. This parameter accepts VIServer, VirtualMachine, VMHost, DatastoreCluster, and Cluster objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIObject[]</command:parameterValue>
			<dev:type>
				<maml:name>VIObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the advanced settings you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more AdvancedSetting objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AdvancedSetting -Entity (Get-Cluster -Name Cluster)</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the advanced settings of the cluster named Cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AdvancedSetting -Entity (Get-Cluster -Name Cluster) -Name SettingName</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the advanced setting named SettingName of the Cluster cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AdvancedSetting -Entity Server -Name &#39;*smtp*&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve all smtp settings for the specified server.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-AdvancedSetting.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-AlarmAction</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the actions of the specified alarm definitions.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>AlarmAction</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the actions of the specified alarm definitions.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-AlarmAction</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>AlarmDefinition</maml:name>
				<maml:description>
					<maml:para>Specifies the alarm definitions for which you want to retrieve the configured actions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AlarmDefinition[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ActionType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the alarm actions you want to retrieve. The valid values are SendEmail, ExecuteScript, and Send SNMP.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ActionType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>AlarmDefinition</maml:name>
			<maml:description>
				<maml:para>Specifies the alarm definitions for which you want to retrieve the configured actions.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">AlarmDefinition[]</command:parameterValue>
			<dev:type>
				<maml:name>AlarmDefinition[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ActionType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the alarm actions you want to retrieve. The valid values are SendEmail, ExecuteScript, and Send SNMP.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ActionType[]</command:parameterValue>
			<dev:type>
				<maml:name>ActionType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more AlarmAction objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmDefinition -Name &quot;Host processor status&quot; | Get-AlarmAction -ActionType &quot;ExecuteScript&quot;, &quot;SendSNMP&quot;, &quot;SendEmail&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Extract all PowerCLI supported alarm actions for the default alarm &quot;Host processor status&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmAction -AlarmDefinition &quot;Host processor status&quot; -ActionType &quot;SendSNMP&quot; -Server &#39;server IP&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Extract the alarm actions for the default alarm &quot;Host processor status&quot; by specifying the alarm by name.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-AlarmAction.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-AlarmActionTrigger</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the actions that trigger the specified alarm actions.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>AlarmActionTrigger</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the actions that trigger the specified alarm actions.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-AlarmActionTrigger</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>AlarmAction</maml:name>
				<maml:description>
					<maml:para>Filters the trigger actions by the alarm actions they trigger.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AlarmAction[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>AlarmAction</maml:name>
			<maml:description>
				<maml:para>Filters the trigger actions by the alarm actions they trigger.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">AlarmAction[]</command:parameterValue>
			<dev:type>
				<maml:name>AlarmAction[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more AlarmActionTrigger objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmAction -AlarmDefinition (Get-AlarmDefinition | select -First 1) | Get-AlarmActionTrigger</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the action triggers for the actions of the first returned alarm.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-AlarmActionTrigger.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-AlarmDefinition</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the available alarm definitions.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>AlarmDefinition</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the available alarm definitions.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-AlarmDefinition</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the alarms you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the alarms you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Filters the alarm definitions by the entities to which they are defined. This parameter accepts InventoryItem, Datastore, and DatastoreCluster objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve only the enabled alarm definitions.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the alarms you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the alarms you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Filters the alarm definitions by the entities to which they are defined. This parameter accepts InventoryItem, Datastore, and DatastoreCluster objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIObject[]</command:parameterValue>
			<dev:type>
				<maml:name>VIObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve only the enabled alarm definitions.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more AlarmDefinition objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmDefinition -Entity (Get-Folder -NoRecursion) -Name &quot;Host connection and power state&quot; -Enabled:$true</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve the enabled alarms named &quot;Host connection and power state&quot; for the available folders.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmDefinition -Server Server1, Server2</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the alarms for the specified servers.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-AlarmDefinition.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Annotation</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves annotations.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Annotation</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves annotations. An annotation is a user-defined description field of one or more vSphere objects.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Annotation</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>CustomAttribute</maml:name>
				<maml:description>
					<maml:para>Specifies the custom attributes whose annotations you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >CustomAttribute[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies the entities whose annotations you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >InventoryItem</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Annotation</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies the entities whose annotations you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >InventoryItem</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the annotations you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>CustomAttribute</maml:name>
			<maml:description>
				<maml:para>Specifies the custom attributes whose annotations you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CustomAttribute[]</command:parameterValue>
			<dev:type>
				<maml:name>CustomAttribute[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies the entities whose annotations you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">InventoryItem</command:parameterValue>
			<dev:type>
				<maml:name>InventoryItem</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the annotations you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Annotation objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Cluster Cluster | Get-Annotation -CustomAttribute PhysicalLocation</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the annotation of the PhysicalLocation custom attribute for Cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Annotation.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Annotation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-CDDrive</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves virtual CD drives.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>CDDrive</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet returns a set of virtual CD drives  that belong to the virtual machines, templates, and snapshots specified by the  VirtualMachine, Template, and Snapshot parameters. At least one of these parameters must be provided. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-CDDrive</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the CD drives you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines from which you want to retrieve virtual CD drives.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine templates from which you want to retrieve virtual CD drives.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Template[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Snapshot</maml:name>
				<maml:description>
					<maml:para>Specifies the snapshots from which you want to retrieve virtual CD drives.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Snapshot[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the CD drives you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the CD drives you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines from which you want to retrieve virtual CD drives.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine templates from which you want to retrieve virtual CD drives.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Template[]</command:parameterValue>
			<dev:type>
				<maml:name>Template[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>Snapshot</maml:name>
			<maml:description>
				<maml:para>Specifies the snapshots from which you want to retrieve virtual CD drives.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Snapshot[]</command:parameterValue>
			<dev:type>
				<maml:name>Snapshot[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the CD drives you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more CDDrive objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM -Name VM | Get-CDDrive</dev:code>
  			<dev:remarks>
				<maml:para>Connects to a vSphere server and retrieves the CD drive of the virtual machine named VM.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-CDDrive.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Cluster</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the clusters available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Cluster</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the clusters available on a vCenter Server system. Returns a set of clusters that correspond to the filter criteria defined by the cmdlet parameters. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Cluster</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the clusters you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies vSphere container objects (such as folders, datacenters, and clusters) you want to search for clusters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIContainer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoRecursion</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the clusters that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Cluster</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies objects to retrieve one or more Cluster objects that are related to them. This parameter accepts OMResource​ objects.​</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ClusterRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Cluster</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the clusters you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies virtual machines to filter the clusters that contain at least one of them.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies hosts to filter the clusters that contain at least one of them.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the clusters that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Cluster</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the clusters you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the clusters you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies vSphere container objects (such as folders, datacenters, and clusters) you want to search for clusters.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIContainer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoRecursion</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Returns only the clusters that are associated with any of the specified tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies objects to retrieve one or more Cluster objects that are related to them. This parameter accepts OMResource​ objects.​</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ClusterRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>ClusterRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies virtual machines to filter the clusters that contain at least one of them.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies hosts to filter the clusters that contain at least one of them.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the clusters you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Cluster objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Cluster -Location Folder</dev:code>
  			<dev:remarks>
				<maml:para>Get a list of the available clusters in the Folder folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Cluster.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-ContentLibraryItem</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves catalog items from the content library.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ContentLibraryItem</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves catalog items from the content library. Returns a set of catalog items that correspond to the filter criteria defined by the cmdlet parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ContentLibraryItem</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the catalog items you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>ItemType</maml:name>
				<maml:description>
					<maml:para>Filters the catalog items by type.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ContentLibraryItem</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the catalog items you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the catalog items you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>ItemType</maml:name>
			<maml:description>
				<maml:para>Filters the catalog items by type.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the catalog items you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more ContentLibraryItem objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-ContentLibraryItem -Type &quot;OVF&quot; -Name &quot;Windows*&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves content library templates of the specified type that match the specified name.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-ContentLibraryItem.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-CustomAttribute</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves custom attributes.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>CustomAttribute</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves custom attributes. A custom attribute is a user-defined description field of one or more vSphere objects.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-CustomAttribute</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the custom attributes you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the custom attributes you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>TargetType</maml:name>
				<maml:description>
					<maml:para>Specifies a target type to filter the custom attributes by the type of objects to which they can be applied. The valid values are VirtualMachine, ResourcePool, Folder, VMHost, Cluster, Datacenter, and $null. If the value is $null, the custom attribute is global and applies to all target types.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >CustomAttributeTargetType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Global</maml:name>
				<maml:description>
					<maml:para>Indicates that only global custom attributes are retrieved. A global custom attribute can be applied both to hosts and virtual machines.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the custom attributes you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the custom attributes you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>TargetType</maml:name>
			<maml:description>
				<maml:para>Specifies a target type to filter the custom attributes by the type of objects to which they can be applied. The valid values are VirtualMachine, ResourcePool, Folder, VMHost, Cluster, Datacenter, and $null. If the value is $null, the custom attribute is global and applies to all target types.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CustomAttributeTargetType[]</command:parameterValue>
			<dev:type>
				<maml:name>CustomAttributeTargetType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Global</maml:name>
			<maml:description>
				<maml:para>Indicates that only global custom attributes are retrieved. A global custom attribute can be applied both to hosts and virtual machines.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more CustomAttribute objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-CustomAttribute -Global</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all global custom attributes.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-CustomAttribute -TargetType &quot;VirtualMachine&quot;, &quot;VMHost&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all custom attributes of type VirtualMachine and VMHost.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-CustomAttribute -Name &quot;Creation*&quot; -Global</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves only global custom attributes that match the specified name pattern.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-CustomAttribute.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Annotation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Annotation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Datacenter</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the datacenters available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Datacenter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the datacenters available on a vCenter Server system. Returns a set of datacenters that correspond to the filter criteria defined by the cmdlet parameters. By default, the cmdlet searches recursively from any provided starting point. In this case, if the location is not explicitly specified, the search includes the root folder and all other inventory items on the root folder level. If the command runs with the NoRecursion parameter set to $true, and the location is not specified, only the root folder is searched and no datacenters are returned. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Datacenter</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the datacenters you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies vSphere container objects (such as folders) you want to search for datacenters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Folder[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoRecursion</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the datacenters that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Datacenter</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the datacenters you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies virtual machines to filter the datacenters that contain at least one of them.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Specifies clusters to filter the datacenters that contain at least one of them.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Cluster[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies hosts to filter the datacenters that contain at least one of them.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the datacenters that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Datacenter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies objects to retrieve one or more Datacenter objects that are related to them. This parameter accepts OMResource​ objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DatacenterRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Datacenter</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the datacenters you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the datacenters you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies vSphere container objects (such as folders) you want to search for datacenters.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Folder[]</command:parameterValue>
			<dev:type>
				<maml:name>Folder[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoRecursion</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Returns only the datacenters that are associated with any of the specified tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies virtual machines to filter the datacenters that contain at least one of them.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Specifies clusters to filter the datacenters that contain at least one of them.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Cluster[]</command:parameterValue>
			<dev:type>
				<maml:name>Cluster[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies hosts to filter the datacenters that contain at least one of them.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies objects to retrieve one or more Datacenter objects that are related to them. This parameter accepts OMResource​ objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DatacenterRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>DatacenterRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the datacenters you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Datacenter objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Datacenter -Name Datacenter*</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a list of all datacenters on the server, whose names begin with &quot;Datacenter&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Datacenter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Datastore</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the datastores available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Datastore</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the datastores available on a vCenter Server system. Returns a set of datastores that correspond to the filter criteria defined by the cmdlet parameters. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Datastore</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the datastores you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies vSphere container objects that you want to search for datastores. This parameter accepts Datacenter, Folder, and DatastoreCluster objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies objects to retrieve one or more Datastore objects that are related to them. This parameter accepts vSphere VirtualMachine, VMHost, Datacenter, DatastoreCluster, Cluster, Folder, HardDisk, and OMResource objects, as well as vCloud Datastore objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DatastoreRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Refresh</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet first refreshes the storage system information and then retrieves the specified datastores.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the datastores that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Datastore</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the datastores you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Refresh</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet first refreshes the storage system information and then retrieves the specified datastores.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the datastores you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies vSphere container objects that you want to search for datastores. This parameter accepts Datacenter, Folder, and DatastoreCluster objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIObject[]</command:parameterValue>
			<dev:type>
				<maml:name>VIObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies objects to retrieve one or more Datastore objects that are related to them. This parameter accepts vSphere VirtualMachine, VMHost, Datacenter, DatastoreCluster, Cluster, Folder, HardDisk, and OMResource objects, as well as vCloud Datastore objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DatastoreRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>DatastoreRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Refresh</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet first refreshes the storage system information and then retrieves the specified datastores.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Returns only the datastores that are associated with any of the specified tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the datastores you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Datastore objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost -Name VMHost1, VMHost2 | Get-Datastore</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves datastores from the VMHost1 and VMHost2 hosts.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Datastore -Name MyDatastore* -Location MyDatacenter</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the datastores from the MyDatacenter datacenter that have names starting with MyDatastore.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm1 = Get-VM -Name myVM1
$vm2 = Get-VM -Name myVM2
Get-Datastore -RelatedObject $vm1, $vm2</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the datastores for a specified array of virtual machines.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVMHost = Get-VMHost -Name MyVMHost
Get-Datastore -VMHost $myVMHost -Refresh</dev:code>
  			<dev:remarks>
				<maml:para>Refreshes the host storage system and retrieves its datastores.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Datastore.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-DatastoreCluster</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves datastore clusters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>DatastoreCluster</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves datastore clusters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-DatastoreCluster</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the datastore clusters you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the datastore clusters you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the datacenters and folders from which you want to retrieve datastore clusters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIContainer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Filters the datastore clusters by the virtual machines located in them.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Filters the datastore clusters by the virtual machine templates located in them.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Template[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Filters the datastore clusters by the datastores located in them.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datastore[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the datastore clusters that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-DatastoreCluster</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies objects to retrieve one or more DatastoreCluster objects that are related to them. This parameter accepts OMResource​ objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DatastoreClusterRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the datastore clusters you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the datastore clusters you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies the datacenters and folders from which you want to retrieve datastore clusters.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIContainer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Filters the datastore clusters by the virtual machines located in them.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Filters the datastore clusters by the virtual machine templates located in them.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Template[]</command:parameterValue>
			<dev:type>
				<maml:name>Template[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Filters the datastore clusters by the datastores located in them.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Datastore[]</command:parameterValue>
			<dev:type>
				<maml:name>Datastore[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Returns only the datastore clusters that are associated with any of the specified tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies objects to retrieve one or more DatastoreCluster objects that are related to them. This parameter accepts OMResource​ objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DatastoreClusterRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>DatastoreClusterRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more DatastoreCluster objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-DatastoreCluster</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all datastore clusters.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-DatastoreCluster -Name DatastoreCluster1</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a datastore cluster by name.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM -Name WebServerVM | Get-DatastoreCluster</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves datastore clusters through filtering by virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-DatastoreCluster.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-DrsRecommendation</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the available DRS recommendations from the provided clusters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>DrsRecommendation</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the available DRS recommendations from the provided clusters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-DrsRecommendation</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Specifies the clusters whose DRS recommendations you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Cluster[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Refresh</maml:name>
				<maml:description>
					<maml:para>Indicates that you want the cmdlet to refresh the information about the DRS recommendations before retrieving it.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Priority</maml:name>
				<maml:description>
					<maml:para>Specifies the priority of the DRS recommendations you want to retrieve. The valid values range from 1 to 5.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Int32[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Specifies the clusters whose DRS recommendations you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Cluster[]</command:parameterValue>
			<dev:type>
				<maml:name>Cluster[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Refresh</maml:name>
			<maml:description>
				<maml:para>Indicates that you want the cmdlet to refresh the information about the DRS recommendations before retrieving it.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Priority</maml:name>
			<maml:description>
				<maml:para>Specifies the priority of the DRS recommendations you want to retrieve. The valid values range from 1 to 5.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			<dev:type>
				<maml:name>Int32[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more DrsRecommendation objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Cluster Cluster | Get-DrsRecommendation -Priority 4,5</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the DRS recommendations with priorities 4 and 5 from the Cluster cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-DrsRecommendation -Cluster Cluster -Refresh</dev:code>
  			<dev:remarks>
				<maml:para>Refreshes and retrieves information about the DRS recommendations from the Cluster cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-DrsRecommendation.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Invoke-DrsRecommendation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-DrsRule</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the list of DRS rules for the specified clusters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>DrsRule</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the list of DRS rules for the specified clusters. Each rule defines the virtual machines that can run on the same host (affinity rule) or must run on different hosts (anti-affinity).

Note: To retrieve VMHostAffinity rules, you need to state this explicitly by using the Type or the VMHost parameter. Otherwise, this cmdlet returns VMAffinity and VMAntiAffinity rules.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-DrsRule</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the DRS rule you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Specifies the clusters for which you want to retrieve the DRS rules.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Cluster[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies virtual machines to filter the DRS rules that reference them. Passing values to this parameter through a pipeline is deprecated and will be removed in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of DRS rules you want to retrieve. This parameter accepts VMAntiAffinity, VMAffinity, and VMHostAffinity values. You cannot set this parameter, when the VMHost parameter is specified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ResourceSchedulingRuleType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-DrsRule</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the DRS rule you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Specifies the clusters for which you want to retrieve the DRS rules.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Cluster[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies virtual machines to filter the DRS rules that reference them. Passing values to this parameter through a pipeline is deprecated and will be removed in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies VM hosts to filter the DRS rules that reference them. When this parameter is specified, the cmdlet returns only VMHostAffinity rules. You cannot set this parameter, when the Type parameter is specified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the DRS rule you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Specifies the clusters for which you want to retrieve the DRS rules.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Cluster[]</command:parameterValue>
			<dev:type>
				<maml:name>Cluster[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="3">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies virtual machines to filter the DRS rules that reference them. Passing values to this parameter through a pipeline is deprecated and will be removed in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of DRS rules you want to retrieve. This parameter accepts VMAntiAffinity, VMAffinity, and VMHostAffinity values. You cannot set this parameter, when the VMHost parameter is specified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ResourceSchedulingRuleType[]</command:parameterValue>
			<dev:type>
				<maml:name>ResourceSchedulingRuleType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies VM hosts to filter the DRS rules that reference them. When this parameter is specified, the cmdlet returns only VMHostAffinity rules. You cannot set this parameter, when the Type parameter is specified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more DrsRule objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myCluster = Get-Cluster -Name &quot;MyCluster1&quot;
Get-DrsRule -Cluster $myCluster -Name &quot;*Rule1*&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the DRS rules for the cluster stored in the $myCluster variable, whose names contain &quot;Rule1&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Cluster -Name &#39;MyCluster1&#39; | Get-DrsRule</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the virtual machine affinity and anti-affinity rules for the specified cluster by pipeline.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVm1 = Get-VM -Name &#39;MyVm1&#39;
$myCluster1 = Get-Cluster &#39;MyCluster1&#39;
Get-DrsRule -Cluster $myCluster1 -VM $myVm1</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the virtual machine affinity and anti-affinity rules for the specified virtual machine in the specified cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Cluster &#39;MyCluster1&#39; | Get-DrsRule -Type VMHostAffinity</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves virtual machine to host affinity rules for the specified cluster by pipeline.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVMHost1 = Get-VMHost -Name &#39;MyVMHost1&#39;
$myCluster1 = Get-Cluster -Name &#39;MyCluster1&#39;
Get-DrsRule -Cluster $myCluster1 -VMHost $myVMHost1</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves virtual machine to host affinity rules for the specified host and cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-DrsRule.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-ErrorReport</command:name>
		<maml:description>
			<maml:para>This cmdlet collects debugging information in order to identify a problem in the work environment.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ErrorReport</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet collects debugging information in order to identify a problem in the work environment. The cmdlet runs a script that reproduces the problem and captures any relevant information in a single .zip file. Then, you can send the .zip file to the PowerCLI support for analysis.
To generate an error report:
1. Isolate the problem into a simple script.
2. (Optional) Set the vCenter Server logging level to &quot;Trivia&quot;.
3. Run Get-ErrorReport to generate the support bundle.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ErrorReport</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>ProblemDescription</maml:name>
				<maml:description>
					<maml:para>Provides a description of the problem you want to capture in the error report bundle.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>ProblemScriptTimeoutSeconds</maml:name>
				<maml:description>
					<maml:para>Specifies a time period in seconds for which you want to wait for the script to run before considering it non-responding.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Double</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the directory where you want to save the error report. If no value is specified for this parameter, the error report is saved in the current file system location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DirectoryInfo</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>ProblemScript</maml:name>
				<maml:description>
					<maml:para>Specifies the script that reproduces the error that you want to report.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScriptBlock</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DontIncludeServerLogs</maml:name>
				<maml:description>
					<maml:para>Indicates that you want no logs from vCenter Server to be included in the error report. Setting this option to $false might slow down the operation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>ProblemDescription</maml:name>
			<maml:description>
				<maml:para>Provides a description of the problem you want to capture in the error report bundle.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>ProblemScriptTimeoutSeconds</maml:name>
			<maml:description>
				<maml:para>Specifies a time period in seconds for which you want to wait for the script to run before considering it non-responding.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Double</command:parameterValue>
			<dev:type>
				<maml:name>Double</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies the directory where you want to save the error report. If no value is specified for this parameter, the error report is saved in the current file system location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DirectoryInfo</command:parameterValue>
			<dev:type>
				<maml:name>DirectoryInfo</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="4">
			<maml:name>ProblemScript</maml:name>
			<maml:description>
				<maml:para>Specifies the script that reproduces the error that you want to report.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
			<dev:type>
				<maml:name>ScriptBlock</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontIncludeServerLogs</maml:name>
			<maml:description>
				<maml:para>Indicates that you want no logs from vCenter Server to be included in the error report. Setting this option to $false might slow down the operation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more FileInfo objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$script = {
Connect-VIServer 10.23.34.36
$vapp = Get-VApp
Get-VM VM -Location $vapp
}

$script | Get-ErrorReport -ProblemScriptTimeoutSeconds 10 -ProblemDescription &quot;No VM is returned. There are several VMs in this vApp. The vApp is in a DRS-enabled cluster. All VMs part of the vApp are expected to be returned.&quot; -Destination &#39;D:\bug reports&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Saves the script that reproduces the error into a variable and passes the script to Get-ErrorReport. The command provides a problem description, a destination for storing the error report, and a time period after which the script is considered non-responding.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-ErrorReport.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-EsxCli</command:name>
		<maml:description>
			<maml:para>This cmdlet exposes the ESXCLI functionality.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>EsxCli</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet exposes the ESXCLI functionality.

Note: This cmdlet provides a new interface to the ESXCLI functionality. Use the -V2 parameter to switch to the new cmdlet interface.  For more information, check the parameter help.

Important: Scripts that use the old cmdlet interface might not be compatible across two different versions of ESXi. The old cmdlet interface is deprecated and will be removed in a future version.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-EsxCli</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies hosts on which you want to expose the ESXCLI functionality.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>V2</maml:name>
				<maml:description>
					<maml:para>If specified, the cmdlet returns an EsxCli object version 2 (V2), otherwise an EsxCli object version 1 (V1) is returned. Interface V2 supports specifying method arguments only by name. This is the recommended PowerCLI interface for interoperability with ESXCLI. Interface V1 supports specifying method arguments only by position. Scripts that use interface V1 are not guaranteed to be compatible across two different versions of ESXi. Interface V1 is deprecated.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies hosts on which you want to expose the ESXCLI functionality.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>V2</maml:name>
			<maml:description>
				<maml:para>If specified, the cmdlet returns an EsxCli object version 2 (V2), otherwise an EsxCli object version 1 (V1) is returned. Interface V2 supports specifying method arguments only by name. This is the recommended PowerCLI interface for interoperability with ESXCLI. Interface V1 supports specifying method arguments only by position. Scripts that use interface V1 are not guaranteed to be compatible across two different versions of ESXi. Interface V1 is deprecated.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>One EsxCli object per host</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Supported on ESXi/vCenter Server 5.0 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli_v1 = Get-EsxCli -VMHost $vmHost</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a version 1 interface to ESXCLI. This interface version is deprecated and will be removed in a future release. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$esxcli_v1 = Get-EsxCli</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a version 1 interface to ESXCLI using the default connection when connected directly to a single ESXi server. This interface version is deprecated and will be removed in a future release. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli = Get-EsxCli -VMHost $vmHost -V2</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a version 2 interface to ESXCLI by specifying a version switch parameter. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli = Get-EsxCli -VMHost $vmHost -V2
$esxcli.storage.nmp</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a list of all available applications in the specified namespace. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli = Get-EsxCli -VMHost $vmHost -V2
$esxcli.storage.nmp.device</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a list of all available commands of the specified ESXCLI application. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 6 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli_v1 = Get-EsxCli -VMHost $vmHost
$esxcli_v1.storage.nmp.device.list()</dev:code>
  			<dev:remarks>
				<maml:para>Runs a command of an ESXCLI application by using the ESXCLI V1 interface of PowerCLI. This interface version is deprecated and will be removed in a future release. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 7 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli = Get-EsxCli -VMHost $vmHost -V2
$esxcli.storage.nmp.device.list.Invoke()</dev:code>
  			<dev:remarks>
				<maml:para>Runs a command of an ESXCLI application by using the ESXCLI V2 interface of PowerCLI. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 8 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli = Get-EsxCli -VMHost $vmHost -V2
$arguments = $esxcli.storage.nmp.device.set.CreateArgs()
$arguments</dev:code>
  			<dev:remarks>
				<maml:para>Creates an arguments hash table for a command of an ESXCLI application and prints argument info to the console, similar to the sample output below. This example uses the ESXCLI V2 interface of PowerCLI. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>Name                           Value
----                           -----
default                        Unset, ([boolean], optional)
device                         Unset, ([string])
psp                            Unset, ([string], optional)
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 9 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli = Get-EsxCli -VMHost $vmHost -V2

$arguments = $esxcli.storage.nmp.device.set.CreateArgs()
$arguments.device = &quot;mpx.vmhba1:C0:T2:L0&quot;
$arguments.psp = &quot;VMW_PSP_MRU&quot;
    
$esxcli.storage.nmp.device.Set.Invoke($arguments)</dev:code>
  			<dev:remarks>
				<maml:para>Creates an arguments hash table, assigns argument values and invokes a command of an ESXCLI application. This example uses the ESXCLI V2 interface of PowerCLI. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 10 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli = Get-EsxCli -VMHost $vmHost -V2
$esxcli.storage.nmp.device.Set.Invoke(@{default=$true; device=&quot;mpx.vmhba1:C0:T2:L0&quot;})</dev:code>
  			<dev:remarks>
				<maml:para>Invokes a command of an ESXCLI application by specifying the arguments hash table in-line. This example uses the ESXCLI V2 interface of PowerCLI. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 11 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli_v1 = Get-EsxCli -VMHost $vmHost
$esxcli_v1.storage.nmp.device.set($null, &quot;mpx.vmhba1:C0:T2:L0&quot;, &quot;VMW_PSP_MRU&quot;)</dev:code>
  			<dev:remarks>
				<maml:para>Runs a command of an ESXCLI application by using the ESXCLI V1 interface of PowerCLI. This interface version is deprecated and will be removed in a future release. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 12 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli = Get-EsxCli -VMHost $vmHost -V2
$esxcli.TypeManager.QueryMoInstances($null)</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a list of all available managed object instance descriptors. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 13 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli = Get-EsxCli -VMHost $vmHost -V2
$moTypeInfo = $esxcli.TypeManager.QueryTypeInfo(&quot;vim.EsxCLI.storage.nmp.device&quot;)

$moTypeInfo.managedTypeInfo[0].method</dev:code>
  			<dev:remarks>
				<maml:para>Gets information about the specified managed object type (vim.EsxCLI.storage.nmp.device) and its methods.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 14 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli = Get-EsxCli -VMHost $vmHost -V2
$moInstance = $esxcli.TypeManager.CreateDynamicManagedObject(&quot;ha-cli-handler-storage-nmp-device&quot;)

$moInstance.InvokeOperation(&quot;list&quot;, $null)</dev:code>
  			<dev:remarks>
				<maml:para>Creates a dynamic managed object for the specified managed object instance descriptor and invokes a method without parameters. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 15 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost &quot;vmHostIp&quot;
$esxcli = Get-EsxCli -VMHost $vmHost -V2
$moInstance = $esxcli.TypeManager.CreateDynamicManagedObject(&quot;ha-cli-handler-storage-nmp-device&quot;)

$moInstance.InvokeOperation(&quot;set&quot;, @{&quot;device&quot; = &quot;mpx.vmhba1:C0:T2:L0&quot;; &quot;psp&quot; = &quot;VMW_PSP_MRU&quot;})</dev:code>
  			<dev:remarks>
				<maml:para>Creates a dynamic managed object for the specified managed object instance descriptor and invokes a method using a hash table with argument values. This example works on vCenter Server 5.0/ESXi 5.0 and later.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-EsxCli.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-EsxTop</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-EsxTop</command:name>
		<maml:description>
			<maml:para>This cmdlet exposes the esxtop functionality.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>EsxTop</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet exposes the esxtop functionality. The default parameter set is CounterValues. The Counter parameter filters the specified statistics. To retrieve all available counters, use the CounterInfo parameter set. The properties of each counter are returned through the Fields property (an array) of the CounterInfo output object. You can also retrieve stats topologies using the TopogyInfo parameter set. This information contains either inventory data that does not change or a counter instance structure describing the relationship between different counter instances.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-EsxTop</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>CounterName</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the counter for which you want to retrieve information.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-EsxTop</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>CounterName</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the counter for which you want to retrieve information.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Counter</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve counters information.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-EsxTop</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>TopologyInfo</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve topologies of the statistics.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Topology</maml:name>
				<maml:description>
					<maml:para>Specifies the topologies for which you want to retrieve information.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>CounterName</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the counter for which you want to retrieve information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Counter</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve counters information.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TopologyInfo</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve topologies of the statistics.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Topology</maml:name>
			<maml:description>
				<maml:para>Specifies the topologies for which you want to retrieve information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Counter, TopologyInfo, or CounterValue objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>The specified parameterset determines the type of the returned objects.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only against ESX 4.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-EsxTop -TopologyInfo</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the available topologies.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-EsxTop -Counter</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the available counters.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Get-VM VM
$group = Get-EsxTop -CounterName SchedGroup | where {$_.VMName -eq $vm.Name}
$groupIDs = $group | select -ExpandProperty GroupID
$gr = Get-EsxTop -TopologyInfo -Topology SchedGroup | %{$_.Entries} | where {$groupIDs -contains $_.GroupId}

$cpuIds = @()
$gr | %{$_.CpuClient} | %{$cpuIds += $_.CPUClientID}

$cpuStats = Get-EsxTop -CounterName &#39;VCPU&#39; | where {$cpuIds -contains $_.VCPUID}

$cpuStats | fl *</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves statistics for the virtual CPUs of the specified virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-EsxTop.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-EsxCli</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-FloppyDrive</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the virtual floppy drives available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>FloppyDrive</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the virtual floppy drives available on a vCenter Server system. Returns a set of virtual floppy drives that belong to the virtual machines, templates, and snapshots specified by the  VirtualMachine, Template, and Snapshot parameters. At least one of these parameters must be provided. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-FloppyDrive</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the floppy drives you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines from which you want to retrieve virtual floppy drives.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Specifies the templates from which you want to retrieve virtual CD drives.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Template[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Snapshot</maml:name>
				<maml:description>
					<maml:para>Specifies the snapshots from which you want to retrieve virtual CD drives.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Snapshot[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the floppy drives you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the floppy drives you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines from which you want to retrieve virtual floppy drives.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Specifies the templates from which you want to retrieve virtual CD drives.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Template[]</command:parameterValue>
			<dev:type>
				<maml:name>Template[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>Snapshot</maml:name>
			<maml:description>
				<maml:para>Specifies the snapshots from which you want to retrieve virtual CD drives.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Snapshot[]</command:parameterValue>
			<dev:type>
				<maml:name>Snapshot[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the floppy drives you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more FloppyDrive objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-FloppyDrive -VM VM</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the floppy drive of the virtual machine named VM.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-FloppyDrive.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Folder</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the folders available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Folder</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the folders available on a vCenter Server system. The cmdlet returns a set of folders that correspond to the filter criteria provided by the cmdlet parameters. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Folder</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies vSphere container objects (folders, datacenters, or clusters) you want to search for folders.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIContainer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the folders you want to retrieve. The valid values are VM, HostAndCluster, Datastore, Network, and Datacenter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >FolderType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the folders that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vSphere servers on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the folders you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoRecursion</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to disable  the  recursive behavior of the command.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Folder</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies objects to retrieve one or more Folder objects that are related to them. This parameter accepts OMResource​ objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >FolderRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Folder</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vSphere servers on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the folders you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies vSphere container objects (folders, datacenters, or clusters) you want to search for folders.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIContainer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the folders you want to retrieve. The valid values are VM, HostAndCluster, Datastore, Network, and Datacenter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">FolderType[]</command:parameterValue>
			<dev:type>
				<maml:name>FolderType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Returns only the folders that are associated with any of the specified tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vSphere servers on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the folders you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoRecursion</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to disable  the  recursive behavior of the command.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies objects to retrieve one or more Folder objects that are related to them. This parameter accepts OMResource​ objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">FolderRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>FolderRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the folders you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Folder objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$server = Connect-VIServer -Server 10.23.112.235

Get-Folder -Server $server -Name Folder</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the folder named Folder on the server with IP address 10.23.112.235.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Folder -NoRecursion</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the root folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Folder -Location $folder</dev:code>
  			<dev:remarks>
				<maml:para>Gets all folders in the specified location.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$folder = Get-Folder | Select -first 1

Get-Folder -ID $folder.ID</dev:code>
  			<dev:remarks>
				<maml:para>Gets a folder by ID.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Folder -Type Network</dev:code>
  			<dev:remarks>
				<maml:para>Gets all network folders.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Folder.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-HAPrimaryVMHost</command:name>
		<maml:description>
			<maml:para>On vCenter Server 5.0 and later, this cmdlet retrieves the master host of the specified HA cluster.
On vCenter Server versions earlier than 5.0, this cmdlet retrieves the primary HA (High-Availability) hosts for the specified clusters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>HAPrimaryVMHost</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>On vCenter Server 5.0 and later, the cmdlet retrieves the master host of the specified HA cluster.
On vCenter Server versions earlier than 5.0, the cmdlet retrieves the primary HA (High-Availability) hosts for the specified clusters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-HAPrimaryVMHost</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Specifies the clusters for which you want to retrieve the HA primary hosts.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Cluster[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Specifies the clusters for which you want to retrieve the HA primary hosts.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Cluster[]</command:parameterValue>
			<dev:type>
				<maml:name>Cluster[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHost objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Cluster | Get-HAPrimaryVMHost</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the HA primary hosts of the available cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-HAPrimaryVMHost Cluster</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the HA primary host of the cluster named Cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-HAPrimaryVMHost.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-HardDisk</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the virtual hard disks available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>HardDisk</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet returns the virtual hard disks available on a vCenter Server system. You can retrieve a hard disk by specifying the virtual machines, templates, or snapshots to which it belongs. If the hard disk is not attached to any virtual machines, templates, or snapshots, you can search for it in datastores or retrieve it by providing a datastore path to the file where the virtual hard disk is stored. In this case, you might not be able to derive disk type info, and the value of the DiskType property of the hard disk is Unknown.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-HardDisk</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the hard disks you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the file paths to the virtual hard disks you want to retrieve. The cmdlet searches recursively the specified locations.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DatastoreItem[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the hard disks you want to retrieve. The valid values are rawVirtual, rawPhysical, flat, and unknown. If the hard disk is not attached to any virtual machines, templates, or snapshots, you can retrieve it by providing a datastore path to the file where the virtual hard disk is stored. In this case, you might not be able to derive disk type info, and the value of the DiskType property of the hard disk is Unknown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DiskType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-HardDisk</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies objects to retrieve one or more HardDisk objects that are related to them.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HardDiskRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-HardDisk</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the hard disks you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastores or datastore clusters you want to search for hard disks. This parameter is required when retrieving a hard disk that is attached to no virtual machines, templates, or snapshots.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datastore[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>DatastorePath</maml:name>
				<maml:description>
					<maml:para>Specifies datastore paths to the hard disks you want to retrieve. The paths must be in the following format: [datastore_name] &lt;file_path&gt;, where [datastore_name] is the name of the datastore in square brackets and &lt;file_path&gt; is a slash-delimited path from the root of the datastore to the virtual hard disk file.
The cmdlet searches recursively the specified locations.

To learn more about the Datastore Provider, in the vSphere PowerCLI service console, type:

help about_vimdatastore</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the hard disks you want to retrieve. The valid values are rawVirtual, rawPhysical, flat, and unknown. If the hard disk is not attached to any virtual machines, templates, or snapshots, you can retrieve it by providing a datastore path to the file where the virtual hard disk is stored. In this case, you might not be able to derive disk type info, and the value of the DiskType property of the hard disk is Unknown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DiskType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-HardDisk</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the hard disks you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the hard disks you want to retrieve. The valid values are rawVirtual, rawPhysical, flat, and unknown. If the hard disk is not attached to any virtual machines, templates, or snapshots, you can retrieve it by providing a datastore path to the file where the virtual hard disk is stored. In this case, you might not be able to derive disk type info, and the value of the DiskType property of the hard disk is Unknown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DiskType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines from which you want to retrieve the hard disks.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine templates from which you want to retrieve the hard disks.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Template[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Snapshot</maml:name>
				<maml:description>
					<maml:para>Specifies the snapshots from which you want to retrieve the hard disks.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Snapshot[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the SCSI hard disks you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the hard disks you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the file paths to the virtual hard disks you want to retrieve. The cmdlet searches recursively the specified locations.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DatastoreItem[]</command:parameterValue>
			<dev:type>
				<maml:name>DatastoreItem[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>If  in a datastore provider - the current path, else - null.</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the hard disks you want to retrieve. The valid values are rawVirtual, rawPhysical, flat, and unknown. If the hard disk is not attached to any virtual machines, templates, or snapshots, you can retrieve it by providing a datastore path to the file where the virtual hard disk is stored. In this case, you might not be able to derive disk type info, and the value of the DiskType property of the hard disk is Unknown.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DiskType[]</command:parameterValue>
			<dev:type>
				<maml:name>DiskType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies objects to retrieve one or more HardDisk objects that are related to them.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HardDiskRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>HardDiskRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastores or datastore clusters you want to search for hard disks. This parameter is required when retrieving a hard disk that is attached to no virtual machines, templates, or snapshots.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Datastore[]</command:parameterValue>
			<dev:type>
				<maml:name>Datastore[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>DatastorePath</maml:name>
			<maml:description>
				<maml:para>Specifies datastore paths to the hard disks you want to retrieve. The paths must be in the following format: [datastore_name] &lt;file_path&gt;, where [datastore_name] is the name of the datastore in square brackets and &lt;file_path&gt; is a slash-delimited path from the root of the datastore to the virtual hard disk file.
The cmdlet searches recursively the specified locations.

To learn more about the Datastore Provider, in the vSphere PowerCLI service console, type:

help about_vimdatastore</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>If working in the datastore provider  - the current path, else - &amp;null.</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines from which you want to retrieve the hard disks.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine templates from which you want to retrieve the hard disks.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Template[]</command:parameterValue>
			<dev:type>
				<maml:name>Template[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>Snapshot</maml:name>
			<maml:description>
				<maml:para>Specifies the snapshots from which you want to retrieve the hard disks.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Snapshot[]</command:parameterValue>
			<dev:type>
				<maml:name>Snapshot[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the SCSI hard disks you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more HardDisk objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-HardDisk -VM VM</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the hard disks of the virtual machine named VM.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-HardDisk -VM $vm -DiskType flat</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the flat hard disks from the specified virtual machines.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-HardDisk -Datastore &quot;Storage1&quot; -DatastorePath &quot;[Storage1] myVM/&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the hard disks from the specified datastore and from the specified datastore path.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-HardDisk.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Copy-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Inventory</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the inventory items available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Inventory</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the inventory items available on a vCenter Server system. The cmdlet returns a set of inventory items that correspond to the filter criteria specified by the provided parameters. To specify a server different from the default one, use the -Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Inventory</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies vSphere container objects (such as folders, datacenters, and clusters) you want to search for inventory items.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIContainer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the inventory objects you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoRecursion</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Inventory</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the inventory objects you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies vSphere container objects (such as folders, datacenters, and clusters) you want to search for inventory items.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIContainer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the inventory objects you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoRecursion</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the inventory objects you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VIObject objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Inventory -Location Datacenter -Name *Pool</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all inventory items in the Datacenter datacenter, whose names end with &quot;Pool&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Inventory.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Inventory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Inventory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-IScsiHbaTarget</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the available iSCSI HBA targets.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>IScsiHbaTarget</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the available iSCSI HBA targets. The cmdlet retrieves the configured targets (send and static) on the specified iSCSI storage adapters. If IPEndPoint is specified, filters the result by &lt;Address&gt;:&lt;Port&gt;. If no IScsiHba is provided - retrieves all targets from the entire inventory.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-IScsiHbaTarget</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>IScsiHba</maml:name>
				<maml:description>
					<maml:para>Specifies the iSCSI HBA whose targets you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >IScsiHba[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the iSCSI HBA targets you want to retrieve. The valid values are Send and Static.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >IScsiHbaTargetType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>IPEndPoint</maml:name>
				<maml:description>
					<maml:para>Specifies &lt;Address&gt;:&lt;Port&gt; to filter the available iSCSI HBA targets.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>IScsiHba</maml:name>
			<maml:description>
				<maml:para>Specifies the iSCSI HBA whose targets you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IScsiHba[]</command:parameterValue>
			<dev:type>
				<maml:name>IScsiHba[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the iSCSI HBA targets you want to retrieve. The valid values are Send and Static.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IScsiHbaTargetType[]</command:parameterValue>
			<dev:type>
				<maml:name>IScsiHbaTargetType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>IPEndPoint</maml:name>
			<maml:description>
				<maml:para>Specifies &lt;Address&gt;:&lt;Port&gt; to filter the available iSCSI HBA targets.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more IScsiHbaSendTarget or IScsiHbaStaticTarget objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-IScsiHbaTarget -Address &quot;10.23.84.73&quot; -Type Send</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the targets of type Send on the specified address.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-IScsiHbaTarget.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostHba</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostHba</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Log</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves entries from vSphere logs.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Log</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves entries from vSphere logs. Returns portions of the log files according to the criteria provided by the cmdlet parameters.
To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Log</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Key</maml:name>
				<maml:description>
					<maml:para>Specifies the key identifier of the log file you want to retrieve. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve logs. If no value is given to this parameter, the command returns logs only for the default vCenter Server system.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>StartLineNum</maml:name>
				<maml:description>
					<maml:para>Specifies the start line number for reading from the logs.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>NumLines</maml:name>
				<maml:description>
					<maml:para>Specifies the number of the lines you want to retrieve from the logs.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Log</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve logs. If no value is given to this parameter, the command returns logs only for the default vCenter Server system.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Bundle</maml:name>
				<maml:description>
					<maml:para>Indicates whether to retrieve a diagnostic bundle of logs from vCenter Server.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>DestinationPath</maml:name>
				<maml:description>
					<maml:para>Specifies a local file path where you want to save the log bundle.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Key</maml:name>
			<maml:description>
				<maml:para>Specifies the key identifier of the log file you want to retrieve. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve logs. If no value is given to this parameter, the command returns logs only for the default vCenter Server system.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>StartLineNum</maml:name>
			<maml:description>
				<maml:para>Specifies the start line number for reading from the logs.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>NumLines</maml:name>
			<maml:description>
				<maml:para>Specifies the number of the lines you want to retrieve from the logs.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Bundle</maml:name>
			<maml:description>
				<maml:para>Indicates whether to retrieve a diagnostic bundle of logs from vCenter Server.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>DestinationPath</maml:name>
			<maml:description>
				<maml:para>Specifies a local file path where you want to save the log bundle.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Log or LogBundle objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$keys = Get-LogType

Get-Log -Key $keys[0]</dev:code>
  			<dev:remarks>
				<maml:para>Obtain the available keys. Obtains the first log file from the currently connected vCenter Server system.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost Host

$keyList = Get-LogType -VMHost $vmhost

$vmhost | Get-Log -Key $keyList[0] -StartLineNum 1 -NumLines 100</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve the first one hundred log lines for the specified host and key.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost Host | Get-Log -Bundle -DestinationPath &quot;D:\VMHostBundeLog&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve a bundle log for the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Log.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-LogType</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-LogType</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves information about the log types available on a virtual machine host.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>LogType</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves information about the log types available on a virtual machine host. If no virtual machine host is specified, the cmdlet retrieves the log types for the default vCenter Server system.  To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-LogType</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts you want to search for log types. If no value is given to this parameter, the command searches for logs only on the default vCenter Server system.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts you want to search for log types. If no value is given to this parameter, the command searches for logs only on the default vCenter Server system.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more LogDescriptor objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -State &quot;Connected&quot;

Get-Logtype -VMHost $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Gets information about the available logs on the virtual machine hosts whose state is Connected.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-LogType.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Log</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-NetworkAdapter</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the virtual network adapters  available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>NetworkAdapter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the virtual network adapters  available on a vCenter Server system. The cmdlet returns a set of virtual network adapters assigned to the virtual machines, templates, and snapshots specified by the  VirtualMachine, Template, and Snapshot parameters. At least one of these parameters must be provided. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-NetworkAdapter</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the network adapters you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines from which you want to retrieve virtual network adapters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Specifies the templates from which you want to retrieve virtual network adapters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Template[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Snapshot</maml:name>
				<maml:description>
					<maml:para>Specifies the snapshots from which you want to retrieve virtual network adapters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Snapshot[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the network adapters you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-NetworkAdapter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specify an object to retrieve one or more network adapters that are related to the object. This parameter accepts standard and distributed port groups.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >NetworkAdapterRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the network adapters you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines from which you want to retrieve virtual network adapters.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Specifies the templates from which you want to retrieve virtual network adapters.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Template[]</command:parameterValue>
			<dev:type>
				<maml:name>Template[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>Snapshot</maml:name>
			<maml:description>
				<maml:para>Specifies the snapshots from which you want to retrieve virtual network adapters.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Snapshot[]</command:parameterValue>
			<dev:type>
				<maml:name>Snapshot[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the network adapters you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specify an object to retrieve one or more network adapters that are related to the object. This parameter accepts standard and distributed port groups.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">NetworkAdapterRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>NetworkAdapterRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more NetworkAdapter objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-NetworkAdapter -VM MyVM</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the network adapters added to the the MyVM virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVDPortgroup = Get-VDPortGroup -Name &quot;MyVDPortGroup&quot;
$myNetworkAdapters = Get-NetworkAdapter -RelatedObject $myVDPortgroup</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all network adapters connected to the specified port group and stores them in the myNetworkAdapters variable.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-NetworkAdapter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-NicTeamingPolicy</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the NIC teaming policies of the specified virtual switches and virtual port groups.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>NicTeamingPolicy</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the NIC teaming policies of the specified virtual switches and virtual port groups. The NIC teaming policy determines how network traffic is distributed between adapters and how traffic is reorganized in case of adapter failure.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-NicTeamingPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualSwitch</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual switches whose NIC teaming policy you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualSwitch[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-NicTeamingPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualPortGroup</maml:name>
				<maml:description>
					<maml:para>Specifies the port groups whose NIC teaming policy you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualPortGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualSwitch</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual switches whose NIC teaming policy you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualSwitch[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitch[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualPortGroup</maml:name>
			<maml:description>
				<maml:para>Specifies the port groups whose NIC teaming policy you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualPortGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualPortGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more NicTeamingVirtualSwitchPolicy or NicTeamingVirtualPortGroupPolicy objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VirtualPortGroup -VMHost (Get-VMHost *.128) -Name Virtual* | Get-NicTeamingPolicy | fl is*</dev:code>
  			<dev:remarks>
				<maml:para>For the specified virtual port groups, retrieves the Nic teaming policy settings whose names start with &quot;is&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VirtualSwitch -VMHost (Get-VMHost *.128) -Name vswitch | Get-NicTeamingPolicy</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the Nic teaming policy of the specified virtual switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-NicTeamingPolicy.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-NicTeamingPolicy</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-OSCustomizationNicMapping</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the configured NIC setting mappings for the specified OS customization specification.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OSCustomizationNicMapping</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the configured NIC setting mappings for the specified OS customization specification.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-OSCustomizationNicMapping</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies the OS customization specification for which you want to retrieve the NIC settings mapping.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OSCustomizationSpec[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>OSCustomizationSpec</maml:name>
			<maml:description>
				<maml:para>Specifies the OS customization specification for which you want to retrieve the NIC settings mapping.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OSCustomizationSpec[]</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationSpec[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more OSCustomizationNicMapping objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$spec1 = Get-OSCustomizationSpec &quot;test&quot;

$spec2 = Get-OSCustomizationSpec &quot;test_old&quot;

Get-OSCustomizationNicMapping -OSCustomizationSpec $spec1,$spec2</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the NIC mappings of the &quot;test&quot; and &quot;test_old&quot; OS customization specifications.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-OSCustomizationNicMapping.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-OSCustomizationNicMapping</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OSCustomizationNicMapping</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-OSCustomizationSpec</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the OS customization specifications available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OSCustomizationSpec</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the OS customization specifications available on a vCenter Server system.  To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-OSCustomizationSpec</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the OS customization specifications you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the OS customization specifications you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifis the type of the OS customization specifications you want to retrieve. The valid values are Persistent and NonPersistent.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpecType</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the OS customization specifications you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the OS customization specifications you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifis the type of the OS customization specifications you want to retrieve. The valid values are Persistent and NonPersistent.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">OSCustomizationSpecType</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationSpecType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more OSCustomizationSpec objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-OSCustomizationSpec &quot;test&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves from the server the OS customization specification named &#39;test&#39;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VM -Name VM -VMHost Host -Template Template -OSCustomizationSpec $spec</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new virtual machine from a template and configures it using a customization specification.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-OSCustomizationSpec.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-OSCustomizationSpec</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-OSCustomizationSpec</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OSCustomizationSpec</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-OvfConfiguration</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the OVF configuration object for the specified OVF or OVA package.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>OvfConfiguration</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the OVF configuration object for the specified OVF or OVA package. Only user-configurable properties are returned.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-OvfConfiguration</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Ovf</maml:name>
				<maml:description>
					<maml:para>Specifies the local path to the OVF or OVA package for which the user-configurable options are returned. URL paths are not supported.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="1">
			<maml:name>Ovf</maml:name>
			<maml:description>
				<maml:para>Specifies the local path to the OVF or OVA package for which the user-configurable options are returned. URL paths are not supported.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>An object of type OvfConfiguration</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ovfPath = &quot;myOvfTemplate.ovf&quot;
$ovfConfig = Get-OvfConfiguration -Ovf $ovfPath
$ovfConfig.vami.VM1.ip0.Value = &quot;10.23.101.2&quot;
$ovfConfig.vami.VM2.ip0.Value = &quot;10.23.101.3&quot;
Import-VApp $ovfPath -OvfConfiguration $ovfConfig -VMHost $vmHost</dev:code>
  			<dev:remarks>
				<maml:para>Modifies a specific OVF property and passes it to the Import-VApp cmdlet.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-OvfConfiguration.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-PassthroughDevice</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the pass-through devices available on the specified hosts, virtual machines, and templates.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>PassthroughDevice</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the pass-through devices available on the specified hosts, virtual machines, and templates.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-PassthroughDevice</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines for which you want to retrieve the pass-through devices.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve the pass-through devices.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine templates for which you want to retrieve the pass-through devices.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Template[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the pass-through devices you want to retrieve. The valid values are SCSI and PCI. PCI is supported only on vCenter Server 4.1 and ESX 4.1 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PassthroughDeviceType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the pass-through devices you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the pass-through devices you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines for which you want to retrieve the pass-through devices.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve the pass-through devices.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine templates for which you want to retrieve the pass-through devices.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Template[]</command:parameterValue>
			<dev:type>
				<maml:name>Template[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the pass-through devices you want to retrieve. The valid values are SCSI and PCI. PCI is supported only on vCenter Server 4.1 and ESX 4.1 and later.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PassthroughDeviceType</command:parameterValue>
			<dev:type>
				<maml:name>PassthroughDeviceType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the pass-through devices you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the pass-through devices you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more PassthroughDevice objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-PassthroughDevice -VMHost Host -Type Scsi</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the SCSI passthrough devices of the Host host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-PassthroughDevice.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-PassthroughDevice</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-PassthroughDevice</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-PowerCLIConfiguration</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the vSphere PowerCLI proxy configuration and default servers policy.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>PowerCLIConfiguration</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the vSphere PowerCLI proxy configuration and default servers policy.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-PowerCLIConfiguration</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Scope</maml:name>
				<maml:description>
					<maml:para>Specifies a scope to filter vSphere PowerCLI settings by. The parameter accepts Session, User, and All Users values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ConfigurationScope</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Scope</maml:name>
			<maml:description>
				<maml:para>Specifies a scope to filter vSphere PowerCLI settings by. The parameter accepts Session, User, and All Users values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ConfigurationScope</command:parameterValue>
			<dev:type>
				<maml:name>ConfigurationScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>One or more PowerCLIConfiguration objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-PowerCLIConfiguration</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves information about the vSphere PowerCLI configuration for every scope.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-PowerCLIConfiguration -Scope User</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves information about the vSphere PowerCLI configuration for the User scope.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-PowerCLIConfiguration -Scope ([VMware.VimAutomation.ViCore.Types.V1.ConfigurationScope]::Session -bor [VMware.VimAutomation.ViCore.Types.V1.ConfigurationScope]::User)</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves information about the vSphere PowerCLI configuration for the User and Session scopes.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-PowerCLIConfiguration.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-PowerCLIConfiguration</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-PowerCLIVersion</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the versions of the installed PowerCLI snapins.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>PowerCLIVersion</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the versions of the installed PowerCLI snapins.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-PowerCLIVersion</maml:name>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>One or more PowerCLIVersion objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-PowerCLIVersion</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the version of vSphere PowerCLI.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-PowerCLIVersion | select -expand SnapinVersions</dev:code>
  			<dev:remarks>
				<maml:para>Lists the versions of additional PowerCLI snapins.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-PowerCLIVersion.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-ResourcePool</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the resource pools available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ResourcePool</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Retrieves the resource pools available on a vCenter Server system. The cmdlet returns a set of resource pools that correspond to the filter criteria provided by the cmdlet parameters. Virtual machine hosts have a hidden resource pool named Resources, which is a parent of all resource pools of the host. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ResourcePool</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the resource pools you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies vSphere container objects (such as folders, datacenters, and clusters) you want to search for resource pools.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIContainer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the resource pools that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoRecursion</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ResourcePool</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the resource pools you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies virtual machines to filter the resource pools that contain at least one of them.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the resource pools that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ResourcePool</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the resource pools you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ResourcePool</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies objects to retrieve one or more ResourcePool objects that are related to them. This parameter accepts ProviderVdc and OMResource objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ResourcePoolRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the resource pools you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies vSphere container objects (such as folders, datacenters, and clusters) you want to search for resource pools.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIContainer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Returns only the resource pools that are associated with any of the specified tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoRecursion</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies virtual machines to filter the resource pools that contain at least one of them.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the resource pools you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies objects to retrieve one or more ResourcePool objects that are related to them. This parameter accepts ProviderVdc and OMResource objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ResourcePoolRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>ResourcePoolRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more ResourcePool objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$server = Connect-VIServer -Server 10.23.112.235

Get-ResourcePool -Server $server -VM VM</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves information of the resource pool to which the virtual machine MS Win belongs.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-ResourcePool.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-ScsiController</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the virtual SCSI controllers assigned to the specified HardDisk, VirtualMachine, Template, and Snapshot objects.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ScsiController</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the virtual SCSI controllers assigned to the specified HardDisk, VirtualMachine, Template, and Snapshot objects.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ScsiController</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the SCSI controllers you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>HardDisk</maml:name>
				<maml:description>
					<maml:para>Filters the SCSI controllers by the hard disks they belong to.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HardDisk[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Filters the SCSI controllers by the virtual machines they belong to.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Filters the SCSI controllers by the virtual machine templates they belong to.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Template[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Snapshot</maml:name>
				<maml:description>
					<maml:para>Filters the SCSI controllers by the snapshots they belong to.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Snapshot[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the SCSI controllers you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the SCSI controllers you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>HardDisk</maml:name>
			<maml:description>
				<maml:para>Filters the SCSI controllers by the hard disks they belong to.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HardDisk[]</command:parameterValue>
			<dev:type>
				<maml:name>HardDisk[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Filters the SCSI controllers by the virtual machines they belong to.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Filters the SCSI controllers by the virtual machine templates they belong to.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Template[]</command:parameterValue>
			<dev:type>
				<maml:name>Template[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>Snapshot</maml:name>
			<maml:description>
				<maml:para>Filters the SCSI controllers by the snapshots they belong to.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Snapshot[]</command:parameterValue>
			<dev:type>
				<maml:name>Snapshot[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the SCSI controllers you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more ScsiController objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM1, VM2 | Get-ScsiController</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the SCSI controllers of the VM1 and VM2 virtual machines.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM | Get-Snapshot Snapshot | Get-ScsiController</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the SCSI controllers of a virtual machine snapshot.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$disk = Get-VM VM | Get-HardDisk | Select -First 2

Get-ScsiController -HardDisk $disk</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the SCSI controllers of the first two hard disks of a virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-ScsiController.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ScsiController</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ScsiController</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-ScsiLun</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the SCSI devices available on the vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ScsiLun</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the SCSI devices available on the vCenter Server system. Examples of SCSI logical unit objects include disks which may contain file system volumes or parts of volumes for the host or might serve as raw disks to a virtual machine. Other examples include SCSI passthrough devices that can be used by virtual machines. When retrieving ScsiLun objects by Datastore, the cmdlet returns a ScsiLun object for each host connected to the specified datastore. ScsiLun objects can be differed by their VMHost property.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ScsiLun</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>CanonicalName</maml:name>
				<maml:description>
					<maml:para>Specifies the canonical name of the SCSI devices you want to retrieve. An example of a SCSI canonical name for Windows is &quot;vmhba0:0:0:0&quot;.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VmHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts from which you want to retrieve the virtual SCSI devices.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Key</maml:name>
				<maml:description>
					<maml:para>Specifies the linkable identifiers of the SCSI devices you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>LunType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the SCSI devices you want to retrieve. The following types are valid:

cdrom
communications
disk
enclosure
mediaChanger
opticalDevice
printer
processor
scanner
storageArrayController
tape
unknown
worm</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ScsiLun</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the SCSI devices that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ScsiLun</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>CanonicalName</maml:name>
				<maml:description>
					<maml:para>Specifies the canonical name of the SCSI devices you want to retrieve. An example of a SCSI canonical name for Windows is &quot;vmhba0:0:0:0&quot;.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Hba</maml:name>
				<maml:description>
					<maml:para>Specifies the storage adapters for which you want to retrieve the SCSI devices.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Hba[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Key</maml:name>
				<maml:description>
					<maml:para>Specifies the linkable identifiers of the SCSI devices you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>LunType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the SCSI devices you want to retrieve. The following types are valid:

cdrom
communications
disk
enclosure
mediaChanger
opticalDevice
printer
processor
scanner
storageArrayController
tape
unknown
worm</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ScsiLun</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>CanonicalName</maml:name>
				<maml:description>
					<maml:para>Specifies the canonical name of the SCSI devices you want to retrieve. An example of a SCSI canonical name for Windows is &quot;vmhba0:0:0:0&quot;.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastores for which you want to retrieve the SCSI devices. This parameter is supported only for VMFS volumes.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datastore[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Key</maml:name>
				<maml:description>
					<maml:para>Specifies the linkable identifiers of the SCSI devices you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>LunType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the SCSI devices you want to retrieve. The following types are valid:

cdrom
communications
disk
enclosure
mediaChanger
opticalDevice
printer
processor
scanner
storageArrayController
tape
unknown
worm</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>CanonicalName</maml:name>
			<maml:description>
				<maml:para>Specifies the canonical name of the SCSI devices you want to retrieve. An example of a SCSI canonical name for Windows is &quot;vmhba0:0:0:0&quot;.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VmHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts from which you want to retrieve the virtual SCSI devices.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Key</maml:name>
			<maml:description>
				<maml:para>Specifies the linkable identifiers of the SCSI devices you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>LunType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the SCSI devices you want to retrieve. The following types are valid:

cdrom
communications
disk
enclosure
mediaChanger
opticalDevice
printer
processor
scanner
storageArrayController
tape
unknown
worm</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the SCSI devices that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Hba</maml:name>
			<maml:description>
				<maml:para>Specifies the storage adapters for which you want to retrieve the SCSI devices.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Hba[]</command:parameterValue>
			<dev:type>
				<maml:name>Hba[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastores for which you want to retrieve the SCSI devices. This parameter is supported only for VMFS volumes.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Datastore[]</command:parameterValue>
			<dev:type>
				<maml:name>Datastore[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more ScsiLun objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-ScsiLun -VMHost 10.23.123.100 -LunType disk</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the SCSI devices of &quot;disk&quot; type for the virtual machine host with an IP address 10.23.123.100.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost | Get-ScsiLun -CanonicalName &quot;naa.*&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the SCSI devices with canonical names that starts with &quot;naa.&quot; on the provided host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$hba = Get-VMHost | Get-VMHostHba -Type ParallelScsi

Get-ScsiLun -Hba $hba -LunType disk</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the SCSI devices of &quot;disk&quot; type for the specified HBA devices.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-ScsiLun -Datastore Datastore -Key &quot;key-vim.host.ScsiDisk-*&quot;</dev:code>
  			<dev:remarks>
				<maml:para>For the Datastore datastore, retrieves the SCSI devices that have the specified linkable identifiers.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-ScsiLun.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ScsiLunPath</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ScsiLun</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ScsiLunPath</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-ScsiLunPath</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the list of vmhba paths to a specified SCSI device.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ScsiLunPath</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the list of vmhba paths to a specified SCSI device.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ScsiLunPath</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the SCSI device whose vmhba paths you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>ScsiLun</maml:name>
				<maml:description>
					<maml:para>Specifies the SCSI device whose vmhba paths you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ScsiLun[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the SCSI device whose vmhba paths you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>ScsiLun</maml:name>
			<maml:description>
				<maml:para>Specifies the SCSI device whose vmhba paths you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ScsiLun[]</command:parameterValue>
			<dev:type>
				<maml:name>ScsiLun[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more ScsiLunPath objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$scsilun = Get-ScsiLun -VMHost 10.23.123.100 -LunType disk

Get-ScsiLunPath $scsilun</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the vmhba path to the specified SCSI device.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-ScsiLunPath.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ScsiLun</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ScsiLunPath</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ScsiLun</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-SecurityPolicy</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the security policy for virtual port groups or the default port security policy for virtual switches.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>SecurityPolicy</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the security policy for virtual port groups or the default port security policy for virtual switches.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-SecurityPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualSwitch</maml:name>
				<maml:description>
					<maml:para>Specifies a virtual switch for which you want to retrieve the default port security policy.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualSwitch[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SecurityPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualPortGroup</maml:name>
				<maml:description>
					<maml:para>Specifies a virtual port group for which you want to retrieve the security policy.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualPortGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualSwitch</maml:name>
			<maml:description>
				<maml:para>Specifies a virtual switch for which you want to retrieve the default port security policy.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualSwitch[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitch[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualPortGroup</maml:name>
			<maml:description>
				<maml:para>Specifies a virtual port group for which you want to retrieve the security policy.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualPortGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualPortGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>One or more VirtualSwitchSecurityPolicy or VirtualPortgroupSecurityPolicy objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VirtualSwitch &quot;MyVirtualSwitch&quot; | Get-SecurityPolicy</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the security policy of a virtual switch named &quot;MyVirtualSwitch&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VirtualPortGroup &quot;MyPortgroup&quot; | Get-SecurityPolicy</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the security policy of a virtual switch port group named &quot;MyPortgroup&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-SecurityPolicy.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-SecurityPolicy</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Snapshot</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the virtual machine snapshots available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Snapshot</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet returns information about the snapshots that correspond to the filter criteria provided by the Name and VM parameters.  The disk size of the snapshots is retrieved only if you have the &quot;Datastore/Browse datastore&quot; privilege to the datastore where the shapshot is located. Otherwise, the following message is displayed: &quot;Unable to populate snapshot size due to unsufficient permissions.&quot;</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Snapshot</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the snapshots you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the snapshots you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines whose snapshots you want to retrieve. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the snapshots you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the snapshots you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines whose snapshots you want to retrieve. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Snapshot objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Snapshot -VM VM -Name &#39;Before ServicePack 2&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the snapshot named &quot;Before ServicePack2&quot; of the VM virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Snapshot.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Stat</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the statistical information available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Stat</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the statistical information available on a vCenter Server system for each provided entity. For example, if the CPU parameter is set to $true, collects the average CPU usage and the average CPU usagemhz counters as appropriate for each entity. If the Stat parameter is specified, collects all provided named stats counters. Counters are provided using a dotted notation of the form &quot;counter group&quot;.&quot;counter name&quot;.&quot;rollup type&quot;. For example: &quot;cpu.usage.min&quot;. The cmdlet uses the Start time, if provided, and the Finish time, if provided, along with the MaxSamples, if provided, to bound the data collection. If intervalSecs is provided,  the closest matching available interval is used. For each statistics sample on the server, the cmdlet returns a Sample object. The Instance property of the Sample object shows the serial number of the device for which a statistics value is taken. If the Instance property is empty (&quot;), this indicates that the statistics sample contains an average statistic value for all specified devices. If you are connected to a vCenter Server and Get-Stat is run for a host entity, the cmdlet returns only the statistics available on the vCenter Server.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Stat</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies the objects (such as virtual machine, virtual machine host, resource pool, and so on) whose statistics you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Common</maml:name>
				<maml:description>
					<maml:para>Indicates whether the command collects common CPU, disk, memory and network statistics.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Memory</maml:name>
				<maml:description>
					<maml:para>Indicates whether the command collects common memory statistics, such as the mem usage, mem vmmemctl, mem active and mem granted counters as appropriate for each entity.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Cpu</maml:name>
				<maml:description>
					<maml:para>Indicates whether the command collects common CPU statistics, such as the average CPU usage and average CPU usagemhz counters as appropriate for each entity.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Disk</maml:name>
				<maml:description>
					<maml:para>Indicates whether the command collects common disk statistics, such as the average disk usage, average disk read and average disk write counters as appropriate for each entity.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Network</maml:name>
				<maml:description>
					<maml:para>Indicates whether the command collects common network statistics, such as the average network usage, average network transmitted and average network received counters as appropriate for each entity.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Stat</maml:name>
				<maml:description>
					<maml:para>Specifies the identifiers of the statistics you want to retrieve. Counters are provided using a dotted notation of the form &quot;counter group&quot;.&quot;counter name&quot;.&quot;rollup type&quot;. For example, &quot;cpu.usage.min&quot;.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Start</maml:name>
				<maml:description>
					<maml:para>Specifies the beginning of the time range for which you want to collect statistics. The valid format is dd/mm/yyyy.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Finish</maml:name>
				<maml:description>
					<maml:para>Specifies the end of the time range for which you want to collect statistics. The valid format is dd/mm/yyyy.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MaxSamples</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum number of samples for each statistic.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IntervalMins</maml:name>
				<maml:description>
					<maml:para>Specifies one or more intervals in minutes of the statistics samples you want to retrieve. The closest available statistics interval is taken. To retrieve statistics samples for all available intervals, pass *.
If the IntervalMins parameter is not specified, the samples with the best sample rate are retrieved. A best sample rate is the highest sample rate, whose relevant period contains the relevant periods for all other sample rates. A relevant period is the period that starts no earlier than the oldest sample still retained, and is a subset of a query period specified by the user.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Int32[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IntervalSecs</maml:name>
				<maml:description>
					<maml:para>Specifies one or more intervals in seconds of the statistics samples you want to retrieve. The closest available statistics interval is taken. To retrieve statistics samples for all available intervals, pass *.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Int32[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Specifies the Instance property of the statistics you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Realtime</maml:name>
				<maml:description>
					<maml:para>Indicates whether the command collects real time statistics.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies the objects (such as virtual machine, virtual machine host, resource pool, and so on) whose statistics you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIObject[]</command:parameterValue>
			<dev:type>
				<maml:name>VIObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Common</maml:name>
			<maml:description>
				<maml:para>Indicates whether the command collects common CPU, disk, memory and network statistics.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Memory</maml:name>
			<maml:description>
				<maml:para>Indicates whether the command collects common memory statistics, such as the mem usage, mem vmmemctl, mem active and mem granted counters as appropriate for each entity.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cpu</maml:name>
			<maml:description>
				<maml:para>Indicates whether the command collects common CPU statistics, such as the average CPU usage and average CPU usagemhz counters as appropriate for each entity.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Disk</maml:name>
			<maml:description>
				<maml:para>Indicates whether the command collects common disk statistics, such as the average disk usage, average disk read and average disk write counters as appropriate for each entity.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Network</maml:name>
			<maml:description>
				<maml:para>Indicates whether the command collects common network statistics, such as the average network usage, average network transmitted and average network received counters as appropriate for each entity.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Stat</maml:name>
			<maml:description>
				<maml:para>Specifies the identifiers of the statistics you want to retrieve. Counters are provided using a dotted notation of the form &quot;counter group&quot;.&quot;counter name&quot;.&quot;rollup type&quot;. For example, &quot;cpu.usage.min&quot;.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Start</maml:name>
			<maml:description>
				<maml:para>Specifies the beginning of the time range for which you want to collect statistics. The valid format is dd/mm/yyyy.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Finish</maml:name>
			<maml:description>
				<maml:para>Specifies the end of the time range for which you want to collect statistics. The valid format is dd/mm/yyyy.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaxSamples</maml:name>
			<maml:description>
				<maml:para>Specifies the maximum number of samples for each statistic.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IntervalMins</maml:name>
			<maml:description>
				<maml:para>Specifies one or more intervals in minutes of the statistics samples you want to retrieve. The closest available statistics interval is taken. To retrieve statistics samples for all available intervals, pass *.
If the IntervalMins parameter is not specified, the samples with the best sample rate are retrieved. A best sample rate is the highest sample rate, whose relevant period contains the relevant periods for all other sample rates. A relevant period is the period that starts no earlier than the oldest sample still retained, and is a subset of a query period specified by the user.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			<dev:type>
				<maml:name>Int32[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IntervalSecs</maml:name>
			<maml:description>
				<maml:para>Specifies one or more intervals in seconds of the statistics samples you want to retrieve. The closest available statistics interval is taken. To retrieve statistics samples for all available intervals, pass *.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			<dev:type>
				<maml:name>Int32[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Specifies the Instance property of the statistics you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Realtime</maml:name>
			<maml:description>
				<maml:para>Indicates whether the command collects real time statistics.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more LongSample or FloatSample objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Samples are not generated for a virtual machine while it is powered off.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Stat -Entity $VM -Start 5/5/2013 -Finish 7/10/2013 -Disk -IntervalSecs 300</dev:code>
  			<dev:remarks>
				<maml:para>Prints the disk statistics for the specified time interval for the first virtual machine, retrieved by the Get-VM cmdlet.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Stat -Entity $MyVMHost -Cpu -Instance 0</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the CPU statistics for the first processor of a multiprocessor host.

Note: This command can only work with a direct ESX connection.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost -Name &quot;MyVMHost&quot; | Get-Stat -Network -IntervalSecs 20</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the network usage statistics for the specified host for the specified time interval.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM -Name &quot;MyVM&quot; | Get-Stat -Stat &quot;mem.usage.average&quot; -Start $MyStartDateTime -Finish $MyFinishDateTime -MaxSamples 10</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the average memory usage statistics for the specified virtual machine between the specified start and finish date and time. The maximum number of retrieved samples is limited to 10.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM -Name &quot;MyVM&quot; | Get-Stat -CPU -Memory -Realtime</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the real-time CPU and memory usage statistics for the specified virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 6 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost -Name &quot;MyVMHost&quot; | Get-Stat -Common</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the common statistics for the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 7 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Stat -Entity &quot;MyVMHost&quot; -Disk</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the disk usage statistics for the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Stat.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-StatType</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-StatInterval</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the available statistics intervals and filters them using the provided parameters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>StatInterval</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the available statistics intervals and filters them using the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-StatInterval</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the statistics intervals you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>SamplingPeriodSecs</maml:name>
				<maml:description>
					<maml:para>Specifies the sampling period of the statistics intervals you want to retrieve. The sampling period is an integer that defines (in seconds) the interval of the statistics sample.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Int32[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the statistics intervals you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>SamplingPeriodSecs</maml:name>
			<maml:description>
				<maml:para>Specifies the sampling period of the statistics intervals you want to retrieve. The sampling period is an integer that defines (in seconds) the interval of the statistics sample.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			<dev:type>
				<maml:name>Int32[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more StatInterval objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-StatInterval</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the available statistics intervals.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-StatInterval.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Stat</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-StatType</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-StatType</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the available statistics types for a inventory object.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>StatType</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the available statistics types for a virtual machine, virtual machine host, cluster, or resource pool. Performance statistics types can be filtered by their names, start and finish times,  and collection intervals. If the Realtime parameter is set, the Start and Finish parameters are ignored.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-StatType</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the statistics types you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies clusters, virtual machine hosts, resource pools, or virtual machines, for which you want to retrieve the available statistics types.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Start</maml:name>
				<maml:description>
					<maml:para>Specifies the beginning of the time range for which the statistics types you want to retrieve are collected. The valid format is dd/mm/yyyy. This value corresponds to the server time. When the start time is omitted, the returned statistics types start from the first available statistics type in the system.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Finish</maml:name>
				<maml:description>
					<maml:para>Specifies the end of the time range for which the statistics types you want to retrieve are collected. The valid format is dd/mm/yyyy. This value corresponds to the server time. When the finish time is omitted, the returned result includes up to the most recent statistics type.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Interval</maml:name>
				<maml:description>
					<maml:para>Specifies the interval at which the statistics types you want to retrieve are gathered. The interval can be specified by its name or by its sampling period in seconds.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >StatInterval[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Realtime</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve realtime statistics type as well. If this parameter is set, the Start and Finish parameters are ignored.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the statistics types you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies clusters, virtual machine hosts, resource pools, or virtual machines, for which you want to retrieve the available statistics types.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIObject[]</command:parameterValue>
			<dev:type>
				<maml:name>VIObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Start</maml:name>
			<maml:description>
				<maml:para>Specifies the beginning of the time range for which the statistics types you want to retrieve are collected. The valid format is dd/mm/yyyy. This value corresponds to the server time. When the start time is omitted, the returned statistics types start from the first available statistics type in the system.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Finish</maml:name>
			<maml:description>
				<maml:para>Specifies the end of the time range for which the statistics types you want to retrieve are collected. The valid format is dd/mm/yyyy. This value corresponds to the server time. When the finish time is omitted, the returned result includes up to the most recent statistics type.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Interval</maml:name>
			<maml:description>
				<maml:para>Specifies the interval at which the statistics types you want to retrieve are gathered. The interval can be specified by its name or by its sampling period in seconds.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">StatInterval[]</command:parameterValue>
			<dev:type>
				<maml:name>StatInterval[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Realtime</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve realtime statistics type as well. If this parameter is set, the Start and Finish parameters are ignored.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more System.String objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Zero or more strings representing statistics types.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-StatType -Entity VM</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the statistics types collected for the VM virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-StatType.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Stat</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Tag</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the tags available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Tag</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the tags available on a vCenter Server system. This cmdlet filters tags by name and category to which tags belong.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Tag</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filters the tags by name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Category</maml:name>
				<maml:description>
					<maml:para>Filters the tags by category.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >TagCategory[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Tag</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Filters the tags by ID.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filters the tags by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Category</maml:name>
			<maml:description>
				<maml:para>Filters the tags by category.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">TagCategory[]</command:parameterValue>
			<dev:type>
				<maml:name>TagCategory[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Filters the tags by ID.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Tag objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only with vCenter Server 5.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Tag -Name &quot;MyTag&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Returns all tags named &quot;MyTag&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Tag -Category &quot;MyCategory1&quot;, &quot;MyCategory2&quot; -Name &quot;MyTag&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Returns all tags from the &quot;MyCategory1&quot; and &quot;MyCategory2&quot; categories, named &quot;MyTag&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Tag.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-TagAssignment</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the tag assignments of objects.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>TagAssignment</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the tag assignments of objects. If the Entity parameter is specified, the cmdlet returns only the tag assignments for the corresponding items. If the Category parameter is specified, the cmdlet returns only the tag assignments of tags that belong to the specified category.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-TagAssignment</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Retrieves the tags associated with the specified items.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIObjectCore[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Category</maml:name>
				<maml:description>
					<maml:para>Returns the tags that belong to the specified categories.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >TagCategory[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Retrieves the tags associated with the specified items.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIObjectCore[]</command:parameterValue>
			<dev:type>
				<maml:name>VIObjectCore[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Category</maml:name>
			<maml:description>
				<maml:para>Returns the tags that belong to the specified categories.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">TagCategory[]</command:parameterValue>
			<dev:type>
				<maml:name>TagCategory[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more TagAssignment objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only with vCenter Server 5.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$datastore = Get-DataStore MyDatastore
Get-TagAssignment -Entity $datastore -Category MyCategory</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all tag assignments for the $datastore entity that have tags from the &quot;MyCategory&quot; category.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-TagAssignment.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-TagAssignment</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-TagAssignment</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-TagCategory</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the tag categories available on a vCenter Server system and filters them using the specified cmdlet parameters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>TagCategory</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the tag categories available on a vCenter Server system and filters them using the specified cmdlet parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-TagCategory</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filters the tag categories by name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-TagCategory</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Filters the tag categories by ID.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filters the tag categories by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Filters the tag categories by ID.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more TagCategory objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only with vCenter Server 5.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-TagCategory -Name &quot;MyTagCategory&quot; -Server &quot;MyServer&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a tag category named &quot;MyTagCategory&quot; from a vCenter Server system.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-TagCategory.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Task</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the tasks on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Task</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the tasks on a vCenter Server system. The cmdlet retrieves information about the current or recent tasks. Use the Status parameter to filter tasks by their current status. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Task</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Status</maml:name>
				<maml:description>
					<maml:para>Specifies the status of the tasks you want to retrieve. The valid values are Error, Queued, Running, and Success. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >TaskState</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIConnection[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Task</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the tasks that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIConnection[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Status</maml:name>
			<maml:description>
				<maml:para>Specifies the status of the tasks you want to retrieve. The valid values are Error, Queued, Running, and Success. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TaskState</command:parameterValue>
			<dev:type>
				<maml:name>TaskState</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIConnection[]</command:parameterValue>
			<dev:type>
				<maml:name>VIConnection[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the tasks that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Task objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$serv = Connect-VIServer -Server 10.23.112.235

$task = Get-Task -Server $serv -Status Error

$task</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves information on all tasks on the server with IP address 10.23.112.235, whose state is &quot;Error&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Task.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-Task</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Wait-Task</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-Template</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the virtual machine templates available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Template</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the virtual machine templates available on a vCenter Server system. The cmdlet returns a set of templates that correspond to the filter criteria defined by the cmdlet parameters. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Template</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the vSphere container objects (such as folders, datacenters, and clusters) you want to search for templates.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIContainer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Filters templates by the datastores or datastore clusters that they are stored on.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >StorageResource[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the virtual machine templates you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoRecursion</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-Template</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the virtual machine templates you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies the vSphere container objects (such as folders, datacenters, and clusters) you want to search for templates.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIContainer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Filters templates by the datastores or datastore clusters that they are stored on.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">StorageResource[]</command:parameterValue>
			<dev:type>
				<maml:name>StorageResource[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the virtual machine templates you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoRecursion</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the virtual machine templates you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Template objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Template -Name Web* -Location Datacenter</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all virtual machine templates in the Datacenter datacenter, whose names start with &quot;Web&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-Template.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-UsbDevice</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the USB devices available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>UsbDevice</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the USB devices available on a vCenter Server system. The cmdlet returns a set of virtual USB devices assigned to the virtual machines, templates, and snapshots specified by the  VirtualMachine, Template, and Snapshot parameters. At least one of these parameters must be provided. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-UsbDevice</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the USB devices you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines whose virtual USB drives you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine templates whose virtual USB drives you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Template[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Snapshot</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine snapshots whose virtual USB you want to retrieve. Supported only on vCenter Server 4.1 and ESX 4.1 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Snapshot[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the USB devices you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the USB devices you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines whose virtual USB drives you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine templates whose virtual USB drives you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Template[]</command:parameterValue>
			<dev:type>
				<maml:name>Template[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>Snapshot</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine snapshots whose virtual USB you want to retrieve. Supported only on vCenter Server 4.1 and ESX 4.1 and later.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Snapshot[]</command:parameterValue>
			<dev:type>
				<maml:name>Snapshot[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the USB devices you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more UsbDevice objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>The -Snapshot parameter is supported only on vCenter Server 4.1 and ESX 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-UsbDevice -VM (Get-VM -Location Host)</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the USB devices attached to the virtual machines on the Host host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-UsbDevice.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-UsbDevice</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VApp</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves vApps.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VApp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves vApps.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VApp</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies Folder, Cluster, Datacenter, VMHost, and ResourcePool objects you want to search for vApps.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIContainer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the vApps that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the vApps that you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoRecursion</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VApp</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the vApps that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies Folder, Cluster, Datacenter, VMHost, and ResourcePool objects you want to search for vApps.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIContainer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Returns only the vApps that are associated with any of the specified tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the vApps that you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoRecursion</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the vApps that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VApp objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-ResourcePool MyResourcePool1 | Get-VApp -NoRecursion</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all the vApps in the ResourcePool resource pool with no recursion.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VApp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VIAccount</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the accounts from the ESX/ESXi or vCenter Server.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VIAccount</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the accounts from the ESX/ESXi or vCenter Server. The Group and User switch parameters let you retrieve group and user accounts. By default, the cmdlet lists only user accounts. If the Domain parameter is specified, the cmdlet retrieves only the accounts on the specified AD domain. Otherwise, only local accounts are listed.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VIAccount</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Group</maml:name>
				<maml:description>
					<maml:para>Specifies that you want to retrieve only group accounts.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>User</maml:name>
				<maml:description>
					<maml:para>Specifies that you want to retrieve only user accounts.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the accounts you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VIAccount</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Group</maml:name>
				<maml:description>
					<maml:para>Specifies that you want to retrieve only group accounts.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>User</maml:name>
				<maml:description>
					<maml:para>Specifies that you want to retrieve only user accounts.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the accounts you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Domain</maml:name>
				<maml:description>
					<maml:para>Specifies AD domains to search for accounts.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Group</maml:name>
			<maml:description>
				<maml:para>Specifies that you want to retrieve only group accounts.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>User</maml:name>
			<maml:description>
				<maml:para>Specifies that you want to retrieve only user accounts.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the accounts you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the accounts you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Domain</maml:name>
			<maml:description>
				<maml:para>Specifies AD domains to search for accounts.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VIAccount objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIAccount -Id Administrator</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve accounts by Id.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIAccount -Group</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve all group accounts.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIAccount -Id Administrator -Domain &quot;MSDomain&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Get all VIAccounts for specified ID and Domain.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIAccount -Domain &quot;MSDomain&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve all accounts for the specified domain.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VIAccount.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VICredentialStoreItem</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the credential store items available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VICredentialStoreItem</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the credential store items that correspond to the filter criteria defined by the Host and User parameters. Both the Host and User parameters support wildcards. If none of the Host and User parameters are specified, all available credential store items are returned. If the Host and User parameters are specified without using wildcards, and no item is found, non-terminating errors are reported for the Host and User parameters. If no file is specified, items are retrieved from the default credential store file %APPDATA%\VMware\credstore\vicredentials.xml.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VICredentialStoreItem</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Host</maml:name>
				<maml:description>
					<maml:para>Specifies hosts for which you want to retrieve credential store items.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>User</maml:name>
				<maml:description>
					<maml:para>Specifies users for which you want to retrieve credential store items.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>Specifies a path to a file where the credential store items that you want to retrieve are saved.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="1">
			<maml:name>Host</maml:name>
			<maml:description>
				<maml:para>Specifies hosts for which you want to retrieve credential store items.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="2">
			<maml:name>User</maml:name>
			<maml:description>
				<maml:para>Specifies users for which you want to retrieve credential store items.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>File</maml:name>
			<maml:description>
				<maml:para>Specifies a path to a file where the credential store items that you want to retrieve are saved.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VICredentialStoreItem objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VICredentialStoreItem -User admin -Host 192.168.1.10 -File &#39;credentials.xml&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the credentials for the &#39;admin&#39; user on the specified host from a credential store file.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VICredentialStoreItem.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VICredentialStoreItem</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VICredentialStoreItem</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VIEvent</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves information about the events on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VIEvent</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves information about the events on a vCenter Server system. An event is any action in the vCenter Server system or ESX/ESXi host. You can filter retrieved events by specifying arguments for the cmdlet parameters. Filters are additive. For example, when you specify the Entity, Start, and Finish parameters, Get-VIEvent filters events both by the entity and the timestamp properties. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VIEvent</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies objects (such as virtual machine, virtual machine host, resource pool, and so on) for which you want to collect events.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Start</maml:name>
				<maml:description>
					<maml:para>Specifies the start date of the events you want to retrieve. The valid formats are dd/mm/yyyy and mm/dd/yyyy, depending on the local machine regional settings.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Finish</maml:name>
				<maml:description>
					<maml:para>Specifies the end date of the events you want to retrieve. The valid formats are dd/mm/yyyy and mm/dd/yyyy, depending on the local machine regional settings.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Username</maml:name>
				<maml:description>
					<maml:para>Specifies the user that has initiated the events you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MaxSamples</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum number of retrieved events. When you do not filter events by time period, the maximum number of retrieved events is set to 100 by default.

Note: This parameter is ignored when the Start and Finish parameters are specified and all events from the specified period are retrieved.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Types</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the events you want to collect. The valid values are Error, Info, and Warning.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >EventCategory[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies objects (such as virtual machine, virtual machine host, resource pool, and so on) for which you want to collect events.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIObject[]</command:parameterValue>
			<dev:type>
				<maml:name>VIObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Start</maml:name>
			<maml:description>
				<maml:para>Specifies the start date of the events you want to retrieve. The valid formats are dd/mm/yyyy and mm/dd/yyyy, depending on the local machine regional settings.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Finish</maml:name>
			<maml:description>
				<maml:para>Specifies the end date of the events you want to retrieve. The valid formats are dd/mm/yyyy and mm/dd/yyyy, depending on the local machine regional settings.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Username</maml:name>
			<maml:description>
				<maml:para>Specifies the user that has initiated the events you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaxSamples</maml:name>
			<maml:description>
				<maml:para>Specifies the maximum number of retrieved events. When you do not filter events by time period, the maximum number of retrieved events is set to 100 by default.

Note: This parameter is ignored when the Start and Finish parameters are specified and all events from the specified period are retrieved.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Types</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the events you want to collect. The valid values are Error, Info, and Warning.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">EventCategory[]</command:parameterValue>
			<dev:type>
				<maml:name>EventCategory[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VimApi.Event objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Calling Get-VIEvent without any parameters might result in significant delays depending on the total number of events on the server.

Get-VIEvent might return duplicates in the output. For example, if a virtual machine is the child of both a parent and a child resource pools, it will be returned twice. This issue will be fixed in future releases of vSphere PowerCLI.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIEvent -Entity MyVM1 -Username admin -Types error -MaxSamples 15</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a list of the last fifteen error events on the MyVM1 virtual machine for the user admin.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-VIServer -Server 10.23.113.41

$events = Get-VIEvent -MaxSamples 100

foreach ($event in $events) {if  ($event.fullFormattedMessage -match &quot;User (.*)@\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b logged in&quot;) {Write-Host (&quot;User &quot; + $matches[1] + &quot; logged in at:&quot; + $event.createdTime)} }</dev:code>
  			<dev:remarks>
				<maml:para>Gathers information for the users that have logged in.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VIEvent.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-View</command:name>
		<maml:description>
			<maml:para>This cmdlet returns the vSphere View objects that correspond to the specified search criteria.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>View</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet returns the vSphere View objects that correspond to the specified search criteria. The cmdlet retrieves the vSphere View objects specified by their IDs or by their corresponding vSphere inventory objects (VIObject). A View object ID is a &lt;type&gt;-&lt;value&gt; string. For objects with constant names such as AlarmManager and ServiceInstance, the ID format is &lt;type&gt; (see the examples).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-View</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VIObject</maml:name>
				<maml:description>
					<maml:para>Specifies the vSphere managed object that corresponds to the View object you want to retrieve.

When you pass VIServer, Get-View returns ServiceInstance. When the retrieved View object is a ServiceInstance, you cannot convert it to a VIObject with Get-VIObjectByVIView.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Property</maml:name>
				<maml:description>
					<maml:para>Specifies the properties of the view object you want to retrieve. If no value is given, all properties are shown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-View</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SearchRoot</maml:name>
				<maml:description>
					<maml:para>Specifies a starting point for the search (in the context of the inventory).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ManagedObjectReference</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ViewType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the View objects you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Type</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Specifies a hash of &lt;name&gt;-&lt;value&gt; pairs, where &lt;name&gt; represents the property value to test, and &lt;value&gt; represents a regex pattern the property must match. If more than one pair is present, all the patterns must match.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Property</maml:name>
				<maml:description>
					<maml:para>Specifies the properties of the view object you want to retrieve. If no value is given, all properties are shown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-View</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the View objects you want to retrieve. A view object ID is a &lt;type&gt;-&lt;value&gt; string. For objects with constant names such as AlarmManager and ServiceInstance, the ID format is &lt;type&gt; (see the examples).

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ManagedObjectReference[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Property</maml:name>
				<maml:description>
					<maml:para>Specifies the properties of the view object you want to retrieve. If no value is given, all properties are shown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-View</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Property</maml:name>
				<maml:description>
					<maml:para>Specifies the properties of the view object you want to retrieve. If no value is given, all properties are shown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies view-related objects to retrieve their views.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ViewBaseMirroredObject[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VIObject</maml:name>
			<maml:description>
				<maml:para>Specifies the vSphere managed object that corresponds to the View object you want to retrieve.

When you pass VIServer, Get-View returns ServiceInstance. When the retrieved View object is a ServiceInstance, you cannot convert it to a VIObject with Get-VIObjectByVIView.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIObject[]</command:parameterValue>
			<dev:type>
				<maml:name>VIObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Property</maml:name>
			<maml:description>
				<maml:para>Specifies the properties of the view object you want to retrieve. If no value is given, all properties are shown.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchRoot</maml:name>
			<maml:description>
				<maml:para>Specifies a starting point for the search (in the context of the inventory).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ManagedObjectReference</command:parameterValue>
			<dev:type>
				<maml:name>ManagedObjectReference</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ViewType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the View objects you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Type</command:parameterValue>
			<dev:type>
				<maml:name>Type</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Specifies a hash of &lt;name&gt;-&lt;value&gt; pairs, where &lt;name&gt; represents the property value to test, and &lt;value&gt; represents a regex pattern the property must match. If more than one pair is present, all the patterns must match.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
			<dev:type>
				<maml:name>Hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the View objects you want to retrieve. A view object ID is a &lt;type&gt;-&lt;value&gt; string. For objects with constant names such as AlarmManager and ServiceInstance, the ID format is &lt;type&gt; (see the examples).

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ManagedObjectReference[]</command:parameterValue>
			<dev:type>
				<maml:name>ManagedObjectReference[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies view-related objects to retrieve their views.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ViewBaseMirroredObject[]</command:parameterValue>
			<dev:type>
				<maml:name>ViewBaseMirroredObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more ViewBase objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Get-View -ViewType VirtualMachine -Filter @{&quot;Name&quot; = &quot;VM&quot;}

$vmhostView = Get-View -ID $vm.Runtime.Host

$vmhostView.Summary.Runtime</dev:code>
  			<dev:remarks>
				<maml:para>Gets the VM virtual machine using a filter by name, populates the view object and retrieves the runtime information.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$folder = Get-Folder Folder | Get-View

Get-View -SearchRoot $folder.MoRef -ViewType &quot;VirtualMachine&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Gets the view objects of virtual machines by specifying the root folder - MoRef.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$folder = Get-Folder VM

$folderView = Get-View $folder -Property &quot;[VirtualMachine]ChildEntity.Network.*&quot;

$folderView.LinkedView.ChildEntity[0].LinkedView.Network</dev:code>
  			<dev:remarks>
				<maml:para>Gets the view of a folder by specifying for the Property parameter a property path, which leads to the networks of the virtual machines in the specified folder. Retrieves the first of the returned networks.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Connect-CIServer CloudServer1

Connect-VIServer VIServer1

$cloudExternalNetworkView = Get-ExternalNetwork ExternalNetwork1 | Get-CIView

Get-View -RelatedObject $cloudExternalNetworkView</dev:code>
  			<dev:remarks>
				<maml:para>Gets the view of a vSphere object related to the specified Cloud object. In this case, gets the vSphere port group for the cloud external network.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-View.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIObjectByVIView</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VIObjectByVIView</command:name>
		<maml:description>
			<maml:para>This cmdlet converts a vSphere View object to a VIObject.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VIObjectByVIView</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet converts a vSphere View object to a VIObject using the object ID provided by the MoRef parameter. If the View object is a ServiceInstance, you cannot convert it to a VIObject.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VIObjectByVIView</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VIView</maml:name>
				<maml:description>
					<maml:para>Specifies the vSphere .NET View object you want to convert to a vSphere PowerCLI object.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ViewBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VIObjectByVIView</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>MORef</maml:name>
				<maml:description>
					<maml:para>Specifies the managed object ID, obtained from a property of another managed object or a view.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ManagedObjectReference[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VIView</maml:name>
			<maml:description>
				<maml:para>Specifies the vSphere .NET View object you want to convert to a vSphere PowerCLI object.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ViewBase[]</command:parameterValue>
			<dev:type>
				<maml:name>ViewBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>MORef</maml:name>
			<maml:description>
				<maml:para>Specifies the managed object ID, obtained from a property of another managed object or a view.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ManagedObjectReference[]</command:parameterValue>
			<dev:type>
				<maml:name>ManagedObjectReference[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VIObject objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$view = Get-VM VM | Stop-VM | Get-View

$vm = Get-VIObjectByVIView $view | Start-VM</dev:code>
  			<dev:remarks>
				<maml:para>Gets the VM virtual machine, stops it, and gets its view object. Then, the command gets the virtual machine object using the Get-VIObjectByVIView cmdlet and starts the VM virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VIObjectByVIView.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-View</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VIPermission</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the permissions defined on the specified inventory objects.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VIPermission</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the permissions defined on the specified inventory objects. If no inventory objects are specified, the cmdlet retrieves all permissions available on the server.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VIPermission</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies the inventory items for which you want to retrieve permissions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>Specifies the users and groups for which you want to retrieve permissions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIAccount[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies the inventory items for which you want to retrieve permissions.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIObject[]</command:parameterValue>
			<dev:type>
				<maml:name>VIObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Principal</maml:name>
			<maml:description>
				<maml:para>Specifies the users and groups for which you want to retrieve permissions.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIAccount[]</command:parameterValue>
			<dev:type>
				<maml:name>VIAccount[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Permission objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>You can specify permissions to a datastore only on vSphere 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIPermission -Entity (Get-Datacenter) -Principal Administrator</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the permissions of the Administrator user on the provided datacenters.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VIPermission.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPrivilege</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI60R1/html/Get-VIPrivilege.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VIPrivilege</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the privilege groups and items for the provided servers.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VIPrivilege</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the privilege groups and items for the provided servers.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VIPrivilege</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PrivilegeGroup</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve only the privilege groups and not the privilege items in them.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PrivilegeItem</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve only the privilege items and not the privilege groups.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the privileges you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the privileges you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VIPrivilege</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the privileges you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Role</maml:name>
				<maml:description>
					<maml:para>Specifies the roles whose privileges you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Role[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the privileges you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VIPrivilege</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the privileges you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Group</maml:name>
				<maml:description>
					<maml:para>Specifies the privilege group whose items you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PrivilegeGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the privileges you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrivilegeGroup</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve only the privilege groups and not the privilege items in them.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrivilegeItem</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve only the privilege items and not the privilege groups.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the privileges you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the privileges you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Role</maml:name>
			<maml:description>
				<maml:para>Specifies the roles whose privileges you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Role[]</command:parameterValue>
			<dev:type>
				<maml:name>Role[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Group</maml:name>
			<maml:description>
				<maml:para>Specifies the privilege group whose items you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PrivilegeGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>PrivilegeGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Privilege objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIPrivilege -Name &quot;Host*&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all privileges with names that start with &quot;Host&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIPrivilege -PrivilegeGroup</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all privilege groups.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VIPrivilege.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VIProperty</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves extended object properties.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VIProperty</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the extended properties and filters them by using  the provided cmdlet parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VIProperty</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the extended properties you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>ObjectType</maml:name>
				<maml:description>
					<maml:para>Specifies the object types for which you want to retrieve extended properties.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DeclaredOnly</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve only the extended properties that have been directly defined for the specified object types.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the extended properties you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>ObjectType</maml:name>
			<maml:description>
				<maml:para>Specifies the object types for which you want to retrieve extended properties.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeclaredOnly</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve only the extended properties that have been directly defined for the specified object types.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VIProperty objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIProperty -Name &quot;property*&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve all custom properties that match the specified name pattern.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIProperty -ObjectType &#39;VirtualMachine&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve all custom properties for the specified object type.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIProperty -ObjectType &#39;VirtualMachine&#39; -DeclaredOnly</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve all custom properties for the specified object type that are not inherited.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VIProperty.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIProperty</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIProperty</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VIRole</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves all roles defined on the provided servers.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VIRole</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves all roles defined on the provided servers.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VIRole</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the roles you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the roles you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the roles you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the roles you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Role objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIRole -Server $server -Name &quot;Admin*&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all roles on the specified server with names that start with &quot;Admin&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VIRole.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPrivilege</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VirtualPortGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the available port groups of hosts, virtual machines, and virtual switches.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VirtualPortGroup</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the available port groups of hosts, virtual machines, and virtual switches. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VirtualPortGroup</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts whose port groups you want to retrieve. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines whose port groups you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VirtualSwitch</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual switches for which you want to retrieve their port groups.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualSwitchBase[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the port groups you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Datacenter</maml:name>
				<maml:description>
					<maml:para>Filters the port groups of the virtual switches connected to hosts in the specified datacenters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datacenter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Standard</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve the port groups for VirtualSwitch objects.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Distributed</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve the port groups for DistributedSwitch objects. This parameter is obsolete. To retrieve distributed port groups, use the Get-VDPortgroup cmdlet instead.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the virtual port groups that are associated with any of the specified tags.

Note: This parameter is compatible only with standard virtual port groups. For distributed port groups, you should use the Get-VDPortgroup cmdlet.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VirtualPortGroup</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the port groups you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VirtualPortGroup</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies objects to retrieve one or more VirtualPortGroup objects that are related to them. This parameter accepts vCloud NetworkPool, vCloud ExternalNetwork, and vCloud OrgNetwork objects.

Note: In vCloud Director 5.1 environments, you cannot retrieve a distributed port group from an organization network backed by the distributed port group.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualPortGroupRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts whose port groups you want to retrieve. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines whose port groups you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VirtualSwitch</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual switches for which you want to retrieve their port groups.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualSwitchBase[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitchBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the port groups you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Datacenter</maml:name>
			<maml:description>
				<maml:para>Filters the port groups of the virtual switches connected to hosts in the specified datacenters.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Datacenter[]</command:parameterValue>
			<dev:type>
				<maml:name>Datacenter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Standard</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve the port groups for VirtualSwitch objects.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Distributed</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve the port groups for DistributedSwitch objects. This parameter is obsolete. To retrieve distributed port groups, use the Get-VDPortgroup cmdlet instead.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Returns only the virtual port groups that are associated with any of the specified tags.

Note: This parameter is compatible only with standard virtual port groups. For distributed port groups, you should use the Get-VDPortgroup cmdlet.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the port groups you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies objects to retrieve one or more VirtualPortGroup objects that are related to them. This parameter accepts vCloud NetworkPool, vCloud ExternalNetwork, and vCloud OrgNetwork objects.

Note: In vCloud Director 5.1 environments, you cannot retrieve a distributed port group from an organization network backed by the distributed port group.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualPortGroupRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualPortGroupRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VirtualPortGroup or DistributedPortGroup objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If the Standard parameter is specified, the cmdlet returns zero or more VirtualPortGroup objects. If the Distributed parameter is specified, the cmdlet returns zero or more DistributedPortGroup objects.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This cmdlet retrieves standard port groups. Retrieving distributed port groups with this cmdlet is obsolete. Use the Get-VDPortgroup cmdlet instead.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VirtualPortgroup -Name &quot;VM Network&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all port groups named &quot;VM Network&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVMHost = Get-VMHost -Name &quot;MyVMHost&quot;
Get-VirtualPortGroup -Name &quot;VM Network&quot; -VMHost $myVmHost</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the port group named &quot;VM Network&quot; on the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVM = Get-VM -Name &quot;MyVM&quot;
Get-VirtualPortGroup -VM $myVM</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all port groups to which the specified virtual machine is connected.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$virtualSwitch = Get-VirtualSwitch -VMHost MyVMHost -Name vSwitch0
Get-VirtualPortGroup -VirtualSwitch $virtualSwitch</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all port groups which belong to the specified virtual switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VirtualPortGroup.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VirtualSwitch</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the virtual switches associated with a virtual machine host or used by a virtual machine.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VirtualSwitch</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the virtual switches associated with a virtual machine host or used by a virtual machine. At least one of the VMHost and VM parameters must be provided.  The VM, VMHost, Name parameters do not accept string values through a pipeline because of collision. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VirtualSwitch</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts whose virtual switches you want to retrieve. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines whose virtual switches you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Datacenter</maml:name>
				<maml:description>
					<maml:para>Filters the virtual switches connected to hosts in the specified datacenters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datacenter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the virtual switches you want to retrieve. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Standard</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve only VirtualSwitch objects.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Distributed</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve only DistributedSwitch objects. This parameter is obsolete. To retrieve distributed switches, use the Get-VDSwitch cmdlet instead.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VirtualSwitch</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the virtual switches you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VirtualSwitch</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies objects to retrieve one or more VirtualSwitch objects that are related to them. This parameter accepts vCloud NetworkPool objects.

Note: In vCloud Director 5.1 environments, you cannot retrieve a distributed switch from a network pool backed by the distributed switch.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualSwitchRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts whose virtual switches you want to retrieve. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines whose virtual switches you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Datacenter</maml:name>
			<maml:description>
				<maml:para>Filters the virtual switches connected to hosts in the specified datacenters.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Datacenter[]</command:parameterValue>
			<dev:type>
				<maml:name>Datacenter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the virtual switches you want to retrieve. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Standard</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve only VirtualSwitch objects.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Distributed</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve only DistributedSwitch objects. This parameter is obsolete. To retrieve distributed switches, use the Get-VDSwitch cmdlet instead.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the virtual switches you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies objects to retrieve one or more VirtualSwitch objects that are related to them. This parameter accepts vCloud NetworkPool objects.

Note: In vCloud Director 5.1 environments, you cannot retrieve a distributed switch from a network pool backed by the distributed switch.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualSwitchRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitchRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VirtualSwitchBase objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If the Standard parameter is specified, the cmdlet returns zero or more VirtualSwitch objects. If the Distributed parameter is specified, the cmdlet returns zero or more DistributedSwitch objects.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This cmdlet retrieves standard switches. Retrieving distributed switches with this cmdlet is obsolete. Use the Get-VDSwitch cmdlet instead.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VirtualSwitch -VM VM</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the virtual switch used by the virtual machine named VM.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Datacenter -Name &quot;MyDatacenter&quot; | Get-VirtualSwitch</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all virtual switches in the specified datacenter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost -Name &quot;MyVMHost&quot; | Get-VirtualSwitch</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all virtual switches on the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VirtualSwitch -Name &quot;vSwitch0&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all virtual switches named &quot;vSwitch0&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VirtualSwitch.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VirtualSwitch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VirtualSwitch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VirtualSwitch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VM</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the virtual machines on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VM</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the virtual machines on a vCenter Server system. Returns a set of virtual machines that correspond to the filter criteria provided by the cmdlet parameters. For virtual machines with multiple NICs and multiple IP addresses, the IPAddress property of the VMGuest object contains all IP addresses of the virtual machine. The IP at position 0 is the primary IP address.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VM</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the virtual machines you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies datastores or datastore clusters to filter the virtual machines associated with them. Passing values to this parameter through a pipeline is deprecated and will be removed in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >StorageResource[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies vSphere container objects you want to search for virtual machines. Supported container object types are: ResourcePool, VApp, VMHost, Folder, Cluster, Datacenter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIContainer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the virtual machines that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoRecursion</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VM</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the virtual machines you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VirtualSwitch</maml:name>
				<maml:description>
					<maml:para>When specified, the cmdlet returns only the virtual machines that have network adapters attached to the specified switches.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualSwitchBase[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the virtual machines that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VM</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the virtual machines you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VM</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies objects to retrieve one or more vSphere VirtualMachine objects that are related to them. This parameter accepts vCloud CIVM and OMResource objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VmRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the virtual machines you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies datastores or datastore clusters to filter the virtual machines associated with them. Passing values to this parameter through a pipeline is deprecated and will be removed in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">StorageResource[]</command:parameterValue>
			<dev:type>
				<maml:name>StorageResource[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies vSphere container objects you want to search for virtual machines. Supported container object types are: ResourcePool, VApp, VMHost, Folder, Cluster, Datacenter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIContainer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Returns only the virtual machines that are associated with any of the specified tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoRecursion</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VirtualSwitch</maml:name>
			<maml:description>
				<maml:para>When specified, the cmdlet returns only the virtual machines that have network adapters attached to the specified switches.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualSwitchBase[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitchBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the virtual machines you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies objects to retrieve one or more vSphere VirtualMachine objects that are related to them. This parameter accepts vCloud CIVM and OMResource objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VmRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>VmRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VirtualMachine objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>The NetworkName property, which is of type NicInfo and is accessed through the Vm.Guest.Nics property, is deprecated.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM -Name MyVM*</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all virtual machines whose names starting with &quot;MyVM&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myDatastore = Get-Datastore -Name &quot;MyDatastore&quot;
Get-VM -Datastore $myDatastore</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all virtual machines that reside on the specified datastore.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myDatacenter = Get-Datacenter -Name &quot;MyDatacenter&quot;
Get-VM -Location $myDatacenter</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all virtual machines in the specified datacenter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVDSwitch = Get-VDSwitch -Name &quot;MyVDSwitch&quot;
Get-VM -DistributedSwitch $myVDSwitch</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all virtual machines connected to the specified distributed switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VM.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMGuest</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the guest operating systems of the specified virtual machines.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMGuest</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the guest operating systems of the specified virtual machines. To specify a server different from the default one, use the Server parameter. When Get-VMGuest is run against a virtual machine that is just starting, the properties of the returned VMGuest object are not filled at one time.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMGuest</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines whose guest operating systems you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines whose guest operating systems you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMGuest objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMGuest -VM VM</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the guest OS of the virtual machine named VM.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMGuest.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMGuestNetworkInterface</command:name>
		<maml:description>
			<maml:para>This cmdlet etrieves information about the network configuration of the specified virtual machines or guests.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMGuestNetworkInterface</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet is deprecated. Use Invoke-VMScript instead.

This cmdlet retrieves information about the network configuration of the specified virtual machines or guests. For a list of supported operating systems, see the PowerCLI User&#39;s Guide.

To run this cmdlet against vCenter Server/ESX/ESXi versions earlier than 5.0, you need to meet the following requirements:
*You must run the cmdlet on the 32-bit version of Windows PowerShell.
*You must have access to the ESX that hosts the virtual machine over TCP port 902.
*For vCenter Server/ESX/ESXi versions earlier than 4.1, you need VirtualMachine.Interact.ConsoleInteract privilege. For vCenter Server/ESX/ESXi 4.1 and later, you need VirtualMachine.Interact.GuestControl privilege.

To run this cmdlet against vCenter Server/ESXi 5.0 and later, you need VirtualMachine.GuestOperations.Execute and VirtualMachine.GuestOperations.Modify privileges.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMGuestNetworkInterface</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the guest network interfaces you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines for which you want to retrieve the network configuration.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMGuest</maml:name>
				<maml:description>
					<maml:para>Specifies the guest OS for which you want to retrieve the network configuration.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuest[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ToolsWaitSecs</maml:name>
				<maml:description>
					<maml:para>Specifies the time in seconds to wait for a response from the VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS. Do not use this parameter if the GuestUser and GuestPassword parameters are used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the guest network interfaces you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines for which you want to retrieve the network configuration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMGuest</maml:name>
			<maml:description>
				<maml:para>Specifies the guest OS for which you want to retrieve the network configuration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuest[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuest[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ToolsWaitSecs</maml:name>
			<maml:description>
				<maml:para>Specifies the time in seconds to wait for a response from the VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS. Do not use this parameter if the GuestUser and GuestPassword parameters are used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMGuestNetworkInterface objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This cmdlet is not compatible with IPv6 environments.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMGuestNetworkInterface -VM $vm -GuestUser User -GuestPassword pass2</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the guest network interface of the $vm virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMGuestNetworkInterface.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMGuestNetworkInterface</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMGuestRoute</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the routing configuration of the specified virtual machines or guests.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMGuestRoute</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet is deprecated. Use Invoke-VMGuestScript instead.

This cmdlet retrieves the routing configuration of the specified virtual machines or guests. For a list of supported operating systems, see the PowerCLI User&#39;s Guide.

To run this cmdlet against vCenter Server/ESX/ESXi versions earlier than 5.0, you need to meet the following requirements:
*You must run the cmdlet on the 32-bit version of Windows PowerShell.
*You must have access to the ESX that hosts the virtual machine over TCP port 902.
*For vCenter Server/ESX/ESXi versions earlier than 4.1, you need VirtualMachine.Interact.ConsoleInteract privilege. For vCenter Server/ESX/ESXi 4.1 and later, you need VirtualMachine.Interact.GuestControl privilege.

To run this cmdlet against vCenter Server/ESXi 5.0 and later, you need VirtualMachine.GuestOperations.Execute and VirtualMachine.GuestOperations.Modify privileges.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMGuestRoute</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines for which you want to retrieve the routing configuration.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMGuest</maml:name>
				<maml:description>
					<maml:para>Specifies the guest operating systems for which you want to retrieve the routing configuration.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuest[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ToolsWaitSecs</maml:name>
				<maml:description>
					<maml:para>Specifies the time in seconds to wait for a response from the VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS. Do not use this parameter if the GuestUser and GuestPassword parameters are used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines for which you want to retrieve the routing configuration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMGuest</maml:name>
			<maml:description>
				<maml:para>Specifies the guest operating systems for which you want to retrieve the routing configuration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuest[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuest[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ToolsWaitSecs</maml:name>
			<maml:description>
				<maml:para>Specifies the time in seconds to wait for a response from the VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS. Do not use this parameter if the GuestUser and GuestPassword parameters are used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMGuestRoute objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This cmdlet is not compatible with IPv6 environments.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMGuestRoute -VM $vm -GuestUser User -GuestPassword pass2</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the guest route of the $vm virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMGuestRoute.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMGuestRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMGuestRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHost</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the hosts on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHost</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the hosts on a vCenter Server system. Returns a set of hosts that correspond to the filter criteria provided by the cmdlet parameters.  To specify a server different from the default one, use the Server parameter.
When working directly on an ESX host, the Name property of the returned VMHost object  contains either the DNS name or the IP of the ESX host, depending on which of them was specified when connecting with Connect-VIServer.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHost</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the hosts you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoRecursion</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastores or datastore clusters to which the hosts that you want to retrieve are associated. Passing values to this parameter through a pipeline is deprecated and will be removed in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >StorageResource[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>Specifies the state of the hosts you want to retrieve. The valid values are Connected, Disconnected, NotResponding, and Maintenance.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostState[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the vSphere container objects (such as folders, datacenters, and clusters) you want to search for hosts.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIContainer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the virtual machine hosts that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VMHost</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the hosts you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>DistributedSwitch</maml:name>
				<maml:description>
					<maml:para>Filters the available hosts by the virtual switches they are connected to.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DistributedSwitch[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the virtual machine hosts that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VMHost</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the hosts you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoRecursion</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies virtual machines whose hosts you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>ResourcePool</maml:name>
				<maml:description>
					<maml:para>Specifies resource pools associated with the hosts you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ResourcePool[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastores or datastore clusters to which the hosts that you want to retrieve are associated. Passing values to this parameter through a pipeline is deprecated and will be removed in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >StorageResource[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the vSphere container objects (such as folders, datacenters, and clusters) you want to search for hosts.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIContainer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Returns only the virtual machine hosts that are associated with any of the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VMHost</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the hosts you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VMHost</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>RelatedObject</maml:name>
				<maml:description>
					<maml:para>Specifies objects to retrieve one or more VMHost​ objects that are related to them. This parameter accepts OMResource​ objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostRelatedObjectBase[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the hosts you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoRecursion</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to disable the recursive behavior of the command.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastores or datastore clusters to which the hosts that you want to retrieve are associated. Passing values to this parameter through a pipeline is deprecated and will be removed in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">StorageResource[]</command:parameterValue>
			<dev:type>
				<maml:name>StorageResource[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>Specifies the state of the hosts you want to retrieve. The valid values are Connected, Disconnected, NotResponding, and Maintenance.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostState[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostState[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies the vSphere container objects (such as folders, datacenters, and clusters) you want to search for hosts.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIContainer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Returns only the virtual machine hosts that are associated with any of the specified tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>DistributedSwitch</maml:name>
			<maml:description>
				<maml:para>Filters the available hosts by the virtual switches they are connected to.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DistributedSwitch[]</command:parameterValue>
			<dev:type>
				<maml:name>DistributedSwitch[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies virtual machines whose hosts you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>ResourcePool</maml:name>
			<maml:description>
				<maml:para>Specifies resource pools associated with the hosts you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ResourcePool[]</command:parameterValue>
			<dev:type>
				<maml:name>ResourcePool[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the hosts you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>RelatedObject</maml:name>
			<maml:description>
				<maml:para>Specifies objects to retrieve one or more VMHost​ objects that are related to them. This parameter accepts OMResource​ objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostRelatedObjectBase[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostRelatedObjectBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHost objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>When working directly on an ESX host, the Name property of the returned VMHost object  contains either the DNS name or the IP of the ESX host, depending on which of them was specified when connecting with Connect-VIServer.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost -Location MyDatacenter</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all hosts in the specified datacenter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$MyVM = Get-VM -Name MyVM
Get-VMHost -VM $MyVM</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the host on which the specified virtual machine runs.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVDSwitch = Get-VDSwitch -Name &quot;MyVDSwitch&quot;
Get-VMHost -DistributedSwitch $myVDSwitch</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all hosts associated with the specified vSphere distributed switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHost.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostAccount</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the host accounts available on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostAccount</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the host accounts available on a vCenter Server system. If both User and Group parameters are set to $true, in the list returned by the command, group accounts come out on top. If none of the User and Group switch parameters are provided, the cmdlet retrieves only the user accounts. 
If the ID parameter is set, the cmdlet filters the host accounts by their IDs. To specify a server different from the default one, use the Server parameter.
Note: The specified server must be an ESX/ESXi host.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostAccount</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Group</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve only group host accounts. Starting with ESXi 5.1, this parameter is not supported.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>User</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve only user host accounts.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the host accounts you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Group</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve only group host accounts. Starting with ESXi 5.1, this parameter is not supported.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>User</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve only user host accounts.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the host accounts you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more HostAccount objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Depending on what the user specified, the returned object can be of one of the child types: HostGroupAccount, HostUserAccount.
Starting with ESXi 5.1, you cannot retrieve group host accounts.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostAccount -Group</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the group accounts for the default ESX/ESXi host. Starting with ESXi 5.1, you cannot retrieve group accounts.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myServer1 = Connect-VIServer -Server 10.23.112.235
$myUserAccount1 = New-VMHostAccount -ID MyUser1 -Password MyPass1 -UserAccount
Get-VMHostAccount -Server $myServer1 -ID $myUserAccount1.Id -User</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a host account specified by an ID and an ESX/ESXi host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myServer1 = Connect-VIServer -Server 10.23.112.235
$myGroupAccount1 = New-VMHostAccount -ID MyGroup1 -Password MyPassword1 -GroupAccount
Get-VMHostAccount -Server $myServer1 -Id $myGroupAccount.Id -Group</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a group host account specified by an ID and an ESX/ESXi host. Starting with ESXi 5.1, you cannot retrieve group host accounts.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myServer1 = Connect-VIServer 10.23.112.235
Get-VMHostAccount -Server $myServer1 -User -Group</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all user and group accounts on a specified ESX/ESXi host. Starting with ESXi 5.1, you cannot retrieve group host accounts.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostAccount.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostAdvancedConfiguration</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the advanced configuration of the hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostAdvancedConfiguration</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet is deprecated. Use Get-AdvancedSetting instead.

This cmdlet retrieves the advanced configuration of the hosts. For each of the specified hosts, the cmdlet returns a hash table mapping the names of the settings to the corresponding values.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostAdvancedConfiguration</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the host configuration settings you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve the configuration settings.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the host configuration settings you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve the configuration settings.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more System.Collections.Hashtable objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostAdvancedConfiguration -VMHost 10.23.123.100 -Name net*tcp*</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the virtual machine host advanced configuration settings, whose names contain &quot;net&quot; and &quot;tcp&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostAdvancedConfiguration.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostAdvancedConfiguration</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostAuthentication</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves authentication information for the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostAuthentication</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves authentication information for the specified hosts.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostAuthentication</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve authentication information.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VMHostAuthentication</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the host authentication information that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve authentication information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the host authentication information that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostAuthentication objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Supported only on ESX Server 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost | Get-VMHostAuthentication</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve authentication information for the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostAuthentication.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostAuthentication</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostAvailableTimeZone</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the time zones available on the specified host.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostAvailableTimeZone</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the time zones available on the specified host.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostAvailableTimeZone</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host for which you want to retrieve the available time zones.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the available time zones you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host for which you want to retrieve the available time zones.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the available time zones you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostTimeZone objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostAvailableTimeZone -Name Pacific* -VMHost 10.23.112.19</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the Pacific time zones available on the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostAvailableTimeZone.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostDiagnosticPartition</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves a list of  the diagnostic partitions on the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostDiagnosticPartition</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves a list of the diagnostic partitions on the specified hosts. The list is ordered by the partitions preference. Local diagnostic partitions are more preferable than shared diagnostic partitions because multiple servers cannot share the same partition. The most preferred diagnostic partition is first in the list.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostDiagnosticPartition</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve diagnostic partitions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>All</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve all diagnostic partitions on the specified hosts. By default, only the active partitions are retrieved.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve diagnostic partitions.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>All</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve all diagnostic partitions on the specified hosts. By default, only the active partitions are retrieved.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostDiagnosticPartition objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost 192.168.1.10 | Get-VMHostDiagnosticPartition -All</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all diagnostic partitions for the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostDiagnosticPartition.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostDiagnosticPartition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostDisk</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves information about the specified SCSI LUN disk.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostDisk</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves information about the specified SCSI LUN disk.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostDisk</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies hosts to retrieve the hard disks attached to them.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VMHostDisk</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the SCSI LUN disks that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VMHostDisk</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>ScsiLun</maml:name>
				<maml:description>
					<maml:para>Specifies the SCSI LUN for which you want to retrieve information.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ScsiLun[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies hosts to retrieve the hard disks attached to them.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the SCSI LUN disks that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>ScsiLun</maml:name>
			<maml:description>
				<maml:para>Specifies the SCSI LUN for which you want to retrieve information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ScsiLun[]</command:parameterValue>
			<dev:type>
				<maml:name>ScsiLun[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostDisk objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostDisk -VMHost $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the disks of the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost | Get-VMHostHba -Type FibreChannel | Get-ScsiLun | Get-VMHostDisk</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the host disks only for LUNs that are of FibreChannel type.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostDisk.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostDiskPartition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostDiskPartition</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the partitions of a host disk (LUN).</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostDiskPartition</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the partitions of a host disk (LUN).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostDiskPartition</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHostDisk</maml:name>
				<maml:description>
					<maml:para>Specifies the host disk for which you want to retrieve the partitions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostDisk[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VMHostDiskPartition</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the host disk partitions that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHostDisk</maml:name>
			<maml:description>
				<maml:para>Specifies the host disk for which you want to retrieve the partitions.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostDisk[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostDisk[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the host disk partitions that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostDiskPartition objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost Host | Get-VMHostDisk | Get-VMHostDiskPartition | ? {.Type -eq &quot;Ntfs&quot;} | Format-VMHostDiskPartition -VolumeName &quot;NewStorage&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Formats the NTFS disk partitions of a host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostDiskPartition.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Format-VMHostDiskPartition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostFirewallDefaultPolicy</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the firewall default policy of the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostFirewallDefaultPolicy</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the firewall default policy of the specified hosts. The firewall policy determines whether the outgoing and incoming connections are allowed.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostFirewallDefaultPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts whose firewall default policy you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts whose firewall default policy you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostFirewallDefaultPolicy objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Firewall management functionality is not supported on ESX 3i.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostFirewallDefaultPolicy -VMHost 10.23.123.100</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the default firewall policy of the virtual machine host with an IP address 10.23.123.100.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostFirewallDefaultPolicy.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostFirewallDefaultPolicy</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostFirewallException</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the exceptions from the firewall policy on the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostFirewallException</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the exceptions from the firewall policy on the specified hosts. The exceptions can be filtered using the VMHost, Name, Port, and Enabled parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostFirewallException</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the firewall exceptions you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve firewall exceptions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>Specifies the number of the port for which you want to retrieve the firewall exceptions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Int32[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Indicates whether you want to retrieve only the enabled hosts firewall exceptions.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the firewall exceptions you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve firewall exceptions.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Port</maml:name>
			<maml:description>
				<maml:para>Specifies the number of the port for which you want to retrieve the firewall exceptions.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			<dev:type>
				<maml:name>Int32[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Indicates whether you want to retrieve only the enabled hosts firewall exceptions.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostFirewallException objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Firewall management functionality is not supported on ESX 3i.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost -Name VMHost1 | Get-VMHostFirewallException -Enabled:$true</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the enabled firewall exceptions of a host named VMHost1.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostFirewallException &quot;SSH Server&quot;, &quot;SSH Client&quot; -VMHost $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the firewall exceptions for the SSH server and client for the virtual machine host $vmhost.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostFirewallException -VMHost Host -Port 21</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the firewall exceptions of a host named Host. Only firewall exceptions which have port 21 in their incoming port or outgoing ports are returned.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostFirewallException.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostFirewallException</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostFirmware</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves hosts firmware information.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostFirmware</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves firmware information for the hosts specified by the VMHost parameter. To specify a server different from the default one, use the Server parameter. To run this cmdlet, you need to have the &quot;Host.Config.Firmware&quot; permission to the ESX.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostFirmware</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve firmware information.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>This parameter is required when you specify the host by name. In this case, the host with the specified name is searched on the specified servers and firmware information is retrieved from it. If a VMHost object is passed to the VMHost parameter, the Server parameter is not used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VMHostFirmware</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve firmware information.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>BackupConfiguration</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to backup the host firmware configuration and download the bundle to the specified DestinationPath.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DestinationPath</maml:name>
				<maml:description>
					<maml:para>Specifies a destination path where to download the host configuration backup bundle if the BackupConfiguration parameter is set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>This parameter is required when you specify the host by name. In this case, the host with the specified name is searched on the specified servers and firmware information is retrieved from it. If a VMHost object is passed to the VMHost parameter, the Server parameter is not used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve firmware information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>This parameter is required when you specify the host by name. In this case, the host with the specified name is searched on the specified servers and firmware information is retrieved from it. If a VMHost object is passed to the VMHost parameter, the Server parameter is not used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BackupConfiguration</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to backup the host firmware configuration and download the bundle to the specified DestinationPath.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DestinationPath</maml:name>
			<maml:description>
				<maml:para>Specifies a destination path where to download the host configuration backup bundle if the BackupConfiguration parameter is set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more HostFirmware or HostFirmwareBundle objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If the BackupConfiguration parameter is specified, the cmdlet returns zero or more HostFirmwareBundle objects. Otherwise, the cmdlet returns zero or more HostFirmware objects.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This functionality applies to ESXi Embedded only.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostFirmware -VMHost $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the firmware information for the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostFirmware -VMHost $vmhost -BackupConfiguration -DestinationPath C:\Downloads</dev:code>
  			<dev:remarks>
				<maml:para>Backups a server configuration for the virtual machine host stored in the $vmhost variable, and downloads the configuration files into the specified folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostFirmware.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostFirmware</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostHardware</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves ESXi host hardware and firmware information.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostHardware</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves hardware and firmware information for the hosts specified by the VMHost parameter. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostHardware</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve hardware information. If not specified, the cmdlet retrieves hardware information for all hosts on all default connections.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WaitForAllData</maml:name>
				<maml:description>
					<maml:para>If specified, forces all data for each result object to be retrieved before that object is returned. If this parameter is not specified, retrieval of some of the data in the output objects might be postponed to an arbitrary point in time between the cmdlet call and the first time the data is accessed through the corresponding property. As a result, not specifying this parameter makes the cmdlet return data faster, but different portions of the data in result objects might come from different points in time.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SkipCACheck</maml:name>
				<maml:description>
					<maml:para>Indicates that when connecting through HTTPS, the client does not validate that the server certificate is signed by a trusted certification authority (CA).

Note: You should use this parameter only when the remote server can be trusted by using another mechanism, such as when the remote computer is part of a network that is physically secure and isolated.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SkipCNCheck</maml:name>
				<maml:description>
					<maml:para>Indicates that the certificate common name (CN) of the server does not need to match the hostname of the server.

Note: You should use this parameter only for trusted computers.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SkipRevocationCheck</maml:name>
				<maml:description>
					<maml:para>Indicates that the revocation check for server certificates is skipped.

Note: You should use this parameter only for trusted computers.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SkipAllSslCertificateChecks</maml:name>
				<maml:description>
					<maml:para>Indicates that all checks for SSL server certificates are skipped.

Note: You should use this parameter only for trusted computers.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>This parameter is required when you specify the host by name. In this case, the host with the specified name is searched on the specified servers and hardware information is retrieved from it. If a VMHost object is passed to the VMHost parameter, the Server parameter is not used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VMHostHardware</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Filters the ESXi hosts by ID.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WaitForAllData</maml:name>
				<maml:description>
					<maml:para>If specified, forces all data for each result object to be retrieved before that object is returned. If this parameter is not specified, retrieval of some of the data in the output objects might be postponed to an arbitrary point in time between the cmdlet call and the first time the data is accessed through the corresponding property. As a result, not specifying this parameter makes the cmdlet return data faster, but different portions of the data in result objects might come from different points in time.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SkipCACheck</maml:name>
				<maml:description>
					<maml:para>Indicates that when connecting through HTTPS, the client does not validate that the server certificate is signed by a trusted certification authority (CA).

Note: You should use this parameter only when the remote server can be trusted by using another mechanism, such as when the remote computer is part of a network that is physically secure and isolated.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SkipCNCheck</maml:name>
				<maml:description>
					<maml:para>Indicates that the certificate common name (CN) of the server does not need to match the hostname of the server.

Note: You should use this parameter only for trusted computers.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SkipRevocationCheck</maml:name>
				<maml:description>
					<maml:para>Indicates that the revocation check for server certificates is skipped.

Note: You should use this parameter only for trusted computers.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SkipAllSslCertificateChecks</maml:name>
				<maml:description>
					<maml:para>Indicates that all checks for SSL server certificates are skipped.

Note: You should use this parameter only for trusted computers.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>This parameter is required when you specify the host by name. In this case, the host with the specified name is searched on the specified servers and hardware information is retrieved from it. If a VMHost object is passed to the VMHost parameter, the Server parameter is not used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve hardware information. If not specified, the cmdlet retrieves hardware information for all hosts on all default connections.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WaitForAllData</maml:name>
			<maml:description>
				<maml:para>If specified, forces all data for each result object to be retrieved before that object is returned. If this parameter is not specified, retrieval of some of the data in the output objects might be postponed to an arbitrary point in time between the cmdlet call and the first time the data is accessed through the corresponding property. As a result, not specifying this parameter makes the cmdlet return data faster, but different portions of the data in result objects might come from different points in time.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SkipCACheck</maml:name>
			<maml:description>
				<maml:para>Indicates that when connecting through HTTPS, the client does not validate that the server certificate is signed by a trusted certification authority (CA).

Note: You should use this parameter only when the remote server can be trusted by using another mechanism, such as when the remote computer is part of a network that is physically secure and isolated.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SkipCNCheck</maml:name>
			<maml:description>
				<maml:para>Indicates that the certificate common name (CN) of the server does not need to match the hostname of the server.

Note: You should use this parameter only for trusted computers.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SkipRevocationCheck</maml:name>
			<maml:description>
				<maml:para>Indicates that the revocation check for server certificates is skipped.

Note: You should use this parameter only for trusted computers.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SkipAllSslCertificateChecks</maml:name>
			<maml:description>
				<maml:para>Indicates that all checks for SSL server certificates are skipped.

Note: You should use this parameter only for trusted computers.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>This parameter is required when you specify the host by name. In this case, the host with the specified name is searched on the specified servers and hardware information is retrieved from it. If a VMHost object is passed to the VMHost parameter, the Server parameter is not used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Filters the ESXi hosts by ID.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostHardware objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost &quot;MyVMHost&quot; | Get-VMHostHardware</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves hardware information about the &quot;MyVMHost&quot; host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostHardware -VMHost &quot;MyVMHost&quot; -SkipAllSslCertificateChecks</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves hardware information about the &quot;MyVMHost&quot; host, skipping all verifications of SSL server certificates.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostHardware.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostHba</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves information about the available HBAs (Host Bus Adapter).</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostHba</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves information about the available HBAs (Host Bus Adapter).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostHba</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve HBAs.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Device</maml:name>
				<maml:description>
					<maml:para>Specifies the devices of the HBA you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the HBAs you want to retrieve. The valid values are Block, FibreChannel, iSCSI, and ParallelSCSI.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HbaType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve HBAs.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Device</maml:name>
			<maml:description>
				<maml:para>Specifies the devices of the HBA you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the HBAs you want to retrieve. The valid values are Block, FibreChannel, iSCSI, and ParallelSCSI.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HbaType[]</command:parameterValue>
			<dev:type>
				<maml:name>HbaType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more Hba objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostHba -Device *hba0* | fl</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the available HBA devices that contain &quot;hba0&quot; in their names.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostHba.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostHba</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostModule</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the option strings of the specified host modules.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostModule</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the option strings of the specified host modules. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostModule</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies hosts to retrieve their modules.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the host modules you want to retrieve. To find a list of the valid module names for different servers, see the vSphere documentation or in the ESX console, run &quot;esxcfg-module -l&quot;. This parameter is mandatory only if you are connected to ESX/vCenter Server with version earlier than 4.0.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies hosts to retrieve their modules.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the host modules you want to retrieve. To find a list of the valid module names for different servers, see the vSphere documentation or in the ESX console, run &quot;esxcfg-module -l&quot;. This parameter is mandatory only if you are connected to ESX/vCenter Server with version earlier than 4.0.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VmHostModule objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostModule -Name Shaper</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the option string for the specified host module.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostModule.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostModule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostNetwork</command:name>
		<maml:description>
			<maml:para>THis cmdlet retrieves the host networks on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostNetwork</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the host networks on a vCenter Server system. This command retrieves the networking configuration of the hosts specified by the VMHost parameter. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostNetwork</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts whose networking configuration you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts whose networking configuration you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostNetworkInfo objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostNetwork -VMHost 10.23.113.212 | fl</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the  networking configuration for the virtual machine host on IP address 10.23.113.212.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostNetwork.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostNetwork</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostNetworkAdapter</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the host network adapters on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostNetworkAdapter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the host network adapters on a vCenter Server system.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostNetworkAdapter</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts whose network adapters you want to retrieve. The position of this parameter is deprecated and might change in a following release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualSwitch</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual switches to which network adapters that you want to retrieve are connected. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualSwitchBase[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>PortGroup</maml:name>
				<maml:description>
					<maml:para>Specifies the port groups to which network adapters that you want to retrieve are connected.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualPortGroupBase[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Physical</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve only physical network adapters.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMKernel</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve only VMKernel virtual network adapters.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Console</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to retrieve only service console virtual network adapters.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the host network adapters you want to retrieve. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the host network adapters you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts whose network adapters you want to retrieve. The position of this parameter is deprecated and might change in a following release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualSwitch</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual switches to which network adapters that you want to retrieve are connected. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualSwitchBase[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitchBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>PortGroup</maml:name>
			<maml:description>
				<maml:para>Specifies the port groups to which network adapters that you want to retrieve are connected.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualPortGroupBase[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualPortGroupBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Physical</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve only physical network adapters.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMKernel</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve only VMKernel virtual network adapters.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Console</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to retrieve only service console virtual network adapters.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the host network adapters you want to retrieve. The position of this parameter is deprecated and will be changed in a future release. To avoid errors when you run existing scripts on future PowerCLI versions, specify the parameter by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the host network adapters you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more HostVirtualNic objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostNetworkAdapter -VMKernel</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves information about about all VMKernel network adapters on servers that you are connected to.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVMHost = Get-VMHost -Name MyVMHost
Get-VMHostNetworkAdapter -VMHost $myVMHost -Physical</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all physical network adapters on the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVDSwitch = Get-VDSwitch -Name MyVDSwitch
Get-VMHostNetworkAdapter -VirtualSwitch $myVDSwitch -VMKernel</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all VMKernel network adapters connected to the specified virtual switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VDPortGroup -Name MyVDPortGroup | Get-VMHostNetworkAdapter</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves VMHost network adapters by a specified distributed port group.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVirtualSwitch = Get-VirtualSwitch -Name MyVirtualSwitch
Get-VMHostNetworkAdapter -VirtualSwitch $myVirtualSwitch</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves physical VMHost network adapters by a specified standard virtual switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostNetworkAdapter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostNetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostNetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostNetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostNtpServer</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the NTP servers on the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostNtpServer</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the NTP servers on the specified hosts.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostNtpServer</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts, whose NTP servers you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts, whose NTP servers you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more String objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Returns the IP addresses of the NTP servers.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostNtpServer -VMHost 10.23.123.100</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the NTP server of the virtual machine host with an IP address 10.23.123.100.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>127.127.1.0
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostNtpServer.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-VMHostNtpServer</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostNtpServer</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostPatch</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves information about the host patches installed on the specified hosts.
This cmdlet is deprecated and will not return any results for ESX hosts version 5.0 and later. Use (Get-ESXCli).software.vib.list() as an alternative.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostPatch</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves information about the host patches installed on the specified hosts.
This cmdlet is deprecated and will not return any results for ESX hosts version 5.0 and later. Use (Get-ESXCli).software.vib.list() as an alternative.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostPatch</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve the available patches.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve the available patches.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostPatch objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostPatch Host</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves information of the host patches installed on the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostPatch.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-VMHostPatch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostPciDevice</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the PCI devices on the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostPciDevice</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the PCI devices on the specified hosts.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostPciDevice</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filters the PCI devices by name.

Note: This parameter is not case-sensitive.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts whose PCI devices you want to retrieve. If not specified, the cmdlet retrieves PCI devices for all hosts on all default connections.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DeviceClass</maml:name>
				<maml:description>
					<maml:para>Limits results to devices of the specified classes.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PciDeviceClass[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filters the PCI devices by name.

Note: This parameter is not case-sensitive.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts whose PCI devices you want to retrieve. If not specified, the cmdlet retrieves PCI devices for all hosts on all default connections.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeviceClass</maml:name>
			<maml:description>
				<maml:para>Limits results to devices of the specified classes.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PciDeviceClass[]</command:parameterValue>
			<dev:type>
				<maml:name>PciDeviceClass[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostPciDevice objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost &quot;MyHost&quot; | Get-VMHostPciDevice</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the PCI devices on the &quot;MyVMHost&quot; host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostPciDevice.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostProfile</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the available host profiles.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostProfile</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the available host profiles. A host profile encapsulates the host settings and helps to manage the host configuration.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostProfile</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the host profiles you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Specifies a phrase from the description of the host profiles you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies inventory objects associated with the host profiles you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >InventoryItem[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>ReferenceHost</maml:name>
				<maml:description>
					<maml:para>Specifies the reference hosts of the profiles you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the host profiles you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the host profiles you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Specifies a phrase from the description of the host profiles you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies inventory objects associated with the host profiles you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">InventoryItem[]</command:parameterValue>
			<dev:type>
				<maml:name>InventoryItem[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>ReferenceHost</maml:name>
			<maml:description>
				<maml:para>Specifies the reference hosts of the profiles you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the host profiles you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostProfile objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostProfile -Name Profile</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the virtual machine host profile named Profile.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostProfile.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Invoke-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Test-VMHostProfileCompliance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostProfileRequiredInput</command:name>
		<maml:description>
			<maml:para>This cmdlet performs a check whether the available information is sufficient to apply a host profile.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostProfileRequiredInput</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet performs a check whether the available information is sufficient to apply a host profile, and returns missing values. If the cmdlet returns no output, the information in the hashtable passed to the Variable parameter is sufficient to apply the host profile to the host by using the Apply-VMHostProfile cmdlet.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostProfileRequiredInput</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies a host to check if the provided information is sufficient for applying the specified host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Variable</maml:name>
				<maml:description>
					<maml:para>Provides a hash table that contains the available values required for applying the specified profile to the the specified host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Profile</maml:name>
				<maml:description>
					<maml:para>Specifies a host profile to check if the provided information is sufficient for applying it to the specified host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHostProfile</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Inapplicable</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to view also the elements that are inapplicable to the operation.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies a host to check if the provided information is sufficient for applying the specified host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHost</command:parameterValue>
			<dev:type>
				<maml:name>VMHost</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Variable</maml:name>
			<maml:description>
				<maml:para>Provides a hash table that contains the available values required for applying the specified profile to the the specified host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
			<dev:type>
				<maml:name>Hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Profile</maml:name>
			<maml:description>
				<maml:para>Specifies a host profile to check if the provided information is sufficient for applying it to the specified host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHostProfile</command:parameterValue>
			<dev:type>
				<maml:name>VMHostProfile</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Inapplicable</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to view also the elements that are inapplicable to the operation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostProfileInput objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost | Get-VMHostProfileRequiredInput</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves required input for a list of hosts.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostProfileRequiredInput -VMHost $vmhost -Profile $vmhostProfile</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a required input by specifying a host and a profile.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$result = Get-VMHostProfileRequiredInput -VMHost $vmhost -Variable $requiredInputHashtable;

if (-not $result) { Apply-VMHostProfile -Entity $vmhost -Variable $requiredInputHashtable}</dev:code>
  			<dev:remarks>
				<maml:para>Check whether the specified hashtable that contains values for each required input is exhaustive. If the result is null, then the hashtable can be used by Apply-VMHostProfile.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$result = Get-VMHostProfileRequiredInput -VMHost $vmhost -Variable $requiredInputHashtable -Inapplicable;

$result | where { $_.Type -eq &#39;Inapplicable&#39; } | foreach { Write-Host &quot;Key $($_.Key) is not applicable for host $vmhost&quot; }</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve the required and inapplicable input and display all inapplicable keys.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostProfileRequiredInput.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostRoute</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the routes from the routing table of the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostRoute</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the routes from the routing table of the specified hosts.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostRoute</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve routes.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve routes.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostRoute objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Supported only on ESX 4.1/ vCenter Server 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostRoute -VMHost $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the routes for the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostRoute -VMHost $vmhost1, $vmhost2 -Server $server1, $server2</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the routes for the specified hosts and servers.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostRoute.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostService</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves information about a host service.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostService</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves information about a host service. If the Refresh parameter is set to $true, the cmdlet refreshes the host services information before retrieving it. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostService</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies hosts for which you want to retrieve the available services.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Refresh</maml:name>
				<maml:description>
					<maml:para>Indicates whether the cmdlet refreshes the service information before retrieving it.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies hosts for which you want to retrieve the available services.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Refresh</maml:name>
			<maml:description>
				<maml:para>Indicates whether the cmdlet refreshes the service information before retrieving it.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more HostService objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostService -Refresh</dev:code>
  			<dev:remarks>
				<maml:para>Refreshes and retrieves the host services on the default server.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name Host

$vmHostService = Get-VMHostService -VMHost $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Gets the services of the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostService.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostSnmp</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves hosts SNMP configuration.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostSnmp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves hosts SNMP configuration. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostSnmp</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VmHostSnmp objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostSNMP</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the host SNMP configuration. Operates on the default server which must be an ESX host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostSnmp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostSNMP</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Test-VMHostSNMP</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostStartPolicy</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the start policy of hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostStartPolicy</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the start policy of the hosts specified by the VMHost parameter. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostStartPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts whose start policy you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts whose start policy you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostStartPolicy objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostStartPolicy -VMHost 10.23.113.212</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the start policy of the virtual machine host on IP address 10.23.113.212.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostStartPolicy.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostStartPolicy</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostStorage</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the host storages on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostStorage</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the host storages on a vCenter Server system. The cmdlet returns a list of the storages on the hosts specified by the VMHost parameter. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostStorage</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts for which you want to retrieve storage information.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Refresh</maml:name>
				<maml:description>
					<maml:para>Indicates whether the cmdlet refreshes the storage system information before retrieving the specified host storages.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RescanAllHba</maml:name>
				<maml:description>
					<maml:para>Indicates whether to issue a request to rescan all virtual machine hosts bus adapters for new storage devices prior to retrieving the storage information.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RescanVmfs</maml:name>
				<maml:description>
					<maml:para>Indicates whether to perform a re-scan for new virtual machine file systems that might have been added, prior to retrieving the storage information.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-VMHostStorage</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the host storages that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts for which you want to retrieve storage information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Refresh</maml:name>
			<maml:description>
				<maml:para>Indicates whether the cmdlet refreshes the storage system information before retrieving the specified host storages.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RescanAllHba</maml:name>
			<maml:description>
				<maml:para>Indicates whether to issue a request to rescan all virtual machine hosts bus adapters for new storage devices prior to retrieving the storage information.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RescanVmfs</maml:name>
			<maml:description>
				<maml:para>Indicates whether to perform a re-scan for new virtual machine file systems that might have been added, prior to retrieving the storage information.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the host storages that you want to retrieve.

Note: When a list of values is specified for the Id parameter, the returned objects would have an ID that matches exactly one of the string values in that list.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostStorageInfo objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>The ScsiLun property of the VMHostStorageInfo object is deprecated and scheduled for removal.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VmHostStorage -VMHost 10.23.112.234 -Refresh</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves storage information from the virtual machine host with IP address 10.23.112.234.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostStorage | select -expandproperty scsilun | fl *</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves information about the vendor, model, and serial number of the virtual machine host storage SCSI adapter.

Note that for devices, that are not SCSI-3 compliant, the SerialNumber property is not defined. And not  all SCSI-3 compliant devices provide the serial number information.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostStorage.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostStorage</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMHostSysLogServer</command:name>
		<maml:description>
			<maml:para>This cmdlet displays the remote syslog servers of the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMHostSysLogServer</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet displays the remote syslog servers of the specified hosts. The returned object contains the server address and the port if configured.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMHostSysLogServer</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host whose remote syslog server you want to display.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host whose remote syslog server you want to display.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more NamedIPEndPoint objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$sysLogServer = Get-VMHostSysLogServer  -VMHost 10.23.123.234</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the SysLog server of the virtual machine host with IP address 10.23.123.234.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMHostSysLogServer.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostSysLogServer</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMQuestion</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the pending questions for the specified virtual machines.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMQuestion</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the pending questions for the specified virtual machines. A question is a task that requires a response from you. If the VM parameter is not specified or its value is $null, the cmdlet returns all questions for all virtual machines on the specified servers.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMQuestion</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines whose pending questions you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>QuestionText</maml:name>
				<maml:description>
					<maml:para>Specifies a phrase from the text that describes the questions you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>QuestionId</maml:name>
				<maml:description>
					<maml:para>Specifies the IDs of the questions you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines whose pending questions you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="1">
			<maml:name>QuestionText</maml:name>
			<maml:description>
				<maml:para>Specifies a phrase from the text that describes the questions you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>QuestionId</maml:name>
			<maml:description>
				<maml:para>Specifies the IDs of the questions you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VmQuestion objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMQuestion -VM VM</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the questions of the VM virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Get-VM VM

$vm | Get-VMQuestion -QuestionText &quot;*have been moved or copied*&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the VM virtual machine questions that contain the phrase &quot;have been moved or copied&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMQuestion.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMQuestion</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMResourceConfiguration</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves information about the resource allocation between the selected virtual machines.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMResourceConfiguration</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves information about the resource allocation between the selected virtual machines.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMResourceConfiguration</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines whose resource configuration you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines whose resource configuration you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMResourceConfiguration objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMResourceConfiguration -VM VM | Format-Custom -Property DiskResourceConfiguration</dev:code>
  			<dev:remarks>
				<maml:para>Displays the disk share for the VM virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMResourceConfiguration.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMResourceConfiguration</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Get-VMStartPolicy</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the start policy of the virtual machines on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>VMStartPolicy</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet retrieves the start policy of the virtual machines on a vCenter Server system. The virtual machines are specified by the VM parameter or retrieved from the host passed through the VMHost parameter. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-VMStartPolicy</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts of the virtual machines whose start policy you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines whose start policy you want to retrieve.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts of the virtual machines whose start policy you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines whose start policy you want to retrieve.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMStartPolicy objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMStartPolicy -VM VM</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the start policy of the virtual machine named VM.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Get-VMStartPolicy.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMStartPolicy</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Import-VApp</command:name>
		<maml:description>
			<maml:para>This cmdlet imports OVF (Open Virtualization Format) and OVA packages. The package can contain a virtual appliance or a virtual machine.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Import</command:verb>
		<command:noun>VApp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet imports OVF (Open Virtualization Format) and OVA packages. The package can contain a vApp or a virtual machine. The cmdlet returns a VApp object when the OVF contains a vApp and a VirtualMachine object when the OVF contains a single virtual machine.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Import-VApp</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Source</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the OVF or OVA package that you want to import.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>OvfConfiguration</maml:name>
				<maml:description>
					<maml:para>Specifies values for a set of user-configurable OVF properties.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the imported vApp or virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies a vSphere inventory container where you want to import the vApp or virtual machine. It must be a vApp, a resource pool, or a cluster.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies a host where you want to run the vApp or virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies a datastore or a datastore cluster where you want to store the vApp or virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >StorageResource</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to import an OVF or OVA package even if the package signature cannot be verified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskStorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the storage format for the disks of the imported VMs. By default, the storage format is thick. When you set this parameter, you set the storage format for all virtual machine disks in the OVF package. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Source</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the OVF or OVA package that you want to import.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OvfConfiguration</maml:name>
			<maml:description>
				<maml:para>Specifies values for a set of user-configurable OVF properties.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
			<dev:type>
				<maml:name>Hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the imported vApp or virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies a vSphere inventory container where you want to import the vApp or virtual machine. It must be a vApp, a resource pool, or a cluster.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="3">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies a host where you want to run the vApp or virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHost</command:parameterValue>
			<dev:type>
				<maml:name>VMHost</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies a datastore or a datastore cluster where you want to store the vApp or virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">StorageResource</command:parameterValue>
			<dev:type>
				<maml:name>StorageResource</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to import an OVF or OVA package even if the package signature cannot be verified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskStorageFormat</maml:name>
			<maml:description>
				<maml:para>Specifies the storage format for the disks of the imported VMs. By default, the storage format is thick. When you set this parameter, you set the storage format for all virtual machine disks in the OVF package. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualDiskStorageFormat</command:parameterValue>
			<dev:type>
				<maml:name>VirtualDiskStorageFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created VApp or VirtualMachine object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If the specified package contains a vApp, the cmdlet returns the newly created VApp object. If the specified package contains a single virtual machine, the cmdlet returns the newly created VirtualMachine object.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost -Name &quot;MyVMHost1&quot;
Import-vApp -Source &quot;c:\vApps\WebServer\WebServer.ovf&quot; -VMHost $vmHost</dev:code>
  			<dev:remarks>
				<maml:para>Imports an OVF package by specifying the target host and name.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myCluster = Get-Cluster -Name &quot;MyCluster1&quot;
$vmHost = Get-VMHost -Name &quot;MyVMHost1&quot;
Import-vApp -Source &quot;c:\vApps\WebServer\WebServer.ovf&quot; -VMHost $vmHost -Location $myCluster -Name &quot;MyWebServerProduction1&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Imports an OVF package within a cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost -Name &quot;MyVMHost1&quot;
$myDatastore = Get-Datastore -Name &quot;MyDatastore1&quot;
$vmHost | Import-vApp -Source &quot;c:\vApps\WebServer\WebServer.ovf&quot; -Datastore $myDatastore</dev:code>
  			<dev:remarks>
				<maml:para>Imports an OVF package by specifying a datastore where to store the virtual machines.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myDatastore = Get-Datastore -Name &quot;MyDatastore1&quot;
$vmHost = Get-VMHost -Name &quot;MyVMHost1&quot;
$vmHost | Import-vApp -Source &quot;c:\vApps\WebServer\WebServer.ova&quot; -Datastore $myDatastore -Force</dev:code>
  			<dev:remarks>
				<maml:para>Imports an OVA package even if the package signature cannot be verified.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ovfConfig = Get-OvfConfiguration &quot;myOvfTemplate.ovf&quot;
$ovfConfig.NetworkMapping.Network.Value = &quot;Network 2&quot;
$ovfConfig.vami.VM_1.ip0.Value = &quot;10.23.101.2&quot;
$ovfConfig.vami.VM_2.ip0.Value = &quot;10.23.101.3&quot;
Import-VApp $ovfPath -OvfConfiguration $ovfConfig -VMHost $vmHost</dev:code>
  			<dev:remarks>
				<maml:para>Imports an OVF package with specified network mapping and two standard OVF properties.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 6 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ovfConfig = Get-OvfConfiguration &quot;myOvfTemplate.ovf&quot;
$portGroup = Get-VirtualPortGroup -Name &quot;Network 2&quot; -Standard
$ovfConfig.NetworkMapping.Network.Value = $portGroup
Import-VApp $ovfPath -OvfConfiguration $ovfConfig -VMHost $vmHost</dev:code>
  			<dev:remarks>
				<maml:para>Imports an OVF package by specifying network mapping with a standard port group object.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 7 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ovfConfig = Get-OvfConfiguration &quot;myOvfTemplate.ovf&quot;
$vdPortGroup = Get-VDPortgroup &quot;myDistributedPortGroup&quot;
$ovfConfig.NetworkMapping.Network.Value = $vdPortGroup
Import-VApp $ovfPath -OvfConfiguration $ovfConfig -VMHost $vmHost</dev:code>
  			<dev:remarks>
				<maml:para>Imports an OVF package by specifying network mapping with a distributed port group object.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 8 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ovfConfig.ToHashTable()
$ovfConfig = @{
   &quot;NetworkMapping.VM Test Network&quot;=&quot;Network 2&quot;;
   &quot;vami.ip0.VM_1&quot;=&quot;10.23.101.2&quot;;
   &quot;vami.ip0.VM_2&quot;=&quot;10.23.101.3&quot;
}
Import-VApp $ovfPath -OvfConfiguration $ovfConfig -VMHost $vmHost</dev:code>
  			<dev:remarks>
				<maml:para>Imports an OVF package by specifying a hash table with populated OVF properties to the OvfConfiguration parameter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Import-VApp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Import-VMHostProfile</command:name>
		<maml:description>
			<maml:para>This cmdlet imports a host profile from a file. The file path must be accessible from the vSphere PowerCLI client side.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Import</command:verb>
		<command:noun>VMHostProfile</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet imports a host profile from a file. The file path must be accessible from the vSphere PowerCLI client side.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Import-VMHostProfile</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>FilePath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the file, from which you want to import a host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name of the imported host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>ReferenceHost</maml:name>
				<maml:description>
					<maml:para>Specifies a reference host for the imported host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Specifies a description for the imported host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>FilePath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the file, from which you want to import a host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name of the imported host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="3">
			<maml:name>ReferenceHost</maml:name>
			<maml:description>
				<maml:para>Specifies a reference host for the imported host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHost</command:parameterValue>
			<dev:type>
				<maml:name>VMHost</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Specifies a description for the imported host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The imported VMHostProfile object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Import-VMHostProfile -FilePath export.prf -Name Profile</dev:code>
  			<dev:remarks>
				<maml:para>Imports a virtual machine host profile from the export.prf file and names it Profile.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Import-VMHostProfile.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Invoke-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Test-VMHostProfileCompliance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Install-VMHostPatch</command:name>
		<maml:description>
			<maml:para>This cmdlet updates the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Install</command:verb>
		<command:noun>VMHostPatch</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet updates the specified hosts. The cmdlet installs patches on the host. The patches that can be located locally, on a Web location, or in a host file system.
When using the LocalPath or WebPath parameters, the ESX/ESXi host attempts to store the patch contents in its local temporary directory. Because ESXi hosts might not have enough free space on their  local drives, this cannot apply to large size patches. The best practice for upgrading an ESXi host is to upload the patch contents on the host&#39;s datastore and to run Install-VMHostPatch with the HostPath parameter.
If you want to install patches packaged in a ZIP archive, you must extract them and use one of the HostPatch, LocalPath, or WebPath parameters. If you use the HostPath parameter, you must extract each patch to a temporary folder that is named after the patch ID (for example, c:\temp\ESX400-200906001\), and copy the folder in the root folder of a datastore. Note that the datastore path is case-sensitive. If you use the LocalPath parameter, you must extract each patch to a folder. The name of the folder must contain the patch ID (for example, &quot;ESX400-200906001&quot;). If you use the WebPath parameter, you must extract each patch to a folder that is published on a Web server. The patch URL address must contain the patch ID (for example, http://myInternalWebServer/esx40/ESX400-200906001/).
Depending on the component to be upgraded, you might have to set the host into a maintenance mode and to restart the host or the hostd management service after applying the patch.
This cmdlet is experimental and might be changed or removed in a future release.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Install-VMHostPatch</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts you want to update.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPath</maml:name>
				<maml:description>
					<maml:para>Specifies a file path on the ESX/ESXi host to the patches you want to install.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Install-VMHostPatch</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts you want to update.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WebPath</maml:name>
				<maml:description>
					<maml:para>Specifies the Web location of the patches you want to install.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Install-VMHostPatch</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts you want to update.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>LocalPath</maml:name>
				<maml:description>
					<maml:para>Specifies the local file system path to the patches you want to install. Providing credentials when installing a patch from a local path is mandatory.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUsername</maml:name>
				<maml:description>
					<maml:para>Specifies the username you want to use to authenticate with the host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use to authenticate with the host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts you want to update.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPath</maml:name>
			<maml:description>
				<maml:para>Specifies a file path on the ESX/ESXi host to the patches you want to install.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>WebPath</maml:name>
			<maml:description>
				<maml:para>Specifies the Web location of the patches you want to install.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>LocalPath</maml:name>
			<maml:description>
				<maml:para>Specifies the local file system path to the patches you want to install. Providing credentials when installing a patch from a local path is mandatory.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostUsername</maml:name>
			<maml:description>
				<maml:para>Specifies the username you want to use to authenticate with the host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use to authenticate with the host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>One or more VMHostPatchResult objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>The cmdlet works only on ESX 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Install-VMHostPatch -VMHost $vmhost1,$vmhost2 -LocalPath c:\esx40\patches\ESX400-200906001\metadata.zip -HostUsername admin -HostPassword pass</dev:code>
  			<dev:remarks>
				<maml:para>Updates ESX servers using a local file. Before running the cmdlet, you must download the patch file locally and extract to a folder. The name of the folder must contain the patch ID (for example, &quot;ESX400-200906001&quot;). Providing credentials when installing a patch from a local path is mandatory.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost | Install-VMHostPatch -WebPath http://myInternalWebServer/esx40/ESX400-200906001/metadata.zip</dev:code>
  			<dev:remarks>
				<maml:para>Upgrades an ESX server using a Web location. Before running the cmdlet, you must download the patch file and extract it to a folder that is published on a Web server. The patch URL address must contain the patch ID (for example, http://myInternalWebServer/esx40/ESX400-200906001/).</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$datastore = Get-Datastore -Name Datastore

Copy-DatastoreItem c:\temp\ESX400-200906001\

$datastore.DatastoreBrowserPath -Recurse

$vmhost1,$vmhost2 | Install-VMHostPatch -HostPath
/vmfs/volumes/datastore/ESX400-200906001/metadata.zip</dev:code>
  			<dev:remarks>
				<maml:para>Upgrades ESX servers using the -HostPath parameter. First, you must download the patch file and extract its contents to a temporary folder that is named after the patch ID (for example, c:\temp\ESX400-200906001\). Copy the folder in the root folder of the Datastore datastore and run Install-VMHostPatch providing the datastore path to the patch. Note that the datastore path is case-sensitive.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Install-VMHostPatch.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostPatch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Invoke-DrsRecommendation</command:name>
		<maml:description>
			<maml:para>This cmdlet applies the specified DRS recommendations.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Invoke</command:verb>
		<command:noun>DrsRecommendation</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet applies the specified DRS recommendations.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Invoke-DrsRecommendation</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>DrsRecommendation</maml:name>
				<maml:description>
					<maml:para>Specifies the DRS recommendations you want to apply.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DrsRecommendation[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>DrsRecommendation</maml:name>
			<maml:description>
				<maml:para>Specifies the DRS recommendations you want to apply.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DrsRecommendation[]</command:parameterValue>
			<dev:type>
				<maml:name>DrsRecommendation[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-DrsRecommendation -Priority 1,2 | Invoke-DrsRecommendation</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves and applies DRS recommendations with priorities 1 and 2.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$drs = Get-DrsRecommendation -Cluster Cluster
Invoke-DrsRecommendation -DrsRecommendation $drs -RunAsync</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the DRS recommendations from the Cluster cluster and applies them. The command returns without waiting for the task to complete.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Invoke-DrsRecommendation.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-DrsRecommendation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Invoke-VMHostProfile</command:name>
		<maml:description>
			<maml:para>This cmdlet applies a host profile to the specified host or cluster.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Invoke</command:verb>
		<command:noun>VMHostProfile</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet applies a host profile to the specified host or cluster. The host or cluster must be in a maintenance mode. If no value is provided to the Profile parameter, the profile currently associated with the  host or cluster is applied.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Invoke-VMHostProfile</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies hosts or clusters to which you want to apply the virtual machine host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >InventoryItem[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Profile</maml:name>
				<maml:description>
					<maml:para>Specifies the host profile you want to apply.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHostProfile</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Variable</maml:name>
				<maml:description>
					<maml:para>Specifies a hash table object that provides values for the host profile required variables.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AssociateOnly</maml:name>
				<maml:description>
					<maml:para>Indicates whether to associate the host profile to the specified host or cluster without applying it.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ApplyOnly</maml:name>
				<maml:description>
					<maml:para>Indicates whether to apply the host profile to the specified virtual machine host without associating it.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies hosts or clusters to which you want to apply the virtual machine host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">InventoryItem[]</command:parameterValue>
			<dev:type>
				<maml:name>InventoryItem[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Profile</maml:name>
			<maml:description>
				<maml:para>Specifies the host profile you want to apply.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHostProfile</command:parameterValue>
			<dev:type>
				<maml:name>VMHostProfile</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>Variable</maml:name>
			<maml:description>
				<maml:para>Specifies a hash table object that provides values for the host profile required variables.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
			<dev:type>
				<maml:name>Hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AssociateOnly</maml:name>
			<maml:description>
				<maml:para>Indicates whether to associate the host profile to the specified host or cluster without applying it.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ApplyOnly</maml:name>
			<maml:description>
				<maml:para>Indicates whether to apply the host profile to the specified virtual machine host without associating it.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHost or Cluster or System.Collections.Hashtable</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If there are missing values for the required variables, a hash table with the names of the required variables and the current/default values is returned. Otherwise, all directly affected host and cluster objects are returned. If the cmdlet runs with the AssociateOnly parameter for a cluster, only the cluster object is returned, but not its hosts.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>If there are missing values for the required variables, a hash table with the names of the required variables and the current or default values is returned. Otherwise, all directly affected host and cluster objects are returned. If the cmdlet is run for a cluster with the AssociateOnly parameter set, only the cluster object is returned, but not its hosts.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Invoke-VMHostProfile -AssociateOnly -Entity $cluster -Profile $profile</dev:code>
  			<dev:remarks>
				<maml:para>Associates the specified profile to all hosts in the specified cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Invoke-VMHostProfile -Entity $vmhost -Profile $profile</dev:code>
  			<dev:remarks>
				<maml:para>Associates and applies the specified profile to the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost | Invoke-VMHostProfile -ApplyOnly -Profile $profile</dev:code>
  			<dev:remarks>
				<maml:para>Applies the specified profile to all specified hosts.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost | Invoke-VMHostProfile -AssociateOnly -profile $profile</dev:code>
  			<dev:remarks>
				<maml:para>Associates the specified profile to all specified hosts.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Invoke-VMHostProfile $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Applies the associated host&#39;s profile to the host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 6 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$requireInput = Invoke-VMHostProfile $vmhost -Profile $profile;

$requireInput[&#39;network.hostPortGroup[&quot;key-vim-profile-host-HostPortgroupProfile-VMkernel&quot;].ipConfig.IpAddressPolicy.address&#39;] = &#39;192.168.0.1&#39;;

$requireInput[&#39;network.hostPortGroup[&quot;key-vim-profile-host-HostPortgroupProfile-VMkernel&quot;].ipConfig.IpAddressPolicy.subnetmask&#39;] = &#39;255.255.255.0&#39;;

Invoke-VMHostProfile $vmhost -Profile $profile -Variable $requireInput;</dev:code>
  			<dev:remarks>
				<maml:para>Applies a profile to host but first assigns values to all required values.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Invoke-VMHostProfile.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Test-VMHostProfileCompliance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Invoke-VMScript</command:name>
		<maml:description>
			<maml:para>This cmdlet runs a script in the guest OS of each of the specified virtual machines.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Invoke</command:verb>
		<command:noun>VMScript</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet runs a script in the guest OS of each of the specified virtual machines. To run Invoke-VMScript, the user must have read access to the folder containing the virtual machine and a Virtual Machine.Interaction.Console Interaction privilege. The virtual machines must be powered on and have VMware Tools installed. Network connectivity to the ESX system hosting the virtual machine on port 902 must be present. To authenticate with the host or the guest OS, one of the HostUser/HostPassword (GuestUser/GuestPassword) pair and HostCredential (GuestCredential) parameters must be provided. The guest account you use to authenticate with the guest operating system must have administrator&#39;s privileges. For a list of supported operating systems, see the PowerCLI User&#39;s Guide.

To run this cmdlet against vCenter Server/ESX/ESXi versions earlier than 5.0, you need to meet the following requirements:
*You must run the cmdlet on the 32-bit version of Windows PowerShell.
*You must have access to the ESX that hosts the virtual machine over TCP port 902.
*For vCenter Server/ESX/ESXi versions earlier than 4.1, you need VirtualMachine.Interact.ConsoleInteract privilege. For vCenter Server/ESX/ESXi 4.1 and later, you need VirtualMachine.Interact.GuestControl privilege.

To run this cmdlet against vCenter Server/ESXi 5.0 and later, you need VirtualMachine.GuestOperations.Modify and VirtualMachine.GuestOperations.Execute privileges.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Invoke-VMScript</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>ScriptText</maml:name>
				<maml:description>
					<maml:para>Provides the text of the script you want to run. You can also pass to this parameter a string variable containing the path to the script.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines on whose guest operating systems you want to run the script.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object containing the credentials you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object containing the credentials you want to use for authenticating with the virtual machine guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the virtual machine guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the virtual machine guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ToolsWaitSecs</maml:name>
				<maml:description>
					<maml:para>Specifies how long in seconds the system waits for connecting to the VMware Tools. The default value is 20.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ScriptType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the script. The valid values are PowerShell, Bat, and Bash. If the virtual machine OS is Windows, the default value is PowerShell. If the virtual machine OS is Linux, the default value is Bash.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScriptType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>ScriptText</maml:name>
			<maml:description>
				<maml:para>Provides the text of the script you want to run. You can also pass to this parameter a string variable containing the path to the script.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines on whose guest operating systems you want to run the script.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object containing the credentials you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object containing the credentials you want to use for authenticating with the virtual machine guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the virtual machine guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the virtual machine guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ToolsWaitSecs</maml:name>
			<maml:description>
				<maml:para>Specifies how long in seconds the system waits for connecting to the VMware Tools. The default value is 20.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>20</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ScriptType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the script. The valid values are PowerShell, Bat, and Bash. If the virtual machine OS is Windows, the default value is PowerShell. If the virtual machine OS is Linux, the default value is Bash.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ScriptType</command:parameterValue>
			<dev:type>
				<maml:name>ScriptType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>One or more VMScriptResult objectsVMScriptResult</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>The text output of the script.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>To make PowerShell scripts work, you must restart the virtual machine after the PowerShell installation. For BIN and BASH scripts, restart is not needed.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Invoke-VMScript -VM VM -ScriptText &quot;dir&quot; -GuestUser administrator -GuestPassword pass2</dev:code>
  			<dev:remarks>
				<maml:para>Lists the directory entries on the guest OS.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$script = &#39;&amp;&quot;$env:ProgramFiles\Common Files\Microsoft Shared\MSInfo\msinfo32.exe&quot; /report &quot;$env:Tmp\inforeport&quot;&#39;

Invoke-VMScript -ScriptText $script -VM VM -GuestCredential $guestCredential</dev:code>
  			<dev:remarks>
				<maml:para>Runs a PowerShell script. In PowerShell, to access environment variables, you must use the following syntax: $env:&lt;environment variable&gt; (for example, $env:ProgramFiles). Also, to run the program, you must specify an ampersand (&amp;) in front of the program path.
The outer quotes ($script = &#39;...&#39;) are required because this is how you define a string variable in PowerShell. The inner double quotes are required because there are spaces in the path.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$script = &#39;&quot;%programfiles%\Common Files\Microsoft Shared\MSInfo\msinfo32.exe&quot; /report &quot;%tmp%\inforeport&quot;&#39;

Invoke-VMScript -ScriptText $script -VM VM -GuestCredential $guestCredential -ScriptType Bat</dev:code>
  			<dev:remarks>
				<maml:para>Runs a BAT script. In BAT scripts, to access environment variables, you must use the following syntax: %&lt;environment variable&gt;% (for example, %programfiles%).

The outer quotes ($script = &#39;...&#39;) are required because this is how you define a string variable in PowerShell. The inner double quotes are required because there are spaces in the path.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Invoke-VMScript.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Mount-Tools</command:name>
		<maml:description>
			<maml:para>This cmdlet mounts the VMware Tools CD installer as a CD-ROM on the guest operating system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Mount</command:verb>
		<command:noun>Tools</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet mounts the VMware Tools CD installer as a CD-ROM on the guest operating system that is specified by the Guest or VM parameters. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Mount-Tools</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Guest</maml:name>
				<maml:description>
					<maml:para>Specifies the guest operating systems on which you want to mount VMware Tools.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuest[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Mount-Tools</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines on which you want to mount VMware Tools.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Guest</maml:name>
			<maml:description>
				<maml:para>Specifies the guest operating systems on which you want to mount VMware Tools.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuest[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuest[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines on which you want to mount VMware Tools.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Mount-Tools VM</dev:code>
  			<dev:remarks>
				<maml:para>Mounts the VMware Tools on the specified virtual machine. The virtual machine must be powered on.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMGuest VM | Mount-Tools</dev:code>
  			<dev:remarks>
				<maml:para>Mounts the VMware Tools on the virtual machine specified by its guest operating system. The virtual machine must be powered on.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Mount-Tools.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Dismount-Tools</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Update-Tools</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Move-Cluster</command:name>
		<maml:description>
			<maml:para>This cmdlet moves a vCenter Server cluster from one location to another.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>Cluster</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet moves a vCenter Server cluster to the location that is specified by the Destination parameter. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-Cluster</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Specifies the clusters you want to move to another location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Cluster[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the folder or datacenter where you want to move the clusters. If a datacenter is specified for the Destination parameter, the cluster is moved to its &quot;hostFolder&quot; folder. The &quot;hostFolder&quot; is a system folder and is guaranteed to exist.

Note: You cannot move clusters from one datacenter to another. You can only move clusters between folders and to datacenter level.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Specifies the clusters you want to move to another location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Cluster[]</command:parameterValue>
			<dev:type>
				<maml:name>Cluster[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies the folder or datacenter where you want to move the clusters. If a datacenter is specified for the Destination parameter, the cluster is moved to its &quot;hostFolder&quot; folder. The &quot;hostFolder&quot; is a system folder and is guaranteed to exist.

Note: You cannot move clusters from one datacenter to another. You can only move clusters between folders and to datacenter level.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more relocated Cluster objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Move-Cluster -Cluster Cluster -Destination Folder</dev:code>
  			<dev:remarks>
				<maml:para>Moves the cluster named Cluster into the folder called Folder on the same datacenter</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Move-Cluster.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Move-Datacenter</command:name>
		<maml:description>
			<maml:para>This cmdlet moves a vCenter Server datacenter from one location to another.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>Datacenter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet moves a vCenter Server datacenter to the location that is specified by the Destination parameter.  To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-Datacenter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Datacenter</maml:name>
				<maml:description>
					<maml:para>Specifies the datacenters you want to move to another location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datacenter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the folder where you want to move the datacenters.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Datacenter</maml:name>
			<maml:description>
				<maml:para>Specifies the datacenters you want to move to another location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Datacenter[]</command:parameterValue>
			<dev:type>
				<maml:name>Datacenter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies the folder where you want to move the datacenters.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more relocated Datacenter objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Move-Datacenter Datacenter -Destination Folder</dev:code>
  			<dev:remarks>
				<maml:para>Moves the Datacenter datacenter into the folder named Folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Move-Datacenter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Move-Datastore</command:name>
		<maml:description>
			<maml:para>This cmdlet moves datastores from one location to another.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>Datastore</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet moves datastores from one location to another.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-Datastore</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore that you want to move.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datastore[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies a datastore cluster, folder, or datacenter where you want to place the datastore.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIObject</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore that you want to move.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Datastore[]</command:parameterValue>
			<dev:type>
				<maml:name>Datastore[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies a datastore cluster, folder, or datacenter where you want to place the datastore.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIObject</command:parameterValue>
			<dev:type>
				<maml:name>VIObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more relocated Datastore objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Move-Datastore &quot;MyDatastore&quot; -Destination &quot;MyDatastoreFolder&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Moves the MyDatastore datastore to the specified folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myDatastoreCluster = Get-DatastoreCluster -Name &quot;MyDatatoreCluster&quot;
Get-Datastore &quot;MyDatastore1&quot;, &quot;MyDatastore2&quot; | Move-Datstore -Destination $myDatastoreCluster</dev:code>
  			<dev:remarks>
				<maml:para>Moves two datastores to a specified datastore cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Move-Datastore.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Move-Folder</command:name>
		<maml:description>
			<maml:para>This cmdlet moves a vCenter Server folder from one location to another.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>Folder</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet moves a vCenter Server folder to the location that is specified by the Destination parameter. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-Folder</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Folder</maml:name>
				<maml:description>
					<maml:para>Specifies the folders you want to move to another location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Folder[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the datacenter or folder where you want to move the folders. If a datacenter is specified for the Destination parameter, the folder is moved to the datacenter&#39;s hostFolder or vmFolder folder, depending on the folder&#39;s child item type. The hostFolder and vmFolder are system folders and are guaranteed to exist.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Folder</maml:name>
			<maml:description>
				<maml:para>Specifies the folders you want to move to another location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Folder[]</command:parameterValue>
			<dev:type>
				<maml:name>Folder[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies the datacenter or folder where you want to move the folders. If a datacenter is specified for the Destination parameter, the folder is moved to the datacenter&#39;s hostFolder or vmFolder folder, depending on the folder&#39;s child item type. The hostFolder and vmFolder are system folders and are guaranteed to exist.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more relocated Folder objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Folder -Name &quot;vmFolder&quot; | Move-Folder -Destination &quot;destinationVmFolder&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Moves the &quot;vmFolder&quot; folder into another folder of the same type named &quot;destinationVmFolder&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Move-Folder.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Move-HardDisk</command:name>
		<maml:description>
			<maml:para>This cmdlet moves a hard disk from one location to another.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>HardDisk</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet moves a hard disk from one location to another.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-HardDisk</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HardDisk</maml:name>
				<maml:description>
					<maml:para>Specifies the hard disk that you want to move to another location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HardDisk[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies a datastore where you want to place the hard disk.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Datastore</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the storage format of the relocated hard disk. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HardDisk</maml:name>
			<maml:description>
				<maml:para>Specifies the hard disk that you want to move to another location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HardDisk[]</command:parameterValue>
			<dev:type>
				<maml:name>HardDisk[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies a datastore where you want to place the hard disk.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Datastore</command:parameterValue>
			<dev:type>
				<maml:name>Datastore</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StorageFormat</maml:name>
			<maml:description>
				<maml:para>Specifies the storage format of the relocated hard disk. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualDiskStorageFormat</command:parameterValue>
			<dev:type>
				<maml:name>VirtualDiskStorageFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more relocated HardDisk objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myDatastore1 = Get-Datastore -Name &#39;MyDatastore1&#39;
$myDisk = Get-VM -Name MyVm1 | Get-HardDisk
Move-HardDisk -HardDisk $myDisk -Datastore $myDatastore1</dev:code>
  			<dev:remarks>
				<maml:para>Moves the hard disk of a specified virtual machine to another datastore.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myDisk = Get-VM -Name &#39;MyVM1&#39; | Get-HardDisk
$myDatastore1 = Get-Datastore -Name &#39;MyDatastore1&#39;
Move-hardDisk - HardDisk $myDisk -Datastore $myDatastore1 - StorageFormat &#39;EagerZeroedThick&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Moves the hard disk of a specified virtual machine to another datastore and changes the storage format of the hard disk to EagerZeroedThick.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Move-HardDisk.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Move-Inventory</command:name>
		<maml:description>
			<maml:para>This cmdlet moves a vCenter Server inventory item from one location to another.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>Inventory</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet moves a vCenter Server inventory object or template to the location that is specified by the Destination parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-Inventory</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Item</maml:name>
				<maml:description>
					<maml:para>Specifies the Folder, ResourcePool, Datacenter, VirtualMachine, VMHost, Template, or Cluster objects you want to move to another location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >InventoryItem[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the location where you want to move the inventory items.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Item</maml:name>
			<maml:description>
				<maml:para>Specifies the Folder, ResourcePool, Datacenter, VirtualMachine, VMHost, Template, or Cluster objects you want to move to another location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">InventoryItem[]</command:parameterValue>
			<dev:type>
				<maml:name>InventoryItem[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies the location where you want to move the inventory items.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Folder, ResourcePool, Datacenter, VirtualMachine, VMHost, Cluster</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more relocated VIObject objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Get-VM -Name VM*

Move-Inventory -Item $vm -Destination Folder</dev:code>
  			<dev:remarks>
				<maml:para>Moves the virtual machines whose names start with VM to the Folder folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Folder Folder1 | Get-Inventory -NoRecursion | Move-Inventory -Destination Folder2</dev:code>
  			<dev:remarks>
				<maml:para>Moves all objects from the Folder1 folder to the Folder2 folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Move-Inventory.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Inventory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Inventory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Move-ResourcePool</command:name>
		<maml:description>
			<maml:para>This cmdlet moves a resource pool from one location to another.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>ResourcePool</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet moves a resource pool to the location that is specified by the Destination parameter. To specify a server different from the default one, use the Server parameter. Moving a resource pool is only supported when the objects assigned to the ResourcePool and Destination parameters are passed through connections to one and the same server with the same credentials.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-ResourcePool</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>ResourcePool</maml:name>
				<maml:description>
					<maml:para>Specifies the resource pools you want to move to another location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ResourcePool[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the location where you want to move the resource pools. If a host or a cluster is specified for the Destination parameter, the resource pool is moved into a resource pool named Resources. The Resources resource pool is a system resource pool and is guaranteed to exist.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>ResourcePool</maml:name>
			<maml:description>
				<maml:para>Specifies the resource pools you want to move to another location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ResourcePool[]</command:parameterValue>
			<dev:type>
				<maml:name>ResourcePool[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies the location where you want to move the resource pools. If a host or a cluster is specified for the Destination parameter, the resource pool is moved into a resource pool named Resources. The Resources resource pool is a system resource pool and is guaranteed to exist.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more relocated ResourcePool objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Move-ResourcePool -ResourcePool ResourcePool -Destination Host</dev:code>
  			<dev:remarks>
				<maml:para>Moves the resource pool named ResourcePool to the virtual machine host Host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Move-ResourcePool.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Move-Template</command:name>
		<maml:description>
			<maml:para>This cmdlet moves virtual machine templates to another location.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>Template</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet moves virtual machine templates to a location that is specified by the Destination parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-Template</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine templates you want to move to another location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Template[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies a container object where you want to move the templates.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine templates you want to move to another location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Template[]</command:parameterValue>
			<dev:type>
				<maml:name>Template[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies a container object where you want to move the templates.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more relocated Template objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Move-Template -Template $template -Destination $dest</dev:code>
  			<dev:remarks>
				<maml:para>Moves the $template object into the $dest container object.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Move-Template.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Move-VApp</command:name>
		<maml:description>
			<maml:para>This cmdlet moves the specified virtual appliances to a new location.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>VApp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet moves the specified vApps to a new location. If the destination is a host or a cluster, the vApps are moved to the system &quot;Resources&quot; resource pool.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-VApp</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies where you want to move the specified vApps. Supported types are Folder, VMHost, Cluster, ResourcePool, VApp, and Datacenter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VApp</maml:name>
				<maml:description>
					<maml:para>Specifies the vApps you want to move.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VApp[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies where you want to move the specified vApps. Supported types are Folder, VMHost, Cluster, ResourcePool, VApp, and Datacenter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VApp</maml:name>
			<maml:description>
				<maml:para>Specifies the vApps you want to move.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VApp[]</command:parameterValue>
			<dev:type>
				<maml:name>VApp[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more relocated VApp objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost -Name &quot;MyVMHost1&quot;
$myDestinationRP = New-ResourcePool -Name &quot;vApp ResourcePool&quot; -Location $vmHost
Move-VApp -VApp (Get-Vapp -Name &quot;MyVApp1&quot; -Location $vmHost) -Destination $myDestinationRP</dev:code>
  			<dev:remarks>
				<maml:para>Moves a vApp from a host to a resource pool from the same host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHost = Get-VMHost -Name &quot;MyVMHost1&quot;
$myDestinationVApp = New-VApp -Name &quot;MyvApp1&quot; -Location $vmHost
(Get-Vapp -Name &quot;MyvApp2&quot; -Location (Get-ResourcePool -Name &quot;MyResourcePool1&quot;) | Move-VApp -Destination $myDestinationVApp</dev:code>
  			<dev:remarks>
				<maml:para>Moves a vApp from a resource pool to another vApp.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Move-VApp -Name &quot;MyvApp1&quot; (Get-VMHost -Name &quot;MyVMHost1&quot;)</dev:code>
  			<dev:remarks>
				<maml:para>Moves a vApp from a resource pool to a host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVmFolder1 = Get-Folder -Name &quot;MyVMFolder1&quot; -Location (Get-Datacenter -Name &quot;MyDatacenter1&quot;) -NoRecursion
$myVMFolder2 = New-Folder -Name &quot;MyVMFolder2&quot; -Location $myVmFolder1
Get-VApp -Name &quot;MyVApp&quot; | Move-VApp -Destination $myVMFolder2 -RunAsync</dev:code>
  			<dev:remarks>
				<maml:para>Moves a virtual appliance to a folder asynchronously.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Move-VApp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Move-VM</command:name>
		<maml:description>
			<maml:para>This cmdlet moves virtual machines to another location.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>VM</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet moves a virtual machine to the location that is specified by the Destination or the Datastore parameters. The destination must be a folder, host, cluster, or a resource pool. You can move a virtual machine to a DRS cluster. Moving a virtual machine to the top level of a non-DRS cluster is only possible if the virtual machine is in a resource pool in that cluster. If the virtual machine is outside the non-DRS cluster, you need to specify a virtual machine host in that cluster as destination. When moving virtual machines that are powered on, vMotion is used. To specify a server different from the default one, use the Server parameter. You can move storage and compute resources simultaneously.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-VM</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AdvancedOption</maml:name>
				<maml:description>
					<maml:para>This parameter is only applicable when a DatastoreCluster object is passed to the Datastore parameter.
Specifies one or more rules for the placement of the virtual machines that you want to relocate. 

To indicate that VMs should be stored on different datastores, pass an SdrsVMAntiAffinityRule object to the parameter. You can set more than one Storage DRS (SDRS) VM anti-affinity rules.

To indicate that the VM disks should be stored on different datastores, pass an SdrsVMDiskAntiAffinityRule object to the parameter. You can set only one SDRS VM disk anti-affinity rule.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AdvancedOption[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies a folder, host, cluster, or a resource pool where you want to move the virtual machines. If a datacenter is specified for the Destination parameter, the virtual machines are moved to the datacenter&#39;s &quot;vmFolder&quot; folder. The &quot;vmFolder&quot; is a system folder and is guaranteed to exist.
Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore or datastore cluster where you want to move the virtual machines. When you pass a datastore cluster to the Datastore parameter, you can also set the AdvancedOption parameter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >StorageResource</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskStorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies a new storage format for the hard disk of the virtual machine you want to move. This parameter is applicable only when moving a virtual machine to a different datastore, using the Datastore parameter. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMotionPriority</maml:name>
				<maml:description>
					<maml:para>Determines the priority that should be used for a vMotion operation.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMotionPriority</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines you want to move to another location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdvancedOption</maml:name>
			<maml:description>
				<maml:para>This parameter is only applicable when a DatastoreCluster object is passed to the Datastore parameter.
Specifies one or more rules for the placement of the virtual machines that you want to relocate. 

To indicate that VMs should be stored on different datastores, pass an SdrsVMAntiAffinityRule object to the parameter. You can set more than one Storage DRS (SDRS) VM anti-affinity rules.

To indicate that the VM disks should be stored on different datastores, pass an SdrsVMDiskAntiAffinityRule object to the parameter. You can set only one SDRS VM disk anti-affinity rule.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">AdvancedOption[]</command:parameterValue>
			<dev:type>
				<maml:name>AdvancedOption[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies a folder, host, cluster, or a resource pool where you want to move the virtual machines. If a datacenter is specified for the Destination parameter, the virtual machines are moved to the datacenter&#39;s &quot;vmFolder&quot; folder. The &quot;vmFolder&quot; is a system folder and is guaranteed to exist.
Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore or datastore cluster where you want to move the virtual machines. When you pass a datastore cluster to the Datastore parameter, you can also set the AdvancedOption parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">StorageResource</command:parameterValue>
			<dev:type>
				<maml:name>StorageResource</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskStorageFormat</maml:name>
			<maml:description>
				<maml:para>Specifies a new storage format for the hard disk of the virtual machine you want to move. This parameter is applicable only when moving a virtual machine to a different datastore, using the Datastore parameter. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualDiskStorageFormat</command:parameterValue>
			<dev:type>
				<maml:name>VirtualDiskStorageFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMotionPriority</maml:name>
			<maml:description>
				<maml:para>Determines the priority that should be used for a vMotion operation.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMotionPriority</command:parameterValue>
			<dev:type>
				<maml:name>VMotionPriority</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines you want to move to another location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more relocated VirtualMachine objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM -Name VM | Move-VM -Destination 10.23.112.235</dev:code>
  			<dev:remarks>
				<maml:para>Moves the virtual machine named VM from its current location to the host on IP address 10.23.112.235.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Move-VM -VM VM -Destination Folder</dev:code>
  			<dev:remarks>
				<maml:para>Moves the virtual machine to a folder called Folder. Note that you are able to move virtual machines only to folders containing virtual machines (the &#39;blue&#39; folders in the vSphere Client).</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Move-VM -VM &#39;MyVM&#39; -Destination &#39;MyDestination&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Moves a powered-on virtual machine from one existing host to another, by using vMotion, passing parameters by name.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Move-VM -VM &#39;MyVM&#39; -Datastore &#39;MyDatastore&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Moves a powered-on virtual machine from one existing datastore to another, by using storage vMotion, passing parameters by name.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myDatastoreCluster1 = Get-DatastoreCluster -Name &#39;MyDatastoreCluster1&#39;
Move-VM -VM &#39;MyVM1&#39; -Datastore $myDatastoreCluster1</dev:code>
  			<dev:remarks>
				<maml:para>Moves the MyVM1 virtual machine to any datastore in the specified datastore cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 6 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myDatastoreCluster1 = Get-DatastoreCluster -Name &#39;MyDatastoreCluster1&#39;
$myVm2 = Get-VM -Name &#39;MyVM2&#39;
$vmAntiAffinityRule = New-Object -TypeName VMware.VimAutomation.ViCore.Types.V1.DatastoreManagement.SdrsVMAntiAffinityRule -ArgumentList $myVm2
Move-VM -VM &#39;MyVM1&#39; -Datastore $myDatastoreCluster1 -AdvancedOption $vmAntiAffinityRule</dev:code>
  			<dev:remarks>
				<maml:para>Moves the MyVM1 virtual machine to the specified datastore cluster and sets a VM anti-affinity rule for the placement of the virtual machine. The MyVM1 virtual machine will be placed on any datastore in the specified datastore cluster that does not contain the MyVM2 virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 7 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVm1 = Get-VM -Name &#39;MyVM1&#39;
$vmdks = Get-Harddisk -VM $myVm1
$myDatastoreCluster1 = Get-DatastoreCluster -Name &#39;MyDatastoreCluster1&#39;
$vmdkAntiAffinityRule = New-Object -TypeName VMware.VimAutomation.ViCore.Types.V1.DatastoreManagement.SdrsVMDiskAntiAffinityRule -ArgumentList $vmdks
Move-VM -VM &#39;$myVm1&#39; -Datastore $myDatastoreCluster1 -AdvancedOption $vmdkAntiAffinityRule</dev:code>
  			<dev:remarks>
				<maml:para>Moves the MyVM1 virtual machine to the specified datastore cluster and sets a VM disk anti-affinity rule for the placement of the virtual machine. The disks of the MyVM1 virtual machine will be stored on different datastores in the specified datastore cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 8 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM -Name &#39;MyVM&#39; -Server &#39;MyServer&#39; | Move-VM -Destination &#39;NewHost&#39; -Datastore &#39;DatastoreOnNewHost&#39; -DiskStorageFormat &#39;Thin&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Moves a powered-off virtual machine to another datastore on another host and changes its disk storage format to thin.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Move-VM.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Move-VMHost</command:name>
		<maml:description>
			<maml:para>This cmdlet moves hosts to another location.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>VMHost</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet moves hosts to the location that is specified by the Destination parameter. To specify a server different from the default one, use the Server parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-VMHost</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts you want to move to another location.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies the location where you want to move the hosts.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts you want to move to another location.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies the location where you want to move the hosts.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more relocated VMHost objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Move-VMHost 192.168.112.113 -Destination Datacenter</dev:code>
  			<dev:remarks>
				<maml:para>Moves the host with IP address 10.23.112.113 to a different datacenter named Datacenter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Move-VMHost.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-AdvancedSetting</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new advanced setting for the specified entity.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>AdvancedSetting</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new advanced setting for the specified entity.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-AdvancedSetting</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the advanced setting.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>Specifies a value for the advanced setting.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Object</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies the entity for which you want to create a new advanced setting. This parameter accepts VIServer, VirtualMachine, DatastoreCluster, and Cluster objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the new advanced setting.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >AdvancedSettingType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to create the new advanced setting even if another setting with the same name exists for the specified object type.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the advanced setting.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>Specifies a value for the advanced setting.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="3">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies the entity for which you want to create a new advanced setting. This parameter accepts VIServer, VirtualMachine, DatastoreCluster, and Cluster objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIObject[]</command:parameterValue>
			<dev:type>
				<maml:name>VIObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the new advanced setting.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">AdvancedSettingType</command:parameterValue>
			<dev:type>
				<maml:name>AdvancedSettingType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to create the new advanced setting even if another setting with the same name exists for the specified object type.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The one or more newly created AdvancedSetting objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-AdvancedSetting -Entity (Get-Cluster -Name Cluster) -Name SettingName -Value SettingValue -Type ClusterHA</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new advanced setting for the Cluster cluster - of type CLusterHA, with name SettingName and value SettingValue.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-AdvancedSetting.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-AlarmAction</command:name>
		<maml:description>
			<maml:para>This cmdlet creates an alarm action and attaches it to the specified alarm.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>AlarmAction</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates an alarm action and attaches it to the specified alarm.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-AlarmAction</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>AlarmDefinition</maml:name>
				<maml:description>
					<maml:para>Specifies the alarm definition for which you want to configure actions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >AlarmDefinition</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Snmp</maml:name>
				<maml:description>
					<maml:para>Indicates that a SNMP message is sent when the alarm is activated.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AlarmAction</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>AlarmDefinition</maml:name>
				<maml:description>
					<maml:para>Specifies the alarm definition for which you want to configure actions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >AlarmDefinition</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Email</maml:name>
				<maml:description>
					<maml:para>Indicates that when the alarm is activated, the system sends an email message to the specified address. Use the Subject, To, CC, and Body parameters to customize the alarm message.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Subject</maml:name>
				<maml:description>
					<maml:para>Specifies a subject for the email message you want to send.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>To</maml:name>
				<maml:description>
					<maml:para>Specifies the email address to which you want to send a message.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Cc</maml:name>
				<maml:description>
					<maml:para>Specifies the email addresses you want to add to the CC field of the email message.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Body</maml:name>
				<maml:description>
					<maml:para>Specifies the text of the email message.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AlarmAction</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>AlarmDefinition</maml:name>
				<maml:description>
					<maml:para>Specifies the alarm definition for which you want to configure actions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >AlarmDefinition</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Script</maml:name>
				<maml:description>
					<maml:para>Indicates that a script is run when the alarm is activated.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ScriptPath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a batch file, located on a vCenter Server system, that will run when the alarm is activated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>AlarmDefinition</maml:name>
			<maml:description>
				<maml:para>Specifies the alarm definition for which you want to configure actions.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">AlarmDefinition</command:parameterValue>
			<dev:type>
				<maml:name>AlarmDefinition</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Snmp</maml:name>
			<maml:description>
				<maml:para>Indicates that a SNMP message is sent when the alarm is activated.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Email</maml:name>
			<maml:description>
				<maml:para>Indicates that when the alarm is activated, the system sends an email message to the specified address. Use the Subject, To, CC, and Body parameters to customize the alarm message.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Subject</maml:name>
			<maml:description>
				<maml:para>Specifies a subject for the email message you want to send.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>To</maml:name>
			<maml:description>
				<maml:para>Specifies the email address to which you want to send a message.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cc</maml:name>
			<maml:description>
				<maml:para>Specifies the email addresses you want to add to the CC field of the email message.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Body</maml:name>
			<maml:description>
				<maml:para>Specifies the text of the email message.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Script</maml:name>
			<maml:description>
				<maml:para>Indicates that a script is run when the alarm is activated.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ScriptPath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a batch file, located on a vCenter Server system, that will run when the alarm is activated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created AlarmAction object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmDefinition -Name &quot;Alarm1&quot; | New-AlarmAction -Snmp</dev:code>
  			<dev:remarks>
				<maml:para>Creates an alarm action SNMP.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmDefinition -Name &quot;Alarm1&quot; | New-AlarmAction -Script -ScriptPath &#39;c:\test.bat&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Creates an alarm action script.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmDefinition -Name &quot;Alarm1&quot; | New-AlarmAction -Email -To &#39;test@vmware.com&#39; -CC @(&#39;test1@vmware.com&#39;, &#39;test2@vmware.com&#39;) -Body &#39;Test body&#39; -Subject &#39;Test subject&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Creates an alarm action Email.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-AlarmAction.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-AlarmActionTrigger</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new action trigger for the specified alarm action.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>AlarmActionTrigger</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new action trigger for the specified alarm action.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-AlarmActionTrigger</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>StartStatus</maml:name>
				<maml:description>
					<maml:para>Specifies the start status for the alarm action. The valid values are Green, Yellow, and Red.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >InventoryItemStatus</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>EndStatus</maml:name>
				<maml:description>
					<maml:para>Specifies the end status for the alarm action. The valid values are Green, Yellow, and Red.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >InventoryItemStatus</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>AlarmAction</maml:name>
				<maml:description>
					<maml:para>Specifies the alarm action for which you want to create an action trigger.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >AlarmAction</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Repeat</maml:name>
				<maml:description>
					<maml:para>Indicates whether you want the alarm action to repeat until the alarm is acknowledged.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>StartStatus</maml:name>
			<maml:description>
				<maml:para>Specifies the start status for the alarm action. The valid values are Green, Yellow, and Red.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">InventoryItemStatus</command:parameterValue>
			<dev:type>
				<maml:name>InventoryItemStatus</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>EndStatus</maml:name>
			<maml:description>
				<maml:para>Specifies the end status for the alarm action. The valid values are Green, Yellow, and Red.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">InventoryItemStatus</command:parameterValue>
			<dev:type>
				<maml:name>InventoryItemStatus</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>AlarmAction</maml:name>
			<maml:description>
				<maml:para>Specifies the alarm action for which you want to create an action trigger.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">AlarmAction</command:parameterValue>
			<dev:type>
				<maml:name>AlarmAction</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Repeat</maml:name>
			<maml:description>
				<maml:para>Indicates whether you want the alarm action to repeat until the alarm is acknowledged.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created AlarmActionTrigger object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmDefinition -Name &quot;Alarm1&quot; | Get-AlarmAction | New-AlarmActionTrigger -StartStatus &#39;Red&#39; -EndStatus &#39;Yellow&#39; -Repeat</dev:code>
  			<dev:remarks>
				<maml:para>Creates an action trigger for all actions for the specified alarm definition.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-AlarmActionTrigger.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-CDDrive</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new virtual CD drive.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>CDDrive</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new virtual CD drive for each of the provided virtual machines. If an ISO location is provided, sets the CD to point to the ISO.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-CDDrive</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IsoPath</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore path to the ISO (CD image) file that backs the virtual CD drive. Do not set this parameter if the HostDevice parameter is set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostDevice</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the CD drive on the virtual machine host that backs the virtual CD drive. Do not set this parameter if the ISOPath parameter is set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartConnected</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual CD drive starts connected when the virtual machine associated with it powers on.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine to which the new virtual CD drive belongs.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IsoPath</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore path to the ISO (CD image) file that backs the virtual CD drive. Do not set this parameter if the HostDevice parameter is set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostDevice</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the CD drive on the virtual machine host that backs the virtual CD drive. Do not set this parameter if the ISOPath parameter is set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StartConnected</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual CD drive starts connected when the virtual machine associated with it powers on.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine to which the new virtual CD drive belongs.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The one or more newly created CDDrive objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-CDDrive -VM $vm -ISOPath &quot;Path_to_ISO\test.iso&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a CD drive on the specified virtual machine and attach an ISO image to it.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-CDDrive.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-Cluster</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new cluster.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>Cluster</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new cluster with the provided inputs, in the location that is specified by the Location parameter.
HAEnabled is automatically set to $true if some of the HA settings, HAAdmissionControlEnabled, HAFailoverLevel, HARestartPriority, HAIsolationResponse, are specified .
DrsEnabled is automatically set to $true if some of the DRS settings, DrsAutomationLevel, DrsMode, are specified .</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-Cluster</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HARestartPriority</maml:name>
				<maml:description>
					<maml:para>Specifies the cluster HA restart priority. The valid values are Disabled, Low, Medium, and High. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HARestartPriority</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAIsolationResponse</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The valid values are PowerOff and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HAIsolationResponse</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMSwapfilePolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the swapfile placement policy. The following values are valid:

InHostDataStore - Store the swapfile in the datastore that is specified by the VMSwapfileDatastoreID property of the virtual machine host. If the VMSwapfileDatastoreID property is not set or indicates a datastore with unsufficient free space, store the swapfile in the same directory as the virtual machine. This setting might degrade VMotion performance.

WithVM - Store the swapfile in the same directory as the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMSwapfilePolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the new cluster.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the location where you want to place the new cluster. If a datacenter is specified for the Location parameter, the cluster is created in its &quot;hostFolder&quot; folder. The &quot;hostFolder&quot; is a system folder and is guaranteed to exist.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that VMware HA (High Availability) is enabled.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAAdmissionControlEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that virtual machines cannot be powered on if they violate availability constraints.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAFailoverLevel</maml:name>
				<maml:description>
					<maml:para>Specifies a configured failover level. This is the number of physical host failures that can be tolerated without impacting the ability to meet minimum thresholds for all running virtual machines. The valid values range from 1 to 4.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that VMware DRS (Distributed Resource Scheduler) is enabled.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsMode</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated and scheduled for removal. Use the DrsAutomationLevel parameter instead. 

Specifies a DRS (Distributed Resource Scheduler) mode. The valid values are FullyAutomated, Manual, and PartiallyAutomated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:description>
					<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, and PartiallyAutomated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsAutomationLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VsanDiskClaimMode</maml:name>
				<maml:description>
					<maml:para>Specifies the mode by which disks are claimed by the Virtual SAN. If not specified and VsanEnabled is specified, the assumed value is Manual.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VsanDiskClaimMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VsanEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that the Virtual SAN feature is enabled on this cluster.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>EVCMode</maml:name>
				<maml:description>
					<maml:para>Specifies the VMware Enhanced vMotion Compatibility (EVC) mode of the newly created cluster. If not specified or set to $null, EVC is disabled.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HARestartPriority</maml:name>
			<maml:description>
				<maml:para>Specifies the cluster HA restart priority. The valid values are Disabled, Low, Medium, and High. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HARestartPriority</command:parameterValue>
			<dev:type>
				<maml:name>HARestartPriority</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HAIsolationResponse</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The valid values are PowerOff and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HAIsolationResponse</command:parameterValue>
			<dev:type>
				<maml:name>HAIsolationResponse</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMSwapfilePolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the swapfile placement policy. The following values are valid:

InHostDataStore - Store the swapfile in the datastore that is specified by the VMSwapfileDatastoreID property of the virtual machine host. If the VMSwapfileDatastoreID property is not set or indicates a datastore with unsufficient free space, store the swapfile in the same directory as the virtual machine. This setting might degrade VMotion performance.

WithVM - Store the swapfile in the same directory as the virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMSwapfilePolicy</command:parameterValue>
			<dev:type>
				<maml:name>VMSwapfilePolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the new cluster.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies the location where you want to place the new cluster. If a datacenter is specified for the Location parameter, the cluster is created in its &quot;hostFolder&quot; folder. The &quot;hostFolder&quot; is a system folder and is guaranteed to exist.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HAEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that VMware HA (High Availability) is enabled.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HAAdmissionControlEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that virtual machines cannot be powered on if they violate availability constraints.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HAFailoverLevel</maml:name>
			<maml:description>
				<maml:para>Specifies a configured failover level. This is the number of physical host failures that can be tolerated without impacting the ability to meet minimum thresholds for all running virtual machines. The valid values range from 1 to 4.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DrsEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that VMware DRS (Distributed Resource Scheduler) is enabled.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DrsMode</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated and scheduled for removal. Use the DrsAutomationLevel parameter instead. 

Specifies a DRS (Distributed Resource Scheduler) mode. The valid values are FullyAutomated, Manual, and PartiallyAutomated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DrsMode</command:parameterValue>
			<dev:type>
				<maml:name>DrsMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DrsAutomationLevel</maml:name>
			<maml:description>
				<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, and PartiallyAutomated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DrsAutomationLevel</command:parameterValue>
			<dev:type>
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VsanDiskClaimMode</maml:name>
			<maml:description>
				<maml:para>Specifies the mode by which disks are claimed by the Virtual SAN. If not specified and VsanEnabled is specified, the assumed value is Manual.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VsanDiskClaimMode</command:parameterValue>
			<dev:type>
				<maml:name>VsanDiskClaimMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VsanEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that the Virtual SAN feature is enabled on this cluster.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EVCMode</maml:name>
			<maml:description>
				<maml:para>Specifies the VMware Enhanced vMotion Compatibility (EVC) mode of the newly created cluster. If not specified or set to $null, EVC is disabled.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created Cluster object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-Cluster -Name &quot;MyCluster&quot; -Location &quot;MyDatacenter&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new cluster named &quot;MyCluster&quot; in the &quot;MyDatacenter&quot; datacenter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-Cluster -Name &quot;MyCluster&quot; -Location &quot;MyDatacenter&quot; -HAEnabled -HAAdmissionControlEnabled -HAFailoverLevel 2 -VMSwapfilePolicy &quot;InHostDatastore&quot; -HARestartPriority &quot;Low&quot; -HAIsolationResponse &quot;PowerOff&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new cluster named &quot;MyCluster&quot; in the &quot;MyDatacenter&quot; datacenter, with specified VMware HA (Hgh Availability) settings.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-Cluster -Name &quot;MyCluster&quot; -Location &quot;MyDatacenter&quot; -DRSEnabled -DRSAutomationLevel &#39;Manual&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new cluster named &quot;MyCluster&quot; in the &quot;MyDatacenter&quot; datacenter, with specified VMware DRS (Distributed Resource Scheduler) settings.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-Cluster -Name &quot;MyCluster&quot; -Location &quot;MyDatacenter&quot; -EVCMode &#39;intel-nehalem&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new cluster named &quot;MyCluster&quot; in the &quot;MyDatacenter&quot; datacenter, with specified VMware EVC (Enhanced vMotion Compatibility) settings.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-Cluster.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-CustomAttribute</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new custom attribute.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>CustomAttribute</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new custom attribute. A custom attribute is a user-defined description field of one or more vCenter Server objects.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-CustomAttribute</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new custom attribute.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>TargetType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the objects to which the new custom attribute applies. The valid values are VirtualMachine, ResourcePool, Folder, VMHost, Cluster, Datacenter, and $null. If the value is $null the custom attribute is global and applies to all target types.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >CustomAttributeTargetType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new custom attribute.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>TargetType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the objects to which the new custom attribute applies. The valid values are VirtualMachine, ResourcePool, Folder, VMHost, Cluster, Datacenter, and $null. If the value is $null the custom attribute is global and applies to all target types.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CustomAttributeTargetType[]</command:parameterValue>
			<dev:type>
				<maml:name>CustomAttributeTargetType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created CustomAttribute object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-CustomAttribute -Name &quot;CompanyName&quot; -TargetType VMHost, VirtualMachine</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new custom attribute named CompanyName for the virtual machines and hosts on the server.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-CustomAttribute.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Annotation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Annotation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-Datacenter</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new datacenter.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>Datacenter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new datacenter in the location that is specified by the Location parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-Datacenter</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the location where you want to create the new datacenter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new datacenter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies the location where you want to create the new datacenter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new datacenter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created Datacenter object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$folder = Get-Folder -NoRecursion | New-Folder -Name Folder

New-Datacenter -Location $folder -Name Datacenter | fl</dev:code>
  			<dev:remarks>
				<maml:para>Gets the inventory root folder and create a new folder called Folder in it.
Creates a new datacenter called Datacenter in the Folder folder. The result is pipelined to the fl command to retrieve a flat view of the new datacenter properties.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-Datacenter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-Datastore</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new datastore.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>Datastore</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new datastore based on the provided parameters. The following characters cannot be used in a datastore name: slash (/), backslash (\), and percent (%).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-Datastore</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies a host where you want to create the new datastore.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new datastore.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>If you want to create an NFS datastore, specify the remote path of the NFS mount point.
If you want to create a VMFS datastore, specify the canonical name of the SCSI logical unit that will contain new VMFS datastores.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Vmfs</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to create a VMFS datastore.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>BlockSizeMB</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum file size of VMFS in megabytes (MB). If no value is given, the maximum file size for the current system platform is used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>FileSystemVersion</maml:name>
				<maml:description>
					<maml:para>Specifies the file system you want to use on the new datastore.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-Datastore</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies a host where you want to create the new datastore.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new datastore.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>If you want to create an NFS datastore, specify the remote path of the NFS mount point.
If you want to create a VMFS datastore, specify the canonical name of the SCSI logical unit that will contain new VMFS datastores.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Nfs</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to create an NFS datastore.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NfsHost</maml:name>
				<maml:description>
					<maml:para>Specifies the NFS host where you want to create the new datastore.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ReadOnly</maml:name>
				<maml:description>
					<maml:para>Indicates that the access mode for the mount point is ReadOnly. The default access mode is ReadWrite.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Kerberos</maml:name>
				<maml:description>
					<maml:para>By default, NFS datastores are created with AUTH_SYS as the authentication protocol. This parameter indicates that the NFS datastore uses Kerberos version 5 for authentication. This parameter is available only for NFS version 4.1 datastores.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>FileSystemVersion</maml:name>
				<maml:description>
					<maml:para>Specifies the file system you want to use on the new datastore.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies a host where you want to create the new datastore.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new datastore.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>If you want to create an NFS datastore, specify the remote path of the NFS mount point.
If you want to create a VMFS datastore, specify the canonical name of the SCSI logical unit that will contain new VMFS datastores.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Vmfs</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to create a VMFS datastore.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BlockSizeMB</maml:name>
			<maml:description>
				<maml:para>Specifies the maximum file size of VMFS in megabytes (MB). If no value is given, the maximum file size for the current system platform is used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FileSystemVersion</maml:name>
			<maml:description>
				<maml:para>Specifies the file system you want to use on the new datastore.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Nfs</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to create an NFS datastore.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NfsHost</maml:name>
			<maml:description>
				<maml:para>Specifies the NFS host where you want to create the new datastore.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReadOnly</maml:name>
			<maml:description>
				<maml:para>Indicates that the access mode for the mount point is ReadOnly. The default access mode is ReadWrite.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Kerberos</maml:name>
			<maml:description>
				<maml:para>By default, NFS datastores are created with AUTH_SYS as the authentication protocol. This parameter indicates that the NFS datastore uses Kerberos version 5 for authentication. This parameter is available only for NFS version 4.1 datastores.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The one or more newly created Datastore objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-Datastore -VMHost $vmhost -Name Datastore -Path $scsiLun.CanonicalName -Vmfs -FileSystemVersion 3</dev:code>
  			<dev:remarks>
				<maml:para>Creates a VMFS datastore by specifying the file system type.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-Datastore -Nfs -VMHost 10.23.112.60 -Name NFSDatastore -Path /mynfs -NfsHost 10.23.84.73</dev:code>
  			<dev:remarks>
				<maml:para>Creates a NFS datastore.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost1, $vmhost2 | New-Datastore -Nfs -Name NFS1 -Path &quot;/mnt/nfs1/nfs11/test1&quot; -NfsHost 10.23.113.55 -ReadOnly</dev:code>
  			<dev:remarks>
				<maml:para>Creates a read-only NFS datastore across multiple virtual machine hosts.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-Datastore.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-DatastoreCluster</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new datastore cluster.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>DatastoreCluster</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new datastore cluster. By default, Storage DRS is disabled. To enable Storage DRS, run Set-DatastoreCluster.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-DatastoreCluster</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the datastore cluster that you want to create.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies a container object (Datacenter or Folder) where you want to place the new datastore cluster.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the datastore cluster that you want to create.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies a container object (Datacenter or Folder) where you want to place the new datastore cluster.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created DatastoreCluster object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-DatastoreCluster -Name &#39;MyDatastoreCluster&#39; -Location &#39;MyDatacenter&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new datastore cluster on the specified datacenter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-DatastoreCluster.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unknown</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-DrsRule</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new DRS rule.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>DrsRule</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new DRS rule. Each rule defines the virtual machines that can run on the same host (affinity rule) or must run on different hosts (anti-affinity rule).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-DrsRule</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new DRS rule.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Specifies the clusters for which the new DRS rule applies.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Cluster[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>If the value of this parameter is $true, the new DRS rule is enabled for the specified clusters. If the value is $false, it is disabled.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>KeepTogether</maml:name>
				<maml:description>
					<maml:para>If the value of this parameter is $true, the new DRS rule is an affinity rule. If the value is $false, the DRS rule is an anti-affinity rule.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines that are referenced by the new DRS rule.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new DRS rule.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Specifies the clusters for which the new DRS rule applies.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Cluster[]</command:parameterValue>
			<dev:type>
				<maml:name>Cluster[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>If the value of this parameter is $true, the new DRS rule is enabled for the specified clusters. If the value is $false, it is disabled.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeepTogether</maml:name>
			<maml:description>
				<maml:para>If the value of this parameter is $true, the new DRS rule is an affinity rule. If the value is $false, the DRS rule is an anti-affinity rule.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines that are referenced by the new DRS rule.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created DrsVMAffinityRule object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-DrsRule -Cluster $cluster -Name antiAffinityRule1 -KeepTogether $false -VM $antiAffinityVMs</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new DRS rule for the cluster saved in the $cluster variable with the specified parameters.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-DrsRule.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-FloppyDrive</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new virtual floppy drive.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>FloppyDrive</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new virtual floppy drive for each of the provided virtual machines. If a floppy image path is provided, sets the floppy drive to point to the image. If both the FloppyImagePath and HostDevice parameters are specified, an error is generated.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-FloppyDrive</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>FloppyImagePath</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore path to the floppy image file backing the virtual floppy drive. Do not use this parameter together with the HostDevice parameter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NewFloppyImagePath</maml:name>
				<maml:description>
					<maml:para>Specifies a new datastore path to a floppy image file backing the virtual floppy drive. Do not use this parameter together with the HostDevice parameter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostDevice</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the floppy drive on the host which will back this virtual floppy drive. Do not use this parameter together with the FloppyImagePath parameter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartConnected</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual floppy drive starts connected when its associated virtual machine powers on.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines to which you want to attach the new virtual floppy drive.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FloppyImagePath</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore path to the floppy image file backing the virtual floppy drive. Do not use this parameter together with the HostDevice parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NewFloppyImagePath</maml:name>
			<maml:description>
				<maml:para>Specifies a new datastore path to a floppy image file backing the virtual floppy drive. Do not use this parameter together with the HostDevice parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostDevice</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the floppy drive on the host which will back this virtual floppy drive. Do not use this parameter together with the FloppyImagePath parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StartConnected</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual floppy drive starts connected when its associated virtual machine powers on.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines to which you want to attach the new virtual floppy drive.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The one or more newly created FloppyDrive objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-FloppyDrive -VM VM -HostDevice &#39;/dev/fd0&#39; -StartConnected</dev:code>
  			<dev:remarks>
				<maml:para>Creates a floppy drive backed by the client device /dev/fd0 and sets it to start connected when the virtual machine is powered on.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-FloppyDrive.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-Folder</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new folder on a vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>Folder</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new folder on the specified location.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-Folder</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new folder.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies a container object (folder, datacenter, or cluster) where you want to place the new folder. If a datacenter is specified for the Location parameter, then the folder is created in its &quot;hostFolder&quot; folder and contains hosts and clusters. The &quot;hostFolder&quot; is a system folder and is guaranteed to exist.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new folder.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies a container object (folder, datacenter, or cluster) where you want to place the new folder. If a datacenter is specified for the Location parameter, then the folder is created in its &quot;hostFolder&quot; folder and contains hosts and clusters. The &quot;hostFolder&quot; is a system folder and is guaranteed to exist.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created Folder object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-Folder -Name &quot;Folder1&quot; -Location (Get-Datacenter)[0]</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new folder in a datacenter root.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-Folder -Name &quot;Folder1&quot; -Location (Get-Cluster)[0]</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new folder in a cluster root.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Folder | Select -First 1 | New-Folder -Name &quot;Folder2&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a nested folder by using a pipeline command.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-Folder.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-HardDisk</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new hard disk on the specified location.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>HardDisk</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new hard disk on the specified virtual machine or datastore. When a new virtual disk with raw disk mapping (RDM) backing is created, the compatibility mode of &quot;virtual&quot; or &quot;physical&quot; must be specified using the DiskType parameter. In &quot;virtual&quot; compatibility mode, the disk can use the specified disk modes. In &quot;physical&quot; compatibility mode, the disk modes are ignored and commands are passed directly to the backing Logical Unit Number (LUN). If &quot;flat&quot; mode is set by the DiskType parameter, the virtual disk backing is pre-allocated. If the hard disk is attached to no virtual machine, the value of the DiskType parameter might be Unknown, which means that no type is specified. Use the Persistence parameter to make the disk Persistent (changes are immediately and permanently written to the disk), Nonpersistent (changes to the disk are discarded when you power off or reset the virtual machine), IndependentPersistent, IndependentNonPersistent, or Undoable.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-HardDisk</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AdvancedOption</maml:name>
				<maml:description>
					<maml:para>Specifies advanced options for creating hard disks. Accepts only SdrsVMDiskAntiAffinityRule objects. You can define an anti-affinity SDRS rule for the disk by specifying a SdrsVMDiskAntiAffinityRule object to the AdvancedOption parameter and this will override any existing SdrsVMDiskAntiAffinityRule for the virtual machine.

The SdrsVMDiskAntiAffinityRule defines a Storage DRS intra-VM anti-affinity rule (vm disk anti-affinity rule). It is only applicable when creating a virtual machine or hard disk on a datastore cluster. An instance of the object is created by invoking its constructor. There are two constructors - &quot;public SdrsVMDiskAntiAffinityRule(param string[] diskIdentifier)&quot; and &quot;public SdrsVMDiskAntiAffinityRule(param HardDisk[] disk)&quot;. For the first constructor, &quot;diskIdentifier&quot; can be either the disk key or the index of the disk in the disk array. The specified disks (and the disk to which the rule is applied) are placed in an anti-affinity rule on a DatastoreCluster. Only one such rule is supported per a virtual machine. You can pass the instance to the AdvancedOption parameter of the New-VM or New-HardDisk cmdlets.

The SDRS functionality is experimental.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AdvancedOption[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Persistence</maml:name>
				<maml:description>
					<maml:para>Specifies the disk persistence mode. The valid values are Persistent, NonPersistent, IndependentPersistent, IndependentNonPersistent, and Undoable. This parameter is supported only when the disk type is set to “rawVirtual” or “flat”. The &#39;NonPersistent&#39; and &#39;Undoable&#39; values are deprecated and scheduled for removal. Their usage is not recommended because they do not work with snapshots and are not supported on ESX 3.5 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Controller</maml:name>
				<maml:description>
					<maml:para>Specifies a SCSI controller to which you want to attach the new hard disk.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScsiController</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>DiskType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of file backing you want to use. The valid values are rawVirtual, rawPhysical, flat, and unknown. If the hard disk is attached to no virtual machine, the value of the DiskType parameter might be Unknown, which means that no type is specified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DiskType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CapacityKB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use CapacityGB instead.
Specifies the capacity of the new virtual disk in kilobytes (KB). You need to specify this parameter when you create hard disks of type Flat.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CapacityGB</maml:name>
				<maml:description>
					<maml:para>Specifies the capacity of the new virtual disk in gigabytes (GB). You need to specify this parameter when you create hard disks of type Flat.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Split</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated and scheduled for removal. Use the StorageFormat instead. 
Specifies the type of the virtual disk file - split or monolithic. If the value is $true, the virtual disk is stored in multiple files, each 2GB. If the value is $false, the virtual disk is stored in a single file. This parameter is supported only if the DiskType parameter is set to “flat”.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ThinProvisioned</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated and scheduled for removal. Use the StorageFormat instead. 
Indicates to the underlying file system, that the virtual disk backing file should be allocated lazily (using thin provisioning). This parameter is only used for file systems that support configuring the provisioning policy on a per file basis, such as VMFS3. This parameter is supported only if the DiskType parameter is set to “flat”.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the storage format of the new hard disk. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DeviceName</maml:name>
				<maml:description>
					<maml:para>Specifies the host-specific device the LUN is being accessed through. If the target LUN is not available on the host then it is empty. For example, this could happen if it has been masked out accidentally. Only supported when DiskType is set to “rawVirtual” or “rawPhysical”. The device name is visible in the vSphere Client through the new raw hard disk wizard or can be retrieved using PowerCLI views.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore where you want to place the new hard disk. If a DatastoreCluster object is passed to the Datastore parameter, the hard disk is added to the DatastoreCluster in an automated SDRS mode. You can define an anti-affinity SDRS rule for the disk by specifying an SdrsVMDiskAntiAffinityRule object to the AdvancedOption parameter and this will override any existing SdrsVMDiskAntiAffinityRule for the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >StorageResource</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines to which you want to add the new disk.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-HardDisk</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Persistence</maml:name>
				<maml:description>
					<maml:para>Specifies the disk persistence mode. The valid values are Persistent, NonPersistent, IndependentPersistent, IndependentNonPersistent, and Undoable. This parameter is supported only when the disk type is set to “rawVirtual” or “flat”. The &#39;NonPersistent&#39; and &#39;Undoable&#39; values are deprecated and scheduled for removal. Their usage is not recommended because they do not work with snapshots and are not supported on ESX 3.5 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Controller</maml:name>
				<maml:description>
					<maml:para>Specifies a SCSI controller to which you want to attach the new hard disk.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScsiController</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskPath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the hard disk.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines to which you want to add the new disk.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdvancedOption</maml:name>
			<maml:description>
				<maml:para>Specifies advanced options for creating hard disks. Accepts only SdrsVMDiskAntiAffinityRule objects. You can define an anti-affinity SDRS rule for the disk by specifying a SdrsVMDiskAntiAffinityRule object to the AdvancedOption parameter and this will override any existing SdrsVMDiskAntiAffinityRule for the virtual machine.

The SdrsVMDiskAntiAffinityRule defines a Storage DRS intra-VM anti-affinity rule (vm disk anti-affinity rule). It is only applicable when creating a virtual machine or hard disk on a datastore cluster. An instance of the object is created by invoking its constructor. There are two constructors - &quot;public SdrsVMDiskAntiAffinityRule(param string[] diskIdentifier)&quot; and &quot;public SdrsVMDiskAntiAffinityRule(param HardDisk[] disk)&quot;. For the first constructor, &quot;diskIdentifier&quot; can be either the disk key or the index of the disk in the disk array. The specified disks (and the disk to which the rule is applied) are placed in an anti-affinity rule on a DatastoreCluster. Only one such rule is supported per a virtual machine. You can pass the instance to the AdvancedOption parameter of the New-VM or New-HardDisk cmdlets.

The SDRS functionality is experimental.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">AdvancedOption[]</command:parameterValue>
			<dev:type>
				<maml:name>AdvancedOption[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Persistence</maml:name>
			<maml:description>
				<maml:para>Specifies the disk persistence mode. The valid values are Persistent, NonPersistent, IndependentPersistent, IndependentNonPersistent, and Undoable. This parameter is supported only when the disk type is set to “rawVirtual” or “flat”. The &#39;NonPersistent&#39; and &#39;Undoable&#39; values are deprecated and scheduled for removal. Their usage is not recommended because they do not work with snapshots and are not supported on ESX 3.5 and later.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Controller</maml:name>
			<maml:description>
				<maml:para>Specifies a SCSI controller to which you want to attach the new hard disk.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ScsiController</command:parameterValue>
			<dev:type>
				<maml:name>ScsiController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>DiskType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of file backing you want to use. The valid values are rawVirtual, rawPhysical, flat, and unknown. If the hard disk is attached to no virtual machine, the value of the DiskType parameter might be Unknown, which means that no type is specified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DiskType</command:parameterValue>
			<dev:type>
				<maml:name>DiskType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CapacityKB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use CapacityGB instead.
Specifies the capacity of the new virtual disk in kilobytes (KB). You need to specify this parameter when you create hard disks of type Flat.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CapacityGB</maml:name>
			<maml:description>
				<maml:para>Specifies the capacity of the new virtual disk in gigabytes (GB). You need to specify this parameter when you create hard disks of type Flat.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Split</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated and scheduled for removal. Use the StorageFormat instead. 
Specifies the type of the virtual disk file - split or monolithic. If the value is $true, the virtual disk is stored in multiple files, each 2GB. If the value is $false, the virtual disk is stored in a single file. This parameter is supported only if the DiskType parameter is set to “flat”.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ThinProvisioned</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated and scheduled for removal. Use the StorageFormat instead. 
Indicates to the underlying file system, that the virtual disk backing file should be allocated lazily (using thin provisioning). This parameter is only used for file systems that support configuring the provisioning policy on a per file basis, such as VMFS3. This parameter is supported only if the DiskType parameter is set to “flat”.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StorageFormat</maml:name>
			<maml:description>
				<maml:para>Specifies the storage format of the new hard disk. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualDiskStorageFormat</command:parameterValue>
			<dev:type>
				<maml:name>VirtualDiskStorageFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeviceName</maml:name>
			<maml:description>
				<maml:para>Specifies the host-specific device the LUN is being accessed through. If the target LUN is not available on the host then it is empty. For example, this could happen if it has been masked out accidentally. Only supported when DiskType is set to “rawVirtual” or “rawPhysical”. The device name is visible in the vSphere Client through the new raw hard disk wizard or can be retrieved using PowerCLI views.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore where you want to place the new hard disk. If a DatastoreCluster object is passed to the Datastore parameter, the hard disk is added to the DatastoreCluster in an automated SDRS mode. You can define an anti-affinity SDRS rule for the disk by specifying an SdrsVMDiskAntiAffinityRule object to the AdvancedOption parameter and this will override any existing SdrsVMDiskAntiAffinityRule for the virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">StorageResource</command:parameterValue>
			<dev:type>
				<maml:name>StorageResource</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines to which you want to add the new disk.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskPath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the hard disk.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The one or more newly created HardDisk objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only on ESX  hosts.
New-HardDisk cannot create undoable disks on powered-on virtual machines.
On ESX versions later than 3.0, non-persistent and undoable disks are not supported.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Get-VM VM

$vm | New-HardDisk -CapacityGB 100 -Persistence persistent</dev:code>
  			<dev:remarks>
				<maml:para>Adds to the VM virtual machine a new hard disk in a persistent mode with capacity of 100 GB.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$deviceName = ($vmhost | Get-ScsiLun | Where {$_.CanonicalName -match &quot;naa&quot;})[0].ConsoleDeviceName

New-HardDisk -VM $vm -DiskType RawPhysical -DeviceName $deviceName</dev:code>
  			<dev:remarks>
				<maml:para>Obtains a valid device name for Raw Disk Mapping.  Then the command creates a RDM hard disk for the specified virtual machine, with the obtained device name.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-HardDisk -VM $vm -CapacityGB 100 -Persistence IndependentNonPersistent</dev:code>
  			<dev:remarks>
				<maml:para>Creates a non-persistent hard disk with the specified capacity.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-HardDisk -VM $vm -DiskPath &quot;[storage1] OtherVM/OtherVM.vmdk&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Attaches an available disk from a *.vmdk file.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Get-VM WebServerVM

$disk = $vm | Get-HardDisk

$antiAffinityRule = New-Object &#39;VMware.VimAutomation.ViCore.Types.V1.DatastoreManagement.SdrsVMDiskAntiAffinityRule&#39; $disk

New-HardDisk -VM $vm -AdvancedOption $antiAffinityRule -CapacityGB 40 -Datastore DatastoreCluster1</dev:code>
  			<dev:remarks>
				<maml:para>First retrieves the existing disk which will be part of the VMDK anti affinity rule. Then, creates an object describing the rule and creates the new hard disk.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-HardDisk.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Copy-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-IScsiHbaTarget</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new iSCSI HBA target.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>IScsiHbaTarget</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new iSCSI HBA target. The cmdlet also enables and configures the CHAP (Challenge Handshake Authentication Protocol) authentication settings of the new target.

The Address parameter supports both IPv4 and v6 and also supports the string representations of these types. e.g.  “&lt;address&gt;:&lt;port&gt;”.
The Port parameter is used only when the value of the Address parameter does not contain the port. The default port number is 3260.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-IScsiHbaTarget</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>IScsiHba</maml:name>
				<maml:description>
					<maml:para>Specifies the iSCSI HBA for which you want to create the new target.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >IScsiHba[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Address</maml:name>
				<maml:description>
					<maml:para>Specifies the address of the new iSCSI HBA target.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>Specifies the TCP port of the target.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the target. The valid values are Static and Send.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >IScsiHbaTargetType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>IScsiName</maml:name>
				<maml:description>
					<maml:para>Specifies the iSCSI name of the target. It can be specified only for Static targets.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChapType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the CHAP (Challenge Handshake Authentication Protocol) you want the new target to use. The valid values are Prohibited, Discouraged, Preferred, and Required.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ChapType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChapName</maml:name>
				<maml:description>
					<maml:para>Specifies a CHAP authentication name for the new target.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChapPassword</maml:name>
				<maml:description>
					<maml:para>Specifies a CHAP authentication password for the new target.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MutualChapEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that Mutual CHAP is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MutualChapName</maml:name>
				<maml:description>
					<maml:para>Specifies a Mutual CHAP authentication name for the new target.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MutualChapPassword</maml:name>
				<maml:description>
					<maml:para>Specifies a Mutual CHAP authentication password for the new target.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritChap</maml:name>
				<maml:description>
					<maml:para>Indicates that the CHAP setting is inherited from the iSCSI HBA.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritMutualChap</maml:name>
				<maml:description>
					<maml:para>Indicates that the Mutual CHAP setting is inherited from the iSCSI HBA.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>IScsiHba</maml:name>
			<maml:description>
				<maml:para>Specifies the iSCSI HBA for which you want to create the new target.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IScsiHba[]</command:parameterValue>
			<dev:type>
				<maml:name>IScsiHba[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Address</maml:name>
			<maml:description>
				<maml:para>Specifies the address of the new iSCSI HBA target.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Port</maml:name>
			<maml:description>
				<maml:para>Specifies the TCP port of the target.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>3260</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the target. The valid values are Static and Send.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IScsiHbaTargetType</command:parameterValue>
			<dev:type>
				<maml:name>IScsiHbaTargetType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Send</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>IScsiName</maml:name>
			<maml:description>
				<maml:para>Specifies the iSCSI name of the target. It can be specified only for Static targets.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChapType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the CHAP (Challenge Handshake Authentication Protocol) you want the new target to use. The valid values are Prohibited, Discouraged, Preferred, and Required.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ChapType</command:parameterValue>
			<dev:type>
				<maml:name>ChapType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChapName</maml:name>
			<maml:description>
				<maml:para>Specifies a CHAP authentication name for the new target.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>&lt;initiator name&gt;</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChapPassword</maml:name>
			<maml:description>
				<maml:para>Specifies a CHAP authentication password for the new target.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MutualChapEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that Mutual CHAP is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MutualChapName</maml:name>
			<maml:description>
				<maml:para>Specifies a Mutual CHAP authentication name for the new target.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>&lt;initiator name&gt;</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MutualChapPassword</maml:name>
			<maml:description>
				<maml:para>Specifies a Mutual CHAP authentication password for the new target.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritChap</maml:name>
			<maml:description>
				<maml:para>Indicates that the CHAP setting is inherited from the iSCSI HBA.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritMutualChap</maml:name>
			<maml:description>
				<maml:para>Indicates that the Mutual CHAP setting is inherited from the iSCSI HBA.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created IScsiHbaTarget object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>CHAP configuration is supported only on vCenter Server/ESX 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$hba = Get-VMHost | Get-VMHostHba -Type iScsi

New-IScsiHbaTarget -IScsiHba $hba -Address 10.23.84.73</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new target with IP address 10.23.84.73 on the specified iSCSI HBA device.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost | Get-VMHostHba -Type iScsi | New-IScsiHbaTarget -Address &quot;10.23.84.73&quot; -ChapType Preferred -ChapName user -ChapPassword pass</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new target on the provided iSCSI HBA device and configures the CHAP settings of the target.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-IScsiHbaTarget.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostHba</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostHba</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-NetworkAdapter</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new virtual network adapter.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>NetworkAdapter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new virtual network adapter for each of the provided virtual machines and sets the optional properties if provided.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-NetworkAdapter</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MacAddress</maml:name>
				<maml:description>
					<maml:para>Specifies an optional MAC address for the new virtual network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NetworkName</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the network to which you want to add the new virtual network adapter. Specifying a distributed port group name is obsolete. Use the Portgroup parameter instead.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartConnected</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual network adapter starts connected when the virtual machine associated with it powers on.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WakeOnLan</maml:name>
				<maml:description>
					<maml:para>Indicates that wake-on-LAN is enabled on the newly created virtual network adapter.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the new network adapter. The valid types are e1000, Flexible, Vmxnet, EnhancedVmxnet, and Vmxnet3, and Unknown. If no value is given to the parameter, the new network adapter is of the type recommended by VMware for the given guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualNetworkAdapterType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines to which  you want to attach the new virtual network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-NetworkAdapter</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MacAddress</maml:name>
				<maml:description>
					<maml:para>Specifies an optional MAC address for the new virtual network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartConnected</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual network adapter starts connected when the virtual machine associated with it powers on.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WakeOnLan</maml:name>
				<maml:description>
					<maml:para>Indicates that wake-on-LAN is enabled on the newly created virtual network adapter.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the new network adapter. The valid types are e1000, Flexible, Vmxnet, EnhancedVmxnet, and Vmxnet3, and Unknown. If no value is given to the parameter, the new network adapter is of the type recommended by VMware for the given guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualNetworkAdapterType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PortId</maml:name>
				<maml:description>
					<maml:para>Specifies the port of the specified distributed switch to which you want to connect the network adapter. Use this parameter only if the DistributedSwitch parameter is specified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>DistributedSwitch</maml:name>
				<maml:description>
					<maml:para>Specifies a virtual switch to which you want to connect the network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DistributedSwitch</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines to which  you want to attach the new virtual network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-NetworkAdapter</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MacAddress</maml:name>
				<maml:description>
					<maml:para>Specifies an optional MAC address for the new virtual network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartConnected</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual network adapter starts connected when the virtual machine associated with it powers on.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WakeOnLan</maml:name>
				<maml:description>
					<maml:para>Indicates that wake-on-LAN is enabled on the newly created virtual network adapter.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the new network adapter. The valid types are e1000, Flexible, Vmxnet, EnhancedVmxnet, and Vmxnet3, and Unknown. If no value is given to the parameter, the new network adapter is of the type recommended by VMware for the given guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualNetworkAdapterType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Portgroup</maml:name>
				<maml:description>
					<maml:para>Specifies a standard or a distributed port group to which you want to connect the new network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualPortGroupBase</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines to which  you want to attach the new virtual network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MacAddress</maml:name>
			<maml:description>
				<maml:para>Specifies an optional MAC address for the new virtual network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NetworkName</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the network to which you want to add the new virtual network adapter. Specifying a distributed port group name is obsolete. Use the Portgroup parameter instead.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StartConnected</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual network adapter starts connected when the virtual machine associated with it powers on.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WakeOnLan</maml:name>
			<maml:description>
				<maml:para>Indicates that wake-on-LAN is enabled on the newly created virtual network adapter.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the new network adapter. The valid types are e1000, Flexible, Vmxnet, EnhancedVmxnet, and Vmxnet3, and Unknown. If no value is given to the parameter, the new network adapter is of the type recommended by VMware for the given guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualNetworkAdapterType</command:parameterValue>
			<dev:type>
				<maml:name>VirtualNetworkAdapterType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines to which  you want to attach the new virtual network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PortId</maml:name>
			<maml:description>
				<maml:para>Specifies the port of the specified distributed switch to which you want to connect the network adapter. Use this parameter only if the DistributedSwitch parameter is specified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>DistributedSwitch</maml:name>
			<maml:description>
				<maml:para>Specifies a virtual switch to which you want to connect the network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DistributedSwitch</command:parameterValue>
			<dev:type>
				<maml:name>DistributedSwitch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Portgroup</maml:name>
			<maml:description>
				<maml:para>Specifies a standard or a distributed port group to which you want to connect the new network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualPortGroupBase</command:parameterValue>
			<dev:type>
				<maml:name>VirtualPortGroupBase</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The one or more newly created NetworkAdapter objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>There are two special cases concerning the behavior of New-NetworkAdapter:

- If you are directly connected to a standalone ESX host (that is not managed by a vCenter Server), the MAC address of the newly created network adapter is generated after the associated virtual machine is powered on for a first time.

- If you are directly connected to an ESX host that is managed by a vCenter Server, the MAC address of the newly created network adapter is generated with a delay of several seconds.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM | New-NetworkAdapter  -NetworkName &quot;VM Network&quot; -MacAddress &#39;00:50:56:a1:00:00&#39; -WakeOnLan -StartConnected -Type EnhancedVmxnet</dev:code>
  			<dev:remarks>
				<maml:para>Create a virtual network adapter with the specified parameters.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVm = Get-VM -Name MyVM
$MyVDPortgroup = Get-VDPortgroup -Name MyVDPortGroup
New-NetworkAdapter -VM $myVM -Portgroup $MyVDPortgroup</dev:code>
  			<dev:remarks>
				<maml:para>Adds a new network adapter to the specified virtual machine and connects it to the specified distributed port group.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVM = Get-VM -Name MyVM
$MyVDSwitch = Get-VDSwitch -Name MyVDSwitch
New-NetworkAdapter -VM $myVM -DistributedSwitch $MyVDSwitch -PortId 100</dev:code>
  			<dev:remarks>
				<maml:para>Adds a new network adapter to the specified virtual machine and connects it to the specified port on the specified vSphere distributed switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-NetworkAdapter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-OSCustomizationNicMapping</command:name>
		<maml:description>
			<maml:para>This cmdlet adds NIC settings mappings to the specified OS customization specifications.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>OSCustomizationNicMapping</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet adds  NIC settings mappings to the specified OS customization specifications. If the given specification is server-side, it is updated on the server. If it is client-side, the reference that is kept in-memory is updated but the variable that is passed to the cmdlet is not modified.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-OSCustomizationNicMapping</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies the OS customization specification to which you want to add the NIC setting mapping.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OSCustomizationSpec[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IpMode</maml:name>
				<maml:description>
					<maml:para>Specifies the IP configuration mode. The valid values are UseDhcp, PromptUser, UseVCApplication, and UseStaticIP.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationIPMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VCApplicationArgument</maml:name>
				<maml:description>
					<maml:para>Specifies an optional argument you want to pass to the vCenter Server to obtain an IP address.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>IpAddress</maml:name>
				<maml:description>
					<maml:para>Specifies an IP address. Using this parameter automatically sets the IpMode parameter to UseStaticIp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>SubnetMask</maml:name>
				<maml:description>
					<maml:para>Specifies a subnet mask.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>DefaultGateway</maml:name>
				<maml:description>
					<maml:para>Specifies a default gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AlternateGateway</maml:name>
				<maml:description>
					<maml:para>Specifies an alternate gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>Dns</maml:name>
				<maml:description>
					<maml:para>Specifies a DNS address. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Wins</maml:name>
				<maml:description>
					<maml:para>Specifies WINS servers. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-OSCustomizationNicMapping</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies the OS customization specification to which you want to add the NIC setting mapping.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OSCustomizationSpec[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NetworkAdapterMac</maml:name>
				<maml:description>
					<maml:para>Specifies the MAC addresses of the network adapters to which you want to map the new OS customization specifications.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IpMode</maml:name>
				<maml:description>
					<maml:para>Specifies the IP configuration mode. The valid values are UseDhcp, PromptUser, UseVCApplication, and UseStaticIP.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationIPMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VCApplicationArgument</maml:name>
				<maml:description>
					<maml:para>Specifies an optional argument you want to pass to the vCenter Server to obtain an IP address.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>IpAddress</maml:name>
				<maml:description>
					<maml:para>Specifies an IP address. Using this parameter automatically sets the IpMode parameter to UseStaticIp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>SubnetMask</maml:name>
				<maml:description>
					<maml:para>Specifies a subnet mask.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>DefaultGateway</maml:name>
				<maml:description>
					<maml:para>Specifies a default gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AlternateGateway</maml:name>
				<maml:description>
					<maml:para>Specifies an alternate gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>Dns</maml:name>
				<maml:description>
					<maml:para>Specifies a DNS address. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Wins</maml:name>
				<maml:description>
					<maml:para>Specifies WINS servers. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-OSCustomizationNicMapping</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies the OS customization specification to which you want to add the NIC setting mapping.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OSCustomizationSpec[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Position</maml:name>
				<maml:description>
					<maml:para>Specifies the position of the NIC to which you want to map the OS customization specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Int32[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IpMode</maml:name>
				<maml:description>
					<maml:para>Specifies the IP configuration mode. The valid values are UseDhcp, PromptUser, UseVCApplication, and UseStaticIP.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationIPMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VCApplicationArgument</maml:name>
				<maml:description>
					<maml:para>Specifies an optional argument you want to pass to the vCenter Server to obtain an IP address.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>IpAddress</maml:name>
				<maml:description>
					<maml:para>Specifies an IP address. Using this parameter automatically sets the IpMode parameter to UseStaticIp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>SubnetMask</maml:name>
				<maml:description>
					<maml:para>Specifies a subnet mask.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>DefaultGateway</maml:name>
				<maml:description>
					<maml:para>Specifies a default gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AlternateGateway</maml:name>
				<maml:description>
					<maml:para>Specifies an alternate gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>Dns</maml:name>
				<maml:description>
					<maml:para>Specifies a DNS address. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Wins</maml:name>
				<maml:description>
					<maml:para>Specifies WINS servers. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>OSCustomizationSpec</maml:name>
			<maml:description>
				<maml:para>Specifies the OS customization specification to which you want to add the NIC setting mapping.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OSCustomizationSpec[]</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationSpec[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IpMode</maml:name>
			<maml:description>
				<maml:para>Specifies the IP configuration mode. The valid values are UseDhcp, PromptUser, UseVCApplication, and UseStaticIP.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">OSCustomizationIPMode</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationIPMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>UseDhcp</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VCApplicationArgument</maml:name>
			<maml:description>
				<maml:para>Specifies an optional argument you want to pass to the vCenter Server to obtain an IP address.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>IpAddress</maml:name>
			<maml:description>
				<maml:para>Specifies an IP address. Using this parameter automatically sets the IpMode parameter to UseStaticIp.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>SubnetMask</maml:name>
			<maml:description>
				<maml:para>Specifies a subnet mask.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>DefaultGateway</maml:name>
			<maml:description>
				<maml:para>Specifies a default gateway.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AlternateGateway</maml:name>
			<maml:description>
				<maml:para>Specifies an alternate gateway.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="4">
			<maml:name>Dns</maml:name>
			<maml:description>
				<maml:para>Specifies a DNS address. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Wins</maml:name>
			<maml:description>
				<maml:para>Specifies WINS servers. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NetworkAdapterMac</maml:name>
			<maml:description>
				<maml:para>Specifies the MAC addresses of the network adapters to which you want to map the new OS customization specifications.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Position</maml:name>
			<maml:description>
				<maml:para>Specifies the position of the NIC to which you want to map the OS customization specification.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			<dev:type>
				<maml:name>Int32[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>last</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The one or more newly created OSCustomizationNicMapping objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-OSCustomizationNicMapping -OSCustomizationSpec $spec -IpMode UseStaticIP -IPAddress 10.0.0.1 -SubnetMask 255.255.255.0 -DefaultGateway 10.0.0.253 -DnsServer 10.0.0.253</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new NIC mapping for the OS customization spec stored in $spec.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-OSCustomizationNicMapping.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-OSCustomizationNicMapping</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OSCustomizationNicMapping</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-OSCustomizationSpec</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new OS customization specification.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>OSCustomizationSpec</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new OS customization specification or clones an existing one. If a name is provided, creates and adds the specified customization specification to the server. Otherwise, creates and returns the requested specification object. If the Name parameter is not specified, the OSCustomizationSpec object is not persisted on the server. Either the Domain or the Workgroup parameters should be provided if a Windows specification is created. If a Linux specification is created, the Domain parameter is mandatory.  New-OSCustomizationSpec automatically creates a default NIC mapping.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-OSCustomizationSpec</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>OSType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the operating system. The valid values are Linux and Windows.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the OS customization specification. The valid values are Persistent and NonPersistent.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpecType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsServer</maml:name>
				<maml:description>
					<maml:para>Specifies the DNS server settings. This parameter applies only to Linux operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsSuffix</maml:name>
				<maml:description>
					<maml:para>Specifies the DNS suffix settings. This parameter applies only to Linux operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Domain</maml:name>
				<maml:description>
					<maml:para>Specifies a domain name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NamingScheme</maml:name>
				<maml:description>
					<maml:para>Specifies the naming scheme for the virtual machine. The following values are valid:

Custom - Specifies that vCenter Server will launch an external application to generate the (hostname/IP). The command line for this application must be specified in the server configuration file (vpxd.cfg) in the vpxd/name-ip-generator key.


Fixed - Specifies that the name is fixed.

Prefix - Specifies that a unique name should be generated by concatenating the base string with a number. Virtual machine names are unique across the set of hosts and virtual machines known to the vCenter Server system. vCenter Server tracks the network names of virtual machines as well as hosts. VMware Tools runs in a guest operating system and reports information to vCenter Server, including the network name of the guest.

Vm - Specifies that vCenter Server should generate a virtual machine name from a base prefix comprising the virtual machine entity name. A number is appended, if necessary, to make it unique. Virtual machine names are unique across the set of hosts and virtual machines known to the vCenter Server system. VMware Tools reports the names of existing virtual machines.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NamingPrefix</maml:name>
				<maml:description>
					<maml:para>Depends on the customization naming scheme - Custom, NamingPrefix, or Prefix. If the &quot;Custom&quot; naming scheme is used, NamingPrefix is an optional argument that is passed to the utility for this IP address. The meaning of this field is user-defined in the script. If the &quot;Fixed&quot; naming scheme is used, NamingPrefix should indicate the name of the virtual machine. If the &quot;Prefix&quot; naming scheme is selected, NamingPrefix indicates the prefix to which a unique number is appended.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Provides a description for the new specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-OSCustomizationSpec</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies an OS customization specification that you want to clone.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpec</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the OS customization specification. The valid values are Persistent and NonPersistent.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpecType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-OSCustomizationSpec</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>FullName</maml:name>
				<maml:description>
					<maml:para>Specifies the administrator&#39;s full name. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>OrgName</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the organization to which the administrator belongs.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>OSType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the operating system. The valid values are Linux and Windows.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChangeSid</maml:name>
				<maml:description>
					<maml:para>Indicates that the customization should modify the system security identifier (SID). This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DeleteAccounts</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to delete all user accounts. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the OS customization specification. The valid values are Persistent and NonPersistent.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpecType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsServer</maml:name>
				<maml:description>
					<maml:para>Specifies the DNS server settings. This parameter applies only to Linux operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsSuffix</maml:name>
				<maml:description>
					<maml:para>Specifies the DNS suffix settings. This parameter applies only to Linux operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuiRunOnce</maml:name>
				<maml:description>
					<maml:para>Specifies a list of commands. These commands run when a user logs in for the first time after the customization completes. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AdminPassword</maml:name>
				<maml:description>
					<maml:para>Specifies a new OS administrator&#39;s password. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>TimeZone</maml:name>
				<maml:description>
					<maml:para>Specifies the name or ID of the time zone for a Windows guest OS only. Using wildcards is supported. The following time zones are available:


000 Int&#39;l Dateline
001 Samoa
002 Hawaii
003 Alaskan
004 Pacific
010 Mountain (U.S. and Canada)
015 U.S. Mountain: Arizona
020 Central (U.S. and Canada)
025 Canada Central
030 Mexico
033 Central America
035 Eastern (U.S. and Canada)
040 U.S. Eastern: Indiana (East)
045 S.A. Pacific
050 Atlantic (Canada)
055 S.A. Western
056 Pacific S.A.
060 Newfoundland
065 E. South America
070 S.A. Eastern
073 Greenland
075 Mid-Atlantic
080 Azores
083 Cape Verde Islands
085 GMT (Greenwich Mean Time)
090 GMT Greenwich
095 Central Europe
100 Central European
105 Romance
110 W. Europe
113 W. Central Africa
115 E. Europe
120 Egypt
125 EET (Helsinki, Riga, Tallinn)
130 EET (Athens, Istanbul, Minsk)
135 Israel: Jerusalem
140 S. Africa: Harare, Pretoria
145 Russian
150 Arab
155 E. Africa
160 Iran
165 Arabian
170 Caucasus Pacific (U.S. and Canada)
175 Afghanistan
180 Russia Yekaterinburg
185 W. Asia
190 India
193 Nepal
195 Central Asia
200 Sri Lanka
201 N. Central Asia
203 Myanmar: Rangoon
205 S.E. Asia
207 N. Asia
210 China
215 Singapore
220 Taipei
225 W. Australia
227 N. Asia East
230 Korea: Seoul
235 Tokyo
240 Sakha Yakutsk
245 A.U.S. Central: Darwin
250 Central Australia
255 A.U.S. Eastern
260 E. Australia
265 Tasmania
270 Vladivostok
275 W. Pacific
280 Central Pacific
285 Fiji
290 New Zealand
300 Tonga</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AutoLogonCount</maml:name>
				<maml:description>
					<maml:para>Specifies the number of times the virtual machine automatically logs in as administrator without prompting for user credentials. The valid values are in the range between 0 and Int32.MaxValue. Specifying 0 disables auto log-on. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Domain</maml:name>
				<maml:description>
					<maml:para>Specifies a domain name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Workgroup</maml:name>
				<maml:description>
					<maml:para>Specifies a workgroup. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DomainCredentials</maml:name>
				<maml:description>
					<maml:para>Specifies the credentials you want to use for domain authentication. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DomainUsername</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for domain authentication. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DomainPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for domain authentication. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ProductKey</maml:name>
				<maml:description>
					<maml:para>Specifies the MS product key. If the guest OS version is earlier than Vista, this parameter is required in order to make the customization unattended. For Vista or later, the OS customization is unattended no matter if the ProductKey parameter is set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NamingScheme</maml:name>
				<maml:description>
					<maml:para>Specifies the naming scheme for the virtual machine. The following values are valid:

Custom - Specifies that vCenter Server will launch an external application to generate the (hostname/IP). The command line for this application must be specified in the server configuration file (vpxd.cfg) in the vpxd/name-ip-generator key.


Fixed - Specifies that the name is fixed.

Prefix - Specifies that a unique name should be generated by concatenating the base string with a number. Virtual machine names are unique across the set of hosts and virtual machines known to the vCenter Server system. vCenter Server tracks the network names of virtual machines as well as hosts. VMware Tools runs in a guest operating system and reports information to vCenter Server, including the network name of the guest.

Vm - Specifies that vCenter Server should generate a virtual machine name from a base prefix comprising the virtual machine entity name. A number is appended, if necessary, to make it unique. Virtual machine names are unique across the set of hosts and virtual machines known to the vCenter Server system. VMware Tools reports the names of existing virtual machines.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NamingPrefix</maml:name>
				<maml:description>
					<maml:para>Depends on the customization naming scheme - Custom, NamingPrefix, or Prefix. If the &quot;Custom&quot; naming scheme is used, NamingPrefix is an optional argument that is passed to the utility for this IP address. The meaning of this field is user-defined in the script. If the &quot;Fixed&quot; naming scheme is used, NamingPrefix should indicate the name of the virtual machine. If the &quot;Prefix&quot; naming scheme is selected, NamingPrefix indicates the prefix to which a unique number is appended.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Provides a description for the new specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>LicenseMode</maml:name>
				<maml:description>
					<maml:para>Specifies the license mode of the Windows 2000/2003 guest operating system. The valid values are Perseat, Perserver, and Notspecified. If Perserver is set, use the LicenseMaxConnection parameter to define the maximum number of connections. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >LicenseMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>LicenseMaxConnections</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum connections for server license mode. Use this parameter only if the LicenseMode parameter is set to Perserver. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OSType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the operating system. The valid values are Linux and Windows.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Windows</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new specification.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the OS customization specification. The valid values are Persistent and NonPersistent.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">OSCustomizationSpecType</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationSpecType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DnsServer</maml:name>
			<maml:description>
				<maml:para>Specifies the DNS server settings. This parameter applies only to Linux operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DnsSuffix</maml:name>
			<maml:description>
				<maml:para>Specifies the DNS suffix settings. This parameter applies only to Linux operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Domain</maml:name>
			<maml:description>
				<maml:para>Specifies a domain name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>empty string</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NamingScheme</maml:name>
			<maml:description>
				<maml:para>Specifies the naming scheme for the virtual machine. The following values are valid:

Custom - Specifies that vCenter Server will launch an external application to generate the (hostname/IP). The command line for this application must be specified in the server configuration file (vpxd.cfg) in the vpxd/name-ip-generator key.


Fixed - Specifies that the name is fixed.

Prefix - Specifies that a unique name should be generated by concatenating the base string with a number. Virtual machine names are unique across the set of hosts and virtual machines known to the vCenter Server system. vCenter Server tracks the network names of virtual machines as well as hosts. VMware Tools runs in a guest operating system and reports information to vCenter Server, including the network name of the guest.

Vm - Specifies that vCenter Server should generate a virtual machine name from a base prefix comprising the virtual machine entity name. A number is appended, if necessary, to make it unique. Virtual machine names are unique across the set of hosts and virtual machines known to the vCenter Server system. VMware Tools reports the names of existing virtual machines.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Vm</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NamingPrefix</maml:name>
			<maml:description>
				<maml:para>Depends on the customization naming scheme - Custom, NamingPrefix, or Prefix. If the &quot;Custom&quot; naming scheme is used, NamingPrefix is an optional argument that is passed to the utility for this IP address. The meaning of this field is user-defined in the script. If the &quot;Fixed&quot; naming scheme is used, NamingPrefix should indicate the name of the virtual machine. If the &quot;Prefix&quot; naming scheme is selected, NamingPrefix indicates the prefix to which a unique number is appended.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>empty string</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Provides a description for the new specification.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>empty string</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>OSCustomizationSpec</maml:name>
			<maml:description>
				<maml:para>Specifies an OS customization specification that you want to clone.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">OSCustomizationSpec</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FullName</maml:name>
			<maml:description>
				<maml:para>Specifies the administrator&#39;s full name. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OrgName</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the organization to which the administrator belongs.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChangeSid</maml:name>
			<maml:description>
				<maml:para>Indicates that the customization should modify the system security identifier (SID). This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeleteAccounts</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to delete all user accounts. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuiRunOnce</maml:name>
			<maml:description>
				<maml:para>Specifies a list of commands. These commands run when a user logs in for the first time after the customization completes. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminPassword</maml:name>
			<maml:description>
				<maml:para>Specifies a new OS administrator&#39;s password. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>TimeZone</maml:name>
			<maml:description>
				<maml:para>Specifies the name or ID of the time zone for a Windows guest OS only. Using wildcards is supported. The following time zones are available:


000 Int&#39;l Dateline
001 Samoa
002 Hawaii
003 Alaskan
004 Pacific
010 Mountain (U.S. and Canada)
015 U.S. Mountain: Arizona
020 Central (U.S. and Canada)
025 Canada Central
030 Mexico
033 Central America
035 Eastern (U.S. and Canada)
040 U.S. Eastern: Indiana (East)
045 S.A. Pacific
050 Atlantic (Canada)
055 S.A. Western
056 Pacific S.A.
060 Newfoundland
065 E. South America
070 S.A. Eastern
073 Greenland
075 Mid-Atlantic
080 Azores
083 Cape Verde Islands
085 GMT (Greenwich Mean Time)
090 GMT Greenwich
095 Central Europe
100 Central European
105 Romance
110 W. Europe
113 W. Central Africa
115 E. Europe
120 Egypt
125 EET (Helsinki, Riga, Tallinn)
130 EET (Athens, Istanbul, Minsk)
135 Israel: Jerusalem
140 S. Africa: Harare, Pretoria
145 Russian
150 Arab
155 E. Africa
160 Iran
165 Arabian
170 Caucasus Pacific (U.S. and Canada)
175 Afghanistan
180 Russia Yekaterinburg
185 W. Asia
190 India
193 Nepal
195 Central Asia
200 Sri Lanka
201 N. Central Asia
203 Myanmar: Rangoon
205 S.E. Asia
207 N. Asia
210 China
215 Singapore
220 Taipei
225 W. Australia
227 N. Asia East
230 Korea: Seoul
235 Tokyo
240 Sakha Yakutsk
245 A.U.S. Central: Darwin
250 Central Australia
255 A.U.S. Eastern
260 E. Australia
265 Tasmania
270 Vladivostok
275 W. Pacific
280 Central Pacific
285 Fiji
290 New Zealand
300 Tonga</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AutoLogonCount</maml:name>
			<maml:description>
				<maml:para>Specifies the number of times the virtual machine automatically logs in as administrator without prompting for user credentials. The valid values are in the range between 0 and Int32.MaxValue. Specifying 0 disables auto log-on. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Workgroup</maml:name>
			<maml:description>
				<maml:para>Specifies a workgroup. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>empty string</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainCredentials</maml:name>
			<maml:description>
				<maml:para>Specifies the credentials you want to use for domain authentication. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainUsername</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for domain authentication. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for domain authentication. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProductKey</maml:name>
			<maml:description>
				<maml:para>Specifies the MS product key. If the guest OS version is earlier than Vista, this parameter is required in order to make the customization unattended. For Vista or later, the OS customization is unattended no matter if the ProductKey parameter is set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>empty string</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LicenseMode</maml:name>
			<maml:description>
				<maml:para>Specifies the license mode of the Windows 2000/2003 guest operating system. The valid values are Perseat, Perserver, and Notspecified. If Perserver is set, use the LicenseMaxConnection parameter to define the maximum number of connections. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">LicenseMode</command:parameterValue>
			<dev:type>
				<maml:name>LicenseMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Notspecified</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LicenseMaxConnections</maml:name>
			<maml:description>
				<maml:para>Specifies the maximum connections for server license mode. Use this parameter only if the LicenseMode parameter is set to Perserver. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$null</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created OSCustomizationSpec object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>When the ProductKey parameter is not specified, the OS customization is unattended only if the Windows guest operating system version is Vista or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-OSCustomizationSpec -Name Spec -OSType Windows -FullName Administrator -OrgName Organization -NamingScheme Fixed -NamingPrefix Computer -ProductKey &quot;xxxx-xxxx&quot; -LicenseMode PerSeat -Workgroup Workgroup -ChangeSid</dev:code>
  			<dev:remarks>
				<maml:para>Generates a new SID for the machine and sets the name of the machine to &quot;Computer&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-OSCustomizationSpec -Name Spec -OSType Windows -Description &quot;This spec adds a computer in a domain.&quot; -FullName Administrator -OrgName Organization -NamingScheme Fixed -NamingPrefix &quot;Computer&quot; -ProductKey &quot;xxxx-xxxx&quot; -LicenseMode Perserver -LicenseMaxConnections 30 -AdminPassword pass -Domain Domain -DomainUsername Root -DomainPassword pass</dev:code>
  			<dev:remarks>
				<maml:para>Creates a customization specification that adds a computer in the domain named &quot;Domain&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-OSCustomizationSpec.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-OSCustomizationSpec</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OSCustomizationSpec</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-ResourcePool</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new resource pool.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ResourcePool</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new resource pool with the provided inputs on the location that is specified by the Location parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ResourcePool</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies a container object (ResourcePool, Cluster, or VMHost) where you want to place the new resource pool. If a host or a cluster is specified for the Location parameter, the resource pool is created in the &quot;Resources&quot; resource pool. The &quot;Resources&quot; resource pool is a system resource pool and is guaranteed to exist.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new resource pool.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuExpandableReservation</maml:name>
				<maml:description>
					<maml:para>Indicates that the CPU reservation can grow beyond the specified value if the parent resource pool has unreserved resources.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuLimitMhz</maml:name>
				<maml:description>
					<maml:para>Specifies a CPU usage limit in MHz. Utilization will not exceed this limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuReservationMhz</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU size in MHz that is guaranteed to be available.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuSharesLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU allocation level for this pool. This property is used in relative allocation between resource consumers. The valid values are Custom, High, Low, and Normal.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SharesLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemExpandableReservation</maml:name>
				<maml:description>
					<maml:para>If the value is $true, the memory reservation can grow beyond the specified value if the parent resource pool has unreserved resources.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemLimitMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemLimitGB instead.
Specifies a memory usage limit in megabytes (MB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemLimitGB</maml:name>
				<maml:description>
					<maml:para>Specifies a memory usage limit in gigabytes (GB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemReservationMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemReservationGB instead.
Specifies the guaranteed available memory in megabytes (MB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemReservationGB</maml:name>
				<maml:description>
					<maml:para>Specifies the guaranteed available memory in gigabytes (GB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemSharesLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the memory allocation level for this pool. This property is used in relative allocation between resource consumers. The valid values are Custom, High, Low, and Normal.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SharesLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumCpuShares</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU allocation level for this pool. This property is used in relative allocation between resource consumers. This parameter is ignored unless the CpuSharesLevel parameter is set to Custom.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumMemShares</maml:name>
				<maml:description>
					<maml:para>Specifies the memory allocation level for this pool. This property is used in relative allocation between resource consumers. This parameter is ignored unless the MemSharesLevel parameter is set to Custom.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies a container object (ResourcePool, Cluster, or VMHost) where you want to place the new resource pool. If a host or a cluster is specified for the Location parameter, the resource pool is created in the &quot;Resources&quot; resource pool. The &quot;Resources&quot; resource pool is a system resource pool and is guaranteed to exist.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new resource pool.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuExpandableReservation</maml:name>
			<maml:description>
				<maml:para>Indicates that the CPU reservation can grow beyond the specified value if the parent resource pool has unreserved resources.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuLimitMhz</maml:name>
			<maml:description>
				<maml:para>Specifies a CPU usage limit in MHz. Utilization will not exceed this limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuReservationMhz</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU size in MHz that is guaranteed to be available.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuSharesLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU allocation level for this pool. This property is used in relative allocation between resource consumers. The valid values are Custom, High, Low, and Normal.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SharesLevel</command:parameterValue>
			<dev:type>
				<maml:name>SharesLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Normal</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemExpandableReservation</maml:name>
			<maml:description>
				<maml:para>If the value is $true, the memory reservation can grow beyond the specified value if the parent resource pool has unreserved resources.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemLimitMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemLimitGB instead.
Specifies a memory usage limit in megabytes (MB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemLimitGB</maml:name>
			<maml:description>
				<maml:para>Specifies a memory usage limit in gigabytes (GB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemReservationMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemReservationGB instead.
Specifies the guaranteed available memory in megabytes (MB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemReservationGB</maml:name>
			<maml:description>
				<maml:para>Specifies the guaranteed available memory in gigabytes (GB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemSharesLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the memory allocation level for this pool. This property is used in relative allocation between resource consumers. The valid values are Custom, High, Low, and Normal.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SharesLevel</command:parameterValue>
			<dev:type>
				<maml:name>SharesLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Normal</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumCpuShares</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU allocation level for this pool. This property is used in relative allocation between resource consumers. This parameter is ignored unless the CpuSharesLevel parameter is set to Custom.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumMemShares</maml:name>
			<maml:description>
				<maml:para>Specifies the memory allocation level for this pool. This property is used in relative allocation between resource consumers. This parameter is ignored unless the MemSharesLevel parameter is set to Custom.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created ResourcePool object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$resourcepool1 = Get-ResourcePool -Location Cluster -Name ResourcePool1

New-ResourcePool -Location $resourcepool1 -Name ResourcePool2 -CpuExpandableReservation $true -CpuReservationMhz 500 -CpuSharesLevel high -MemExpandableReservation $true -MemReservationGB 5 -MemSharesLevel high</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new resource pool named ResourcePool2 in the cluster&#39;s root resource pool ResourcePool1.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-ResourcePool.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-ScsiController</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new SCSI controller.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ScsiController</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new SCSI controller.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ScsiController</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HardDisk</maml:name>
				<maml:description>
					<maml:para>Specifies the hard disks you want to attach to the new SCSI controller.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HardDisk[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the SCSI controller. The valid values are ParaVirtual, VirtualBusLogic, VirtualLsiLogic, and VirtualLsiLogicSAS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScsiControllerType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>BusSharingMode</maml:name>
				<maml:description>
					<maml:para>Specifies the bus sharing mode of the SCSI controller. The valid values are NoSharing, Physical, and Virtual.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScsiBusSharingMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HardDisk</maml:name>
			<maml:description>
				<maml:para>Specifies the hard disks you want to attach to the new SCSI controller.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HardDisk[]</command:parameterValue>
			<dev:type>
				<maml:name>HardDisk[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the SCSI controller. The valid values are ParaVirtual, VirtualBusLogic, VirtualLsiLogic, and VirtualLsiLogicSAS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ScsiControllerType</command:parameterValue>
			<dev:type>
				<maml:name>ScsiControllerType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>BusSharingMode</maml:name>
			<maml:description>
				<maml:para>Specifies the bus sharing mode of the SCSI controller. The valid values are NoSharing, Physical, and Virtual.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ScsiBusSharingMode</command:parameterValue>
			<dev:type>
				<maml:name>ScsiBusSharingMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The one or more newly created ScsiController objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Get-VM VM | New-HardDisk -CapacityKB 10485760 | New-ScsiController</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new 10GB hard disk and a new SCSI controller with default values for the BusSharingMode and Type properties.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$disk = Get-HardDisk -VM VM | Select -First 2

New-ScsiController -HardDisk $disk -BusSharingMode Physical -Type VirtualLsiLogicSAS</dev:code>
  			<dev:remarks>
				<maml:para>Creates for the first two hard disks of VM a new SCSI controller of VirtualLsiLogicSAS type and with Physical bus sharing mode.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-ScsiController.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ScsiController</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ScsiController</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-Snapshot</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new snapshot of a virtual machine.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>Snapshot</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new snapshot of a virtual machine with the provided inputs.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-Snapshot</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines you want to snapshot.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new snapshot.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Provide a description of the new snapshot.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Memory</maml:name>
				<maml:description>
					<maml:para>If the value is $true and if the virtual machine is powered on, the virtual machine&#39;s memory state is preserved with the snapshot.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Quiesce</maml:name>
				<maml:description>
					<maml:para>If the value is $true and the virtual machine is powered on, VMware Tools are used to quiesce the file system of the virtual machine. This assures that a disk snapshot represents a consistent state of the guest file systems. If the virutal machine is powered off or VMware Tools are not available, the Quiesce parameter is ignored.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines you want to snapshot.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new snapshot.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Provide a description of the new snapshot.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Memory</maml:name>
			<maml:description>
				<maml:para>If the value is $true and if the virtual machine is powered on, the virtual machine&#39;s memory state is preserved with the snapshot.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Quiesce</maml:name>
			<maml:description>
				<maml:para>If the value is $true and the virtual machine is powered on, VMware Tools are used to quiesce the file system of the virtual machine. This assures that a disk snapshot represents a consistent state of the guest file systems. If the virutal machine is powered off or VMware Tools are not available, the Quiesce parameter is ignored.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The one or more newly created Snapshot objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-Snapshot -VM VM -Name BeforePatch</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new snapshot of the VM virtual machine named BeforePatch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-Snapshot.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-StatInterval</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a statistics interval with the specified parameters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>StatInterval</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a statistics interval with the specified parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-StatInterval</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new statistics interval.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>SamplingPeriodSecs</maml:name>
				<maml:description>
					<maml:para>Specifies a sampling period in seconds.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>StorageTimeSecs</maml:name>
				<maml:description>
					<maml:para>Specifies the length of time (in seconds) that the statistics information is kept in the database.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new statistics interval.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>SamplingPeriodSecs</maml:name>
			<maml:description>
				<maml:para>Specifies a sampling period in seconds.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>StorageTimeSecs</maml:name>
			<maml:description>
				<maml:para>Specifies the length of time (in seconds) that the statistics information is kept in the database.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="4">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created StatInterval object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Creation of statistics intervals is not supported on vCenter Server and ESX later than 2.0.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-StatInterval -Name Minute -SamplingPeriodSecs 60 -StorageTimeSecs 600</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new statistics interval named Minute. Note that creating statistics intervals is allowed only on VirtualCenter 2.0.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-StatInterval.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Stat</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-StatType</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-Tag</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new tag in the specified tag category with the specified parameters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>Tag</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new tag in the specified tag category with the specified parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-Tag</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the new tag.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Category</maml:name>
				<maml:description>
					<maml:para>Specifies the tag category in which the new tag will be created.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >TagCategory</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Specifies the description of the new tag.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the new tag.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Category</maml:name>
			<maml:description>
				<maml:para>Specifies the tag category in which the new tag will be created.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TagCategory</command:parameterValue>
			<dev:type>
				<maml:name>TagCategory</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Specifies the description of the new tag.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created Tag object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only with vCenter Server 5.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-TagCategory -Name &quot;MyTagCategory&quot; | New-Tag -Name &quot;MyTag&quot; -Description &quot;Create MyTag tag in MyTagCategory category.&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a specific tag category, named &quot;MyTagCategory&quot;, creates a tag named &quot;MyTag&quot; inside it, and sets the tag description.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-Tag.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-TagAssignment</command:name>
		<maml:description>
			<maml:para>This cmdlet assigns the specified tag to the specified entity.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>TagAssignment</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet assigns the specified tag to the specified entity.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-TagAssignment</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Specifies the tag to be assigned to the entity.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Tag</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies the object on which to assign the specified tag.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIObjectCore</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="1">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Specifies the tag to be assigned to the entity.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Tag</command:parameterValue>
			<dev:type>
				<maml:name>Tag</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies the object on which to assign the specified tag.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIObjectCore</command:parameterValue>
			<dev:type>
				<maml:name>VIObjectCore</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>One or more TagAssignment objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only with vCenter Server 5.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myTag = Get-Tag &quot;MyTag&quot;
Get-VM &quot;*MyVM*&quot; | New-TagAssignment -Tag $myTag</dev:code>
  			<dev:remarks>
				<maml:para>Assigns the &quot;MyTag&quot; tag to all virtual machines whose name contains the &quot;*MyVM*&quot; wildcard pattern.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-TagAssignment.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-TagAssignment</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-TagAssignment</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-TagCategory</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new tag category on the specified vCenter Server systems with the specified parameters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>TagCategory</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new tag category on the specified vCenter Server systems with the specified parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-TagCategory</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the new tag category.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Specifies the description of the new tag category.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Cardinality</maml:name>
				<maml:description>
					<maml:para>Specifies the cardinality of the tag category. If not specified, the default value is &quot;Single&quot;.

&quot;Single&quot; means that only a single tag from this category can be assigned to a specific object at a time. &quot;Multiple&quot; means that more than one tag from this category can be assigned to a specific object at a time.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Cardinality</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>EntityType</maml:name>
				<maml:description>
					<maml:para>Defines the type of objects to which the tags in this category will be applicable.
If you do not specify this parameter or specify &quot;All&quot; as a value, the tags in this category will be applicable to all valid entity types.

This parameter accepts both PowerCLI type names and vSphere API type names. The valid PowerCLI type names are: Cluster, Datacenter, Datastore, DatastoreCluster, DistributedPortGroup, DistributedSwitch, Folder, ResourcePool, VApp, VirtualPortGroup, VirtualMachine, VM, VMHost.

For vSphere API type names  that are not vCenter Server API type names, a namespace prefix is used.
The format is: &lt;namespace&gt;/&lt;type&gt;
Example: &#39;vco/WorkflowItem&#39;</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the new tag category.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Specifies the description of the new tag category.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cardinality</maml:name>
			<maml:description>
				<maml:para>Specifies the cardinality of the tag category. If not specified, the default value is &quot;Single&quot;.

&quot;Single&quot; means that only a single tag from this category can be assigned to a specific object at a time. &quot;Multiple&quot; means that more than one tag from this category can be assigned to a specific object at a time.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Cardinality</command:parameterValue>
			<dev:type>
				<maml:name>Cardinality</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Single</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>EntityType</maml:name>
			<maml:description>
				<maml:para>Defines the type of objects to which the tags in this category will be applicable.
If you do not specify this parameter or specify &quot;All&quot; as a value, the tags in this category will be applicable to all valid entity types.

This parameter accepts both PowerCLI type names and vSphere API type names. The valid PowerCLI type names are: Cluster, Datacenter, Datastore, DatastoreCluster, DistributedPortGroup, DistributedSwitch, Folder, ResourcePool, VApp, VirtualPortGroup, VirtualMachine, VM, VMHost.

For vSphere API type names  that are not vCenter Server API type names, a namespace prefix is used.
The format is: &lt;namespace&gt;/&lt;type&gt;
Example: &#39;vco/WorkflowItem&#39;</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created TagCategory object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only with vCenter Server 5.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-TagCategory -Name &quot;MyTagCategory&quot; -Cardinality &quot;Single&quot; -EntityType &quot;VirtualMachine&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new tag category, named &quot;MyTagCategory&quot;, defining the &quot;VirtualMachine&quot; type as applicable to the tags inside that category and specifying that only a single tag from that category can be assigned to a specific VirtualMachine object at a time.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-TagCategory -Name &quot;MyTagCategory&quot; -Cardinality &quot;Multiple&quot; -Description &quot;MyTagCategory description&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new tag category, named &quot;MyTagCategory&quot;, that has &quot;MyTagCategory description&quot; set as a description and specifies that multiple tags from that category can be assigned to an object. Tags from this category are applicable to all valid entity types.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-TagCategory.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-Template</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new virtual machine template.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>Template</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new template based on the specified virtual machine.
You can also create a new template by cloning an existing one. You can also register an existing template to the vCenter Server inventory.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-Template</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine from which you want to create the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualMachine</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the location where you want to place the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore or the datastore cluster where you want to store the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >StorageResource</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-Template</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the location where you want to place the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host where you want to create the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore or the datastore cluster where you want to store the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >StorageResource</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskStorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the disk storage format of the new template. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Specifies a template you want to clone.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Template</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-Template</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the location where you want to place the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host where you want to create the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>TemplateFilePath</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore path to the file you want to use to register the new template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine from which you want to create the new template.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualMachine</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new template.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="3">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies the location where you want to place the new template.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore or the datastore cluster where you want to store the new template.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">StorageResource</command:parameterValue>
			<dev:type>
				<maml:name>StorageResource</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host where you want to create the new template.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHost</command:parameterValue>
			<dev:type>
				<maml:name>VMHost</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskStorageFormat</maml:name>
			<maml:description>
				<maml:para>Specifies the disk storage format of the new template. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualDiskStorageFormat</command:parameterValue>
			<dev:type>
				<maml:name>VirtualDiskStorageFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Specifies a template you want to clone.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Template</command:parameterValue>
			<dev:type>
				<maml:name>Template</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>TemplateFilePath</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore path to the file you want to use to register the new template.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created Template object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVM = Get-VM -Name &quot;MyVM1&quot;
$drsCluster=Get-DatastoreCluster &quot;MyDatastoreCluster&quot;
New-Template -VM $myVM -Name &quot;MyTemplate&quot; -Datastore $drsCluster -Location Datacenter2</dev:code>
  			<dev:remarks>
				<maml:para>Creates a template named MyTemplate from the MyVM1 virtual machine and stores it in the MyDatastoreCluster datastore cluster in the Datacenter2 datacenter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myFolder = Get-Folder -Name &quot;MyFolder1&quot;
New-Template -Name &quot;MyTemplate1&quot; -TemplateFilePath &quot;[Storage1] templatefolder/template.vmtx&quot; -Location $myFolder -VMHost (Get-VMHost)</dev:code>
  			<dev:remarks>
				<maml:para>Registers the existing MyTemplate1 template to a vCenter Server inventory folder by using the specified template file.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myTemplate = Get-Template -Name &quot;MyTemplate1&quot;
$myDs = Get-Datastore -Name &quot;MyDatastore1&quot;
New-Template -Template $myTemplate -Name &quot;MyTemplate2&quot; -Datastore $myDs -Location &quot;Datacenter2&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Creates the MyTemplate2 template by cloning an existing template and stores the new template in the specified datastore in the Datacenter2 datacenter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-Template.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VApp</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new vApp.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VApp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new vApp.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VApp</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies a VApp, ResourcePool, VMHost, or Cluster object where you want to place the new vApp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new vApp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuExpandableReservation</maml:name>
				<maml:description>
					<maml:para>Indicates that the CPU reservation can grow beyond the specified value if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuLimitMhz</maml:name>
				<maml:description>
					<maml:para>Specifies a CPU usage limit in MHz. Utilization will not exceed this limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuReservationMhz</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU size in MHz that is guaranteed to be available.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuSharesLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU allocation level for this vApp. This property is used in relative allocation between resource consumers. The valid values are Custom, High, Low, and Normal.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SharesLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemExpandableReservation</maml:name>
				<maml:description>
					<maml:para>If the value is $true, the memory reservation can grow beyond the specified value if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemLimitMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemLimitGB instead.
Specifies a memory usage limit in megabytes (MB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemLimitGB</maml:name>
				<maml:description>
					<maml:para>Specifies a memory usage limit in gigabytes (GB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemReservationMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemReservationGB instead.
Specifies the guaranteed available memory in megabytes (MB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemReservationGB</maml:name>
				<maml:description>
					<maml:para>Specifies the guaranteed available memory in gigabytes (GB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemSharesLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the memory allocation level for this vApp. This property is used in relative allocation between resource consumers. The valid values are Custom, High, Low, and Normal.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SharesLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumCpuShares</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU allocation level for this vApp. This property is used in relative allocation between resource consumers. This parameter is ignored unless the CpuSharesLevel parameter is set to Custom.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumMemShares</maml:name>
				<maml:description>
					<maml:para>Specifies the memory allocation level for this vApp. This property is used in relative allocation between resource consumers. This parameter is ignored unless the MemSharesLevel parameter is set to Custom.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the Center Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-VApp</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies a VApp, ResourcePool, VMHost, or Cluster object where you want to place the new vApp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new vApp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VApp</maml:name>
				<maml:description>
					<maml:para>Specifies a vApp you want to copy.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VApp</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host where you want to run the copied vApp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore where you want to store the copied vApp. If you do not specify a datastore, the cmdlet takes the first datastore of the host or cluster.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Datastore</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskStorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the storage format of the disks of the vApp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the Center Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-VApp</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies a VApp, ResourcePool, VMHost, or Cluster object where you want to place the new vApp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new vApp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore where you want to store the copied vApp. If you do not specify a datastore, the cmdlet takes the first datastore of the host or cluster.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Datastore</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>ContentLibraryItem</maml:name>
				<maml:description>
					<maml:para>Specifies the content library template to deploy the vApp from.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ContentLibraryItem</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskStorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the storage format of the disks of the vApp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the Center Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies a VApp, ResourcePool, VMHost, or Cluster object where you want to place the new vApp.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new vApp.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuExpandableReservation</maml:name>
			<maml:description>
				<maml:para>Indicates that the CPU reservation can grow beyond the specified value if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuLimitMhz</maml:name>
			<maml:description>
				<maml:para>Specifies a CPU usage limit in MHz. Utilization will not exceed this limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuReservationMhz</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU size in MHz that is guaranteed to be available.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuSharesLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU allocation level for this vApp. This property is used in relative allocation between resource consumers. The valid values are Custom, High, Low, and Normal.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SharesLevel</command:parameterValue>
			<dev:type>
				<maml:name>SharesLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemExpandableReservation</maml:name>
			<maml:description>
				<maml:para>If the value is $true, the memory reservation can grow beyond the specified value if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemLimitMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemLimitGB instead.
Specifies a memory usage limit in megabytes (MB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemLimitGB</maml:name>
			<maml:description>
				<maml:para>Specifies a memory usage limit in gigabytes (GB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemReservationMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemReservationGB instead.
Specifies the guaranteed available memory in megabytes (MB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemReservationGB</maml:name>
			<maml:description>
				<maml:para>Specifies the guaranteed available memory in gigabytes (GB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemSharesLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the memory allocation level for this vApp. This property is used in relative allocation between resource consumers. The valid values are Custom, High, Low, and Normal.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SharesLevel</command:parameterValue>
			<dev:type>
				<maml:name>SharesLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumCpuShares</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU allocation level for this vApp. This property is used in relative allocation between resource consumers. This parameter is ignored unless the CpuSharesLevel parameter is set to Custom.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumMemShares</maml:name>
			<maml:description>
				<maml:para>Specifies the memory allocation level for this vApp. This property is used in relative allocation between resource consumers. This parameter is ignored unless the MemSharesLevel parameter is set to Custom.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the Center Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VApp</maml:name>
			<maml:description>
				<maml:para>Specifies a vApp you want to copy.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VApp</command:parameterValue>
			<dev:type>
				<maml:name>VApp</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host where you want to run the copied vApp.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHost</command:parameterValue>
			<dev:type>
				<maml:name>VMHost</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore where you want to store the copied vApp. If you do not specify a datastore, the cmdlet takes the first datastore of the host or cluster.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Datastore</command:parameterValue>
			<dev:type>
				<maml:name>Datastore</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskStorageFormat</maml:name>
			<maml:description>
				<maml:para>Specifies the storage format of the disks of the vApp.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualDiskStorageFormat</command:parameterValue>
			<dev:type>
				<maml:name>VirtualDiskStorageFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>ContentLibraryItem</maml:name>
			<maml:description>
				<maml:para>Specifies the content library template to deploy the vApp from.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ContentLibraryItem</command:parameterValue>
			<dev:type>
				<maml:name>ContentLibraryItem</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created VApp object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VApp -Name MyVApp1 -CpuLimitMhz 4000 -CpuReservationMhz 1000 -Location MyVMHost1</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new vApp on the MyVMHost1 host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VApp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VICredentialStoreItem</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new entry in the credential store.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VICredentialStoreItem</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new entry in the credential store. If there is an existing entry for the specified host and user, it is overwritten.  If the credential store file does not exist, it is created (along with its directory if needed). If no file is specified, the item is created in the default credential store file %APPDATA%\VMware\credstore\vicredentials.xml. Credential store items for vCloud Director servers must contain user name and organization in the following format: user_name:organization_name, where both names are lower-cased.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VICredentialStoreItem</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Host</maml:name>
				<maml:description>
					<maml:para>Specifies the host for which you want to create the new credentials item.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>User</maml:name>
				<maml:description>
					<maml:para>Specifies a user name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Specifies a password.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>Specifies a file path where you want to store the new credentials.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Host</maml:name>
			<maml:description>
				<maml:para>Specifies the host for which you want to create the new credentials item.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>User</maml:name>
			<maml:description>
				<maml:para>Specifies a user name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Specifies a password.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>File</maml:name>
			<maml:description>
				<maml:para>Specifies a file path where you want to store the new credentials.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created VICredentialStoreItem object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VICredentialStoreItem -Host 192.168.1.10 -User Admin -Password pass</dev:code>
  			<dev:remarks>
				<maml:para>Adds a new item in the default credential store file.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VICredentialStoreItem.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VICredentialStoreItem</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VICredentialStoreItem</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VIPermission</command:name>
		<maml:description>
			<maml:para>This cmdlet creates new permissions on the specified inventory objects for the provided users and groups in the role.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VIPermission</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates new permissions on the specified inventory objects for the provided users and groups in the role. By default, new permissions are propagated down the hierarchy to sub-entities. You cannot create new permissions for the following objects:
- direct child folders of a datacenter
- root resource pools of clusters and standalone hosts.
These objects always inherit the permissions of their parent.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VIPermission</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies the inventory objects for which you want to create new permissions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>Specifies users and groups to which you want to apply the new permissions. If you specify principal names by using the &quot;domain\name&quot; syntax, wildcards are not supported.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIAccount[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Role</maml:name>
				<maml:description>
					<maml:para>Specifies the roles for which you want to create new permissions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Role</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Propagate</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to propagate the new permissions to the child inventory objects.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="3">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies the inventory objects for which you want to create new permissions.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIObject[]</command:parameterValue>
			<dev:type>
				<maml:name>VIObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Principal</maml:name>
			<maml:description>
				<maml:para>Specifies users and groups to which you want to apply the new permissions. If you specify principal names by using the &quot;domain\name&quot; syntax, wildcards are not supported.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIAccount[]</command:parameterValue>
			<dev:type>
				<maml:name>VIAccount[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="2">
			<maml:name>Role</maml:name>
			<maml:description>
				<maml:para>Specifies the roles for which you want to create new permissions.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Role</command:parameterValue>
			<dev:type>
				<maml:name>Role</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Propagate</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to propagate the new permissions to the child inventory objects.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The one or more newly created Permission objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>You can specify permissions to a datastore only on vSphere 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VIRole -Name Role -Server $server -Privilege (Get-VIPrivilege -PrivilegeGroup)

$permission = New-VIPermission -Role Role -Principal Administrator -Entity (Get-Datacenter)</dev:code>
  			<dev:remarks>
				<maml:para>Creates a permission on the provided server for a role with the specified privileges.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VIPermission.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPrivilege</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VIProperty</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new extension property on the specified object type.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VIProperty</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new extension property on the specified object type. Changes take effect upon the next retrieval of the corresponding objects.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VIProperty</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new extension property. Names are case-sensitive and can include only letters, numbers, and the underscore symbol. The name of a property must start with a letter or underscore.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>ObjectType</maml:name>
				<maml:description>
					<maml:para>Specifies the object types to which you want to append the new property. All PowerCLI object types are supported.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>Specifies a script block you want to use to compute the value of the new extended property.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScriptBlock</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to create the new property even if another property with the same name exists for the specified object type. This parameter is not applicable for core properties of an object type.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>BasedOnExtensionProperty</maml:name>
				<maml:description>
					<maml:para>Specifies a list of strings that maps the properties of the $this.ExtensionData object. Use this parameter to specify which members of ExtensionData are used by the script block provided for the Value parameter.
This parameter is case-sensitive.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-VIProperty</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new extension property. Names are case-sensitive and can include only letters, numbers, and the underscore symbol. The name of a property must start with a letter or underscore.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>ObjectType</maml:name>
				<maml:description>
					<maml:para>Specifies the object types to which you want to append the new property. All PowerCLI object types are supported.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to create the new property even if another property with the same name exists for the specified object type. This parameter is not applicable for core properties of an object type.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>ValueFromExtensionProperty</maml:name>
				<maml:description>
					<maml:para>Specifies a string that maps a property of the $this.ExtensionData object. This parameter is case-sensitive.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new extension property. Names are case-sensitive and can include only letters, numbers, and the underscore symbol. The name of a property must start with a letter or underscore.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>ObjectType</maml:name>
			<maml:description>
				<maml:para>Specifies the object types to which you want to append the new property. All PowerCLI object types are supported.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>Specifies a script block you want to use to compute the value of the new extended property.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ScriptBlock</command:parameterValue>
			<dev:type>
				<maml:name>ScriptBlock</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to create the new property even if another property with the same name exists for the specified object type. This parameter is not applicable for core properties of an object type.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>BasedOnExtensionProperty</maml:name>
			<maml:description>
				<maml:para>Specifies a list of strings that maps the properties of the $this.ExtensionData object. Use this parameter to specify which members of ExtensionData are used by the script block provided for the Value parameter.
This parameter is case-sensitive.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>ValueFromExtensionProperty</maml:name>
			<maml:description>
				<maml:para>Specifies a string that maps a property of the $this.ExtensionData object. This parameter is case-sensitive.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created VIProperty object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>In PowerShell 2.0, errors in evaluating values of new properties are not displayed. You can find information about these errors in the $Error environment variable.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VIProperty -ObjectType VirtualMachine -Name CommittedSpaceMB -Value { $vm = $args[0]; $sum = 0; $vm.ExtensionData.Storage.PerDatastoreUsage | foreach { $sum += $_.Committed} ; $sum = [int]($sum / 1024 / 1024); return $sum }

Get-VM | select Name, CommittedSpaceMB</dev:code>
  			<dev:remarks>
				<maml:para>Creates a script-based property for the VirtualMachine object type that calculates the committed space of a virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VIProperty -ObjectType VirtualMachine -Name CommittedSpaceMB -Value { $vm = $args[0]; $sum = 0; $vm.ExtensionData.Storage.PerDatastoreUsage | foreach { $sum += $_.Committed} ; $sum = [int]($sum / 1024 / 1024); return $sum } -BasedOnExtensionProperty &#39;Storage.PerDatastoreUsage.Committed&#39; -Force

Get-VM | select Name, CommittedSpaceMB</dev:code>
  			<dev:remarks>
				<maml:para>Creates a property that calculates the committed space of a virtual machine. The cmdlet uses the BasedOnExtensionProperty parameter to specify which   ExtensionData member is used by the script block. This mean that during the creation of each virtual machine, only the specified property of extension data - Storage.PerDatastoreUsage.Committed will be filled up.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VIProperty -ObjectType VirtualMachine -Name CommittedSpace -ValueFromExtensionProperty &#39;SUM Storage.PerDatastoreUsage.Committed&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new property that calculates the committed storage based on the property and aggregation function SUM specified by the ValueFromExtensionProperty parameter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VIProperty -ObjectType InventoryItem -Name OverallStatus -ValueFromExtensionProperty &#39;OverallStatus&#39;

Get-VM | select Name, OverallStatus

Get-VMHost | select Name, OverallStatus</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new property based on the OverallStatus property for all inventory types.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VIProperty -ObjectType VIObjectCore -Value { if ( $args[0].UId -match &quot;/VIserver=[\w]+@(.*):.*&quot; ) { $matches[1] } else { &quot; } } -Name VIServerName

Get-Inventory | select Name, VIServerName</dev:code>
  			<dev:remarks>
				<maml:para>Creates a script-based property to VIObjectCore that parses the UId property and extracts the name of the server to which a given object belongs.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VIProperty.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIProperty</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIProperty</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VIRole</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new role on the specified servers and applies the provided privileges.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VIRole</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new role on the specified servers and applies the provided privileges.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VIRole</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new role.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Privilege</maml:name>
				<maml:description>
					<maml:para>Specifies the privileges you want to apply to the new role.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Privilege[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new role.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Privilege</maml:name>
			<maml:description>
				<maml:para>Specifies the privileges you want to apply to the new role.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Privilege[]</command:parameterValue>
			<dev:type>
				<maml:name>Privilege[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created Role object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VIRole -Name Role -Privilege (Get-VIPrivilege -PrivilegeGroup)</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new role with the provided group privileges.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VIRole.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPrivilege</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VirtualPortGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new port group on the specified host.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VirtualPortGroup</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new port group on the  host using the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VirtualPortGroup</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new port group.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VirtualSwitch</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual switch for which you want to create a new port group.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualSwitch</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VLanId</maml:name>
				<maml:description>
					<maml:para>Specifies the VLAN ID for ports using this port group. The following values are valid:

0 - specifies that you do not want to associate the port group with a VLAN.
1 to 4094 - specifies a VLAN ID for the port group.
4095 - specifies that the port group should use trunk mode, which allows the guest operating system to manage its own VLAN tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new port group.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VirtualSwitch</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual switch for which you want to create a new port group.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualSwitch</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VLanId</maml:name>
			<maml:description>
				<maml:para>Specifies the VLAN ID for ports using this port group. The following values are valid:

0 - specifies that you do not want to associate the port group with a VLAN.
1 to 4094 - specifies a VLAN ID for the port group.
4095 - specifies that the port group should use trunk mode, which allows the guest operating system to manage its own VLAN tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created VirtualPortGroup object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vswitch =  New-VirtualSwitch -VMHost 10.23.114.234 -Name VSwitch

$vportgroup =  New-VirtualPortGroup -VirtualSwitch $vswitch  -Name VPortGroup</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual port group named VPortGroup on the virtual switch VSwitch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VirtualPortGroup.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VirtualSwitch</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new virtual switch.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VirtualSwitch</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new virtual switch on the host that is specified by the VMHost parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VirtualSwitch</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host on which you want to create the new virtual switch.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new virtual switch.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>NumPorts</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual switch port number. The value is rounded to the closest exact power of two that is greater than the given number (for example, if the user specifies 67, this number is rounded to 128). Note that the port number displayed in the vSphere Client might differ from the value that you specified for the NumPorts parameter.

Note: In ESX 5.5 or later, standard virtual switches are always elastic, so the NumPorts parameter is no longer applicable and its value is ignored.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "4" >
				<maml:name>Nic</maml:name>
				<maml:description>
					<maml:para>Specifies the physical network interface cards you want to add to the Active NICs of the new virtual switch. This parameter accepts both objects and strings.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PhysicalNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>Mtu</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum transmission unit (MTU) associated with the specified virtual switch (in bytes). The MTU value is always greater than 0.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host on which you want to create the new virtual switch.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHost</command:parameterValue>
			<dev:type>
				<maml:name>VMHost</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new virtual switch.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>NumPorts</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual switch port number. The value is rounded to the closest exact power of two that is greater than the given number (for example, if the user specifies 67, this number is rounded to 128). Note that the port number displayed in the vSphere Client might differ from the value that you specified for the NumPorts parameter.

Note: In ESX 5.5 or later, standard virtual switches are always elastic, so the NumPorts parameter is no longer applicable and its value is ignored.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="4">
			<maml:name>Nic</maml:name>
			<maml:description>
				<maml:para>Specifies the physical network interface cards you want to add to the Active NICs of the new virtual switch. This parameter accepts both objects and strings.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PhysicalNic[]</command:parameterValue>
			<dev:type>
				<maml:name>PhysicalNic[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>Mtu</maml:name>
			<maml:description>
				<maml:para>Specifies the maximum transmission unit (MTU) associated with the specified virtual switch (in bytes). The MTU value is always greater than 0.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created VirtualSwitch object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>NumPorts are at least as many as the user specified. (The server rounds it up to the closest exact power of two, greater than the given number)
The MTU field is only available on VPX 2.5  and ESX 3.5. For older VPX versions, this field is expected to be null.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vswitch =  New-VirtualSwitch -VMHost 10.23.112.234 -Name VSwitch</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new virtual switch named VSwitch on the virtual machine host with IP address 10.23.112.234.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$network = Get-VMHostNetwork -VMHost 10.23.112.234

$phNic = $network.PhysicalNic[0].DeviceName

$vswitch = New-VirtualSwitch -VMHost 10.23.112.234 -Name VSwitch -Nic $phNic</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new virtual switch named VSwitch on the virtual machine host with IP address 10.23.112.234 with a physical network adapter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost *.128 | New-VirtualSwitch -Name VSwitch -Nic vmnic5,vmnic6</dev:code>
  			<dev:remarks>
				<maml:para>Create a virtual switch named VSwitch with two physical network adapters - &#39;vmnic5&#39; and &#39;vmnic6&#39;. Note that the &#39;vmnic5&#39; and &#39;vmnic6&#39; adapters must not be assigned to other virtual switches.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VirtualSwitch.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VirtualSwitch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VM</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new virtual machine.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VM</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new virtual machine with the provided parameters. The network adapter and the SCSI adapter of the new virtual machine are created of the recommended type for the OS that is specified by the GuestId parameter. If  the OSCustomizationSpec parameter is used,  the virtual machine is customized according to the spec. You must specify values for at least one of the ResourcePool, VMHost, and VApp parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VM</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AdvancedOption</maml:name>
				<maml:description>
					<maml:para>Specifies advanced options for creating virtual machines. Accepts only SdrsVMDiskAntiAffinityRule and SdrsVMAntiAffinityRule objects.

The SdrsVMDiskAntiAffinityRule defines a Storage DRS intra-VM anti-affinity rule (vm disk anti-affinity rule). It is only applicable when creating a virtual machine or hard disk on a datastore cluster. An instance of the object is created by invoking its constructor. There are two constructors - &quot;public SdrsVMDiskAntiAffinityRule(param string[] diskIdentifier)&quot; and &quot;public SdrsVMDiskAntiAffinityRule(param HardDisk[] disk)&quot;. For the first constructor, &quot;diskIdentifier&quot; can be either the disk key or the index of the disk in the disk array. The specified disks (and the disk to which the rule is applied) are placed in an anti-affinity rule on a DatastoreCluster. Only one such rule is supported per a virtual machine. You can pass the instance to the AdvancedOption parameter of the New-VM or New-HardDisk cmdlets.

The SdrsVMAntiAffinityRule defines a Storage DRS inter-VM anti-affinity rule. It is only applicable when creating a virtual machine on a DatastoreCluster. An instance of the object is created by invoking its constructor. The constructor has one parameter - an array of virtual machines - &quot;public SdrsVMAntiAffinityRule(param VirtualMachine[] vm)&quot;. Then, you can pass the instance to the AdvancedOption parameter of the New-VM cmdlet. This will place the new virtual machine and the virtual machines specified in the constructor in an inter-VM anti-affinity rule on a DatastoreCluster.

The SDRS functionality is experimental.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AdvancedOption[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host on which you want to create the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Specifies the version of the new virtual machine. The valid values are v4, v7, v8, v9, v10, and v11. By default, the new virtual machine is created with the latest available version.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMVersion</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new virtual machine. If you are registering or cloning an existing virtual machine, this parameter is not mandatory.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>ResourcePool</maml:name>
				<maml:description>
					<maml:para>Specifies where you want to place the new virtual machine. The parameter accepts VMHost, Cluster, ResourcePool, and VApp objects. If no value is specified, the virtual machine is added to the resource pool of its host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VApp</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated. Use the ResourcePool parameter instead.
Specifies the vApp where you want to create the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VApp</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the folder where you want to place the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Folder</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore where you want to place the new virtual machine. If a DatastoreCluster is passed to the Datastore parameter, the virtual machine is placed in the DatastoreCluster in an automated SDRS mode and with enabled intra-VM affinity rule (unless another rule is specified). You can specify a SDRS rule when creating the virtual machine in a DatastoreCluster by passing either a SdrsVMDiskAntiAffinityRule or SdrsVMAntiAffinityRule objects to the AdvancedOption parameter. These two rules are mutually exclusive.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >StorageResource</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use DiskGB instead.
Specifies the size in megabytes (MB) of the disks that you want to create and add to the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Int64[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskGB</maml:name>
				<maml:description>
					<maml:para>Specifies the size in gigabytes (GB) of the disks that you want to create and add to the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Decimal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskPath</maml:name>
				<maml:description>
					<maml:para>Specifies paths to virtual disks you want to add to the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskStorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the storage format of the disks of the virtual machine. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemoryMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemoryGB instead.
Specifies the memory size in megabytes (MB) of the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemoryGB</maml:name>
				<maml:description>
					<maml:para>Specifies the memory size in gigabytes (GB) of the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumCpu</maml:name>
				<maml:description>
					<maml:para>Specifies the number of the virtual CPUs of the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Floppy</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to add a floppy drive to the new virtual machine.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CD</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to add a CD drive to the new virtual machine.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestId</maml:name>
				<maml:description>
					<maml:para>Specifies the guest operating system of the new virtual machine. The valid values for specific ESX versions are listed in the description of the VirtualMachineGuestOsIdentifier enumeration type in the vSphere API Reference available at http://www.vmware.com/support/developer/vc-sdk/. Depending on the hardware configuration of the host, some of the guest operating systems might be inapplicable.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AlternateGuestName</maml:name>
				<maml:description>
					<maml:para>Specifies the full OS name of the new virtual machine. Use this parameter if the GuestID parameter is set to otherGuest or otherGuest64.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NetworkName</maml:name>
				<maml:description>
					<maml:para>Specifies the networks to which you want to connect the new virtual machine. Specifying a distributed port group name is obsolete. Use the Portgroup parameter instead.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Portgroup</maml:name>
				<maml:description>
					<maml:para>Specifies standard or distributed port groups to which you want to connect the virtual machine. For each specified port group, a new network adapter is created.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualPortGroupBase[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HARestartPriority</maml:name>
				<maml:description>
					<maml:para>Specifies the HA restart priority of the new virtual machine. The valid values are Disabled, Low, Medium, High, and ClusterRestartPriority. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifiesing this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HARestartPriority</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAIsolationResponse</maml:name>
				<maml:description>
					<maml:para>Indicates whether the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The available values are AsSpecifiedByCluster, PowerOff, and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HAIsolationResponse</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:description>
					<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, PartiallyAutomated, AsSpecifiedByCluster, and Disabled. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsAutomationLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMSwapfilePolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the swapfile placement policy. The following values are valid:

InHostDataStore - Stores the swapfile in the datastore specified by the VMSwapfileDatastoreID property of the virtual machine host. If the VMSwapfileDatastoreID property is not set or indicates a datastore with insufficient free space, the swapfile is stored in the same directory as the virtual machine. This setting might degrade the VMotion performance.

WithVM - Stores the swapfile in the same directory as the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMSwapfilePolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Notes</maml:name>
				<maml:description>
					<maml:para>Provides a description of the new virtual machine. The alias of this parameter is Description.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-VM</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AdvancedOption</maml:name>
				<maml:description>
					<maml:para>Specifies advanced options for creating virtual machines. Accepts only SdrsVMDiskAntiAffinityRule and SdrsVMAntiAffinityRule objects.

The SdrsVMDiskAntiAffinityRule defines a Storage DRS intra-VM anti-affinity rule (vm disk anti-affinity rule). It is only applicable when creating a virtual machine or hard disk on a datastore cluster. An instance of the object is created by invoking its constructor. There are two constructors - &quot;public SdrsVMDiskAntiAffinityRule(param string[] diskIdentifier)&quot; and &quot;public SdrsVMDiskAntiAffinityRule(param HardDisk[] disk)&quot;. For the first constructor, &quot;diskIdentifier&quot; can be either the disk key or the index of the disk in the disk array. The specified disks (and the disk to which the rule is applied) are placed in an anti-affinity rule on a DatastoreCluster. Only one such rule is supported per a virtual machine. You can pass the instance to the AdvancedOption parameter of the New-VM or New-HardDisk cmdlets.

The SdrsVMAntiAffinityRule defines a Storage DRS inter-VM anti-affinity rule. It is only applicable when creating a virtual machine on a DatastoreCluster. An instance of the object is created by invoking its constructor. The constructor has one parameter - an array of virtual machines - &quot;public SdrsVMAntiAffinityRule(param VirtualMachine[] vm)&quot;. Then, you can pass the instance to the AdvancedOption parameter of the New-VM cmdlet. This will place the new virtual machine and the virtual machines specified in the constructor in an inter-VM anti-affinity rule on a DatastoreCluster.

The SDRS functionality is experimental.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AdvancedOption[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host on which you want to create the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new virtual machine. If you are registering or cloning an existing virtual machine, this parameter is not mandatory.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>ResourcePool</maml:name>
				<maml:description>
					<maml:para>Specifies where you want to place the new virtual machine. The parameter accepts VMHost, Cluster, ResourcePool, and VApp objects. If no value is specified, the virtual machine is added to the resource pool of its host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VApp</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated. Use the ResourcePool parameter instead.
Specifies the vApp where you want to create the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VApp</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the folder where you want to place the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Folder</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore where you want to place the new virtual machine. If a DatastoreCluster is passed to the Datastore parameter, the virtual machine is placed in the DatastoreCluster in an automated SDRS mode and with enabled intra-VM affinity rule (unless another rule is specified). You can specify a SDRS rule when creating the virtual machine in a DatastoreCluster by passing either a SdrsVMDiskAntiAffinityRule or SdrsVMAntiAffinityRule objects to the AdvancedOption parameter. These two rules are mutually exclusive.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >StorageResource</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskStorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the storage format of the disks of the virtual machine. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies a customization specification that is to be applied to the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpec</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HARestartPriority</maml:name>
				<maml:description>
					<maml:para>Specifies the HA restart priority of the new virtual machine. The valid values are Disabled, Low, Medium, High, and ClusterRestartPriority. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifiesing this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HARestartPriority</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAIsolationResponse</maml:name>
				<maml:description>
					<maml:para>Indicates whether the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The available values are AsSpecifiedByCluster, PowerOff, and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HAIsolationResponse</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:description>
					<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, PartiallyAutomated, AsSpecifiedByCluster, and Disabled. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsAutomationLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>LinkedClone</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to create a linked clone. When you set the LinkedClone parameter, the ReferenceSnapshot parameter becomes mandatory.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ReferenceSnapshot</maml:name>
				<maml:description>
					<maml:para>Specifies a source snapshot for the linked clone that you want to create. When you set the LinkedClone parameter, the ReferenceSnapshot parameter becomes mandatory.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Snapshot</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Notes</maml:name>
				<maml:description>
					<maml:para>Provides a description of the new virtual machine. The alias of this parameter is Description.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies a virtual machine to clone.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-VM</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AdvancedOption</maml:name>
				<maml:description>
					<maml:para>Specifies advanced options for creating virtual machines. Accepts only SdrsVMDiskAntiAffinityRule and SdrsVMAntiAffinityRule objects.

The SdrsVMDiskAntiAffinityRule defines a Storage DRS intra-VM anti-affinity rule (vm disk anti-affinity rule). It is only applicable when creating a virtual machine or hard disk on a datastore cluster. An instance of the object is created by invoking its constructor. There are two constructors - &quot;public SdrsVMDiskAntiAffinityRule(param string[] diskIdentifier)&quot; and &quot;public SdrsVMDiskAntiAffinityRule(param HardDisk[] disk)&quot;. For the first constructor, &quot;diskIdentifier&quot; can be either the disk key or the index of the disk in the disk array. The specified disks (and the disk to which the rule is applied) are placed in an anti-affinity rule on a DatastoreCluster. Only one such rule is supported per a virtual machine. You can pass the instance to the AdvancedOption parameter of the New-VM or New-HardDisk cmdlets.

The SdrsVMAntiAffinityRule defines a Storage DRS inter-VM anti-affinity rule. It is only applicable when creating a virtual machine on a DatastoreCluster. An instance of the object is created by invoking its constructor. The constructor has one parameter - an array of virtual machines - &quot;public SdrsVMAntiAffinityRule(param VirtualMachine[] vm)&quot;. Then, you can pass the instance to the AdvancedOption parameter of the New-VM cmdlet. This will place the new virtual machine and the virtual machines specified in the constructor in an inter-VM anti-affinity rule on a DatastoreCluster.

The SDRS functionality is experimental.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AdvancedOption[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host on which you want to create the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new virtual machine. If you are registering or cloning an existing virtual machine, this parameter is not mandatory.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>ResourcePool</maml:name>
				<maml:description>
					<maml:para>Specifies where you want to place the new virtual machine. The parameter accepts VMHost, Cluster, ResourcePool, and VApp objects. If no value is specified, the virtual machine is added to the resource pool of its host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VApp</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated. Use the ResourcePool parameter instead.
Specifies the vApp where you want to create the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VApp</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the folder where you want to place the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Folder</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore where you want to place the new virtual machine. If a DatastoreCluster is passed to the Datastore parameter, the virtual machine is placed in the DatastoreCluster in an automated SDRS mode and with enabled intra-VM affinity rule (unless another rule is specified). You can specify a SDRS rule when creating the virtual machine in a DatastoreCluster by passing either a SdrsVMDiskAntiAffinityRule or SdrsVMAntiAffinityRule objects to the AdvancedOption parameter. These two rules are mutually exclusive.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >StorageResource</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine template you want to use for the creation of the new virtual machine. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Template</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskStorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the storage format of the disks of the virtual machine. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies a customization specification that is to be applied to the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpec</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HARestartPriority</maml:name>
				<maml:description>
					<maml:para>Specifies the HA restart priority of the new virtual machine. The valid values are Disabled, Low, Medium, High, and ClusterRestartPriority. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifiesing this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HARestartPriority</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAIsolationResponse</maml:name>
				<maml:description>
					<maml:para>Indicates whether the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The available values are AsSpecifiedByCluster, PowerOff, and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HAIsolationResponse</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:description>
					<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, PartiallyAutomated, AsSpecifiedByCluster, and Disabled. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsAutomationLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-VM</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host on which you want to create the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new virtual machine. If you are registering or cloning an existing virtual machine, this parameter is not mandatory.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>ResourcePool</maml:name>
				<maml:description>
					<maml:para>Specifies where you want to place the new virtual machine. The parameter accepts VMHost, Cluster, ResourcePool, and VApp objects. If no value is specified, the virtual machine is added to the resource pool of its host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VApp</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated. Use the ResourcePool parameter instead.
Specifies the vApp where you want to create the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VApp</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the folder where you want to place the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Folder</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HARestartPriority</maml:name>
				<maml:description>
					<maml:para>Specifies the HA restart priority of the new virtual machine. The valid values are Disabled, Low, Medium, High, and ClusterRestartPriority. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifiesing this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HARestartPriority</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAIsolationResponse</maml:name>
				<maml:description>
					<maml:para>Indicates whether the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The available values are AsSpecifiedByCluster, PowerOff, and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HAIsolationResponse</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:description>
					<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, PartiallyAutomated, AsSpecifiedByCluster, and Disabled. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsAutomationLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMFilePath</maml:name>
				<maml:description>
					<maml:para>Specifies a path to the virtual machine you want to register.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-VM</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host on which you want to create the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new virtual machine. If you are registering or cloning an existing virtual machine, this parameter is not mandatory.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>ResourcePool</maml:name>
				<maml:description>
					<maml:para>Specifies where you want to place the new virtual machine. The parameter accepts VMHost, Cluster, ResourcePool, and VApp objects. If no value is specified, the virtual machine is added to the resource pool of its host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VIContainer</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Specifies the folder where you want to place the new virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Folder</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore where you want to place the new virtual machine. If a DatastoreCluster is passed to the Datastore parameter, the virtual machine is placed in the DatastoreCluster in an automated SDRS mode and with enabled intra-VM affinity rule (unless another rule is specified). You can specify a SDRS rule when creating the virtual machine in a DatastoreCluster by passing either a SdrsVMDiskAntiAffinityRule or SdrsVMAntiAffinityRule objects to the AdvancedOption parameter. These two rules are mutually exclusive.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >StorageResource</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskStorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the storage format of the disks of the virtual machine. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HARestartPriority</maml:name>
				<maml:description>
					<maml:para>Specifies the HA restart priority of the new virtual machine. The valid values are Disabled, Low, Medium, High, and ClusterRestartPriority. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifiesing this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HARestartPriority</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAIsolationResponse</maml:name>
				<maml:description>
					<maml:para>Indicates whether the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The available values are AsSpecifiedByCluster, PowerOff, and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HAIsolationResponse</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:description>
					<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, PartiallyAutomated, AsSpecifiedByCluster, and Disabled. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsAutomationLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>ContentLibraryItem</maml:name>
				<maml:description>
					<maml:para>Specifies the content library template to deploy the virtual machine from.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ContentLibraryItem</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdvancedOption</maml:name>
			<maml:description>
				<maml:para>Specifies advanced options for creating virtual machines. Accepts only SdrsVMDiskAntiAffinityRule and SdrsVMAntiAffinityRule objects.

The SdrsVMDiskAntiAffinityRule defines a Storage DRS intra-VM anti-affinity rule (vm disk anti-affinity rule). It is only applicable when creating a virtual machine or hard disk on a datastore cluster. An instance of the object is created by invoking its constructor. There are two constructors - &quot;public SdrsVMDiskAntiAffinityRule(param string[] diskIdentifier)&quot; and &quot;public SdrsVMDiskAntiAffinityRule(param HardDisk[] disk)&quot;. For the first constructor, &quot;diskIdentifier&quot; can be either the disk key or the index of the disk in the disk array. The specified disks (and the disk to which the rule is applied) are placed in an anti-affinity rule on a DatastoreCluster. Only one such rule is supported per a virtual machine. You can pass the instance to the AdvancedOption parameter of the New-VM or New-HardDisk cmdlets.

The SdrsVMAntiAffinityRule defines a Storage DRS inter-VM anti-affinity rule. It is only applicable when creating a virtual machine on a DatastoreCluster. An instance of the object is created by invoking its constructor. The constructor has one parameter - an array of virtual machines - &quot;public SdrsVMAntiAffinityRule(param VirtualMachine[] vm)&quot;. Then, you can pass the instance to the AdvancedOption parameter of the New-VM cmdlet. This will place the new virtual machine and the virtual machines specified in the constructor in an inter-VM anti-affinity rule on a DatastoreCluster.

The SDRS functionality is experimental.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">AdvancedOption[]</command:parameterValue>
			<dev:type>
				<maml:name>AdvancedOption[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host on which you want to create the new virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHost</command:parameterValue>
			<dev:type>
				<maml:name>VMHost</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Version</maml:name>
			<maml:description>
				<maml:para>Specifies the version of the new virtual machine. The valid values are v4, v7, v8, v9, v10, and v11. By default, the new virtual machine is created with the latest available version.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMVersion</command:parameterValue>
			<dev:type>
				<maml:name>VMVersion</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new virtual machine. If you are registering or cloning an existing virtual machine, this parameter is not mandatory.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>ResourcePool</maml:name>
			<maml:description>
				<maml:para>Specifies where you want to place the new virtual machine. The parameter accepts VMHost, Cluster, ResourcePool, and VApp objects. If no value is specified, the virtual machine is added to the resource pool of its host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VIContainer</command:parameterValue>
			<dev:type>
				<maml:name>VIContainer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VApp</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated. Use the ResourcePool parameter instead.
Specifies the vApp where you want to create the new virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VApp</command:parameterValue>
			<dev:type>
				<maml:name>VApp</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Specifies the folder where you want to place the new virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Folder</command:parameterValue>
			<dev:type>
				<maml:name>Folder</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore where you want to place the new virtual machine. If a DatastoreCluster is passed to the Datastore parameter, the virtual machine is placed in the DatastoreCluster in an automated SDRS mode and with enabled intra-VM affinity rule (unless another rule is specified). You can specify a SDRS rule when creating the virtual machine in a DatastoreCluster by passing either a SdrsVMDiskAntiAffinityRule or SdrsVMAntiAffinityRule objects to the AdvancedOption parameter. These two rules are mutually exclusive.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">StorageResource</command:parameterValue>
			<dev:type>
				<maml:name>StorageResource</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use DiskGB instead.
Specifies the size in megabytes (MB) of the disks that you want to create and add to the new virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int64[]</command:parameterValue>
			<dev:type>
				<maml:name>Int64[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>4096</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskGB</maml:name>
			<maml:description>
				<maml:para>Specifies the size in gigabytes (GB) of the disks that you want to create and add to the new virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Decimal[]</command:parameterValue>
			<dev:type>
				<maml:name>Decimal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskPath</maml:name>
			<maml:description>
				<maml:para>Specifies paths to virtual disks you want to add to the new virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskStorageFormat</maml:name>
			<maml:description>
				<maml:para>Specifies the storage format of the disks of the virtual machine. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualDiskStorageFormat</command:parameterValue>
			<dev:type>
				<maml:name>VirtualDiskStorageFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemoryMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemoryGB instead.
Specifies the memory size in megabytes (MB) of the new virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemoryGB</maml:name>
			<maml:description>
				<maml:para>Specifies the memory size in gigabytes (GB) of the new virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumCpu</maml:name>
			<maml:description>
				<maml:para>Specifies the number of the virtual CPUs of the new virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>1</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Floppy</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to add a floppy drive to the new virtual machine.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CD</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to add a CD drive to the new virtual machine.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestId</maml:name>
			<maml:description>
				<maml:para>Specifies the guest operating system of the new virtual machine. The valid values for specific ESX versions are listed in the description of the VirtualMachineGuestOsIdentifier enumeration type in the vSphere API Reference available at http://www.vmware.com/support/developer/vc-sdk/. Depending on the hardware configuration of the host, some of the guest operating systems might be inapplicable.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AlternateGuestName</maml:name>
			<maml:description>
				<maml:para>Specifies the full OS name of the new virtual machine. Use this parameter if the GuestID parameter is set to otherGuest or otherGuest64.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NetworkName</maml:name>
			<maml:description>
				<maml:para>Specifies the networks to which you want to connect the new virtual machine. Specifying a distributed port group name is obsolete. Use the Portgroup parameter instead.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Portgroup</maml:name>
			<maml:description>
				<maml:para>Specifies standard or distributed port groups to which you want to connect the virtual machine. For each specified port group, a new network adapter is created.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualPortGroupBase[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualPortGroupBase[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HARestartPriority</maml:name>
			<maml:description>
				<maml:para>Specifies the HA restart priority of the new virtual machine. The valid values are Disabled, Low, Medium, High, and ClusterRestartPriority. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifiesing this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HARestartPriority</command:parameterValue>
			<dev:type>
				<maml:name>HARestartPriority</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HAIsolationResponse</maml:name>
			<maml:description>
				<maml:para>Indicates whether the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The available values are AsSpecifiedByCluster, PowerOff, and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HAIsolationResponse</command:parameterValue>
			<dev:type>
				<maml:name>HAIsolationResponse</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DrsAutomationLevel</maml:name>
			<maml:description>
				<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, PartiallyAutomated, AsSpecifiedByCluster, and Disabled. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DrsAutomationLevel</command:parameterValue>
			<dev:type>
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMSwapfilePolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the swapfile placement policy. The following values are valid:

InHostDataStore - Stores the swapfile in the datastore specified by the VMSwapfileDatastoreID property of the virtual machine host. If the VMSwapfileDatastoreID property is not set or indicates a datastore with insufficient free space, the swapfile is stored in the same directory as the virtual machine. This setting might degrade the VMotion performance.

WithVM - Stores the swapfile in the same directory as the virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMSwapfilePolicy</command:parameterValue>
			<dev:type>
				<maml:name>VMSwapfilePolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Notes</maml:name>
			<maml:description>
				<maml:para>Provides a description of the new virtual machine. The alias of this parameter is Description.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OSCustomizationSpec</maml:name>
			<maml:description>
				<maml:para>Specifies a customization specification that is to be applied to the new virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">OSCustomizationSpec</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LinkedClone</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to create a linked clone. When you set the LinkedClone parameter, the ReferenceSnapshot parameter becomes mandatory.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReferenceSnapshot</maml:name>
			<maml:description>
				<maml:para>Specifies a source snapshot for the linked clone that you want to create. When you set the LinkedClone parameter, the ReferenceSnapshot parameter becomes mandatory.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Snapshot</command:parameterValue>
			<dev:type>
				<maml:name>Snapshot</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies a virtual machine to clone.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine template you want to use for the creation of the new virtual machine. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Template</command:parameterValue>
			<dev:type>
				<maml:name>Template</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMFilePath</maml:name>
			<maml:description>
				<maml:para>Specifies a path to the virtual machine you want to register.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>ContentLibraryItem</maml:name>
			<maml:description>
				<maml:para>Specifies the content library template to deploy the virtual machine from.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ContentLibraryItem</command:parameterValue>
			<dev:type>
				<maml:name>ContentLibraryItem</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created VirtualMachine object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myTargetVMHost = Get-VMHost -Name MyVMHost1
New-VM -Name MyVM1 -ResourcePool $myTargetVMHost -Datastore MyDatastore1 -NumCPU 2 -MemoryGB 4 -DiskGB 40 -NetworkName &quot;VM Network&quot; -Floppy -CD -DiskStorageFormat Thin -GuestID winNetDatacenterGuest</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine by specifying a target host, a target datastore, and a network to connect to, and configures the settings for the virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myCluster = Get-Cluster -Name MyCluster1
New-VM -Name MyVM1 -ResourcePool $myCluster</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine by specifying a cluster. The ResourcePool parameter accepts ResourcePool, Cluster, VApp, and standalone VMHost objects.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
$myCluster = Get-Cluster -Name MyCluster1
New-VM -Name MyVM1 -VMHost $vmhost -ResourcePool $myCluster -DiskGB 4 -MemoryGB 1</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine by specifying a cluster and explicitly selecting the host, instead of allowing auto-selection of a target host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
New-VM -Name MyVM1 -ResourePool $vmhost -DiskGB 40,100</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine with multiple disks.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
New-VM -Name MyVM1 -ResourcePool $vmhost -DiskPath &quot;[Storage1] WindowsXP/WindowsXP.vmdk&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine by specifying an existing disk.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 6 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
New-VM -Name MyVM1 -ResourcePool $vmhost -Version v4</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine by explicitly specifying the version of the virtual machine hardware through the Version parameter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 7 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myDatastore = Get-Datastore -Name MyDatastore1
$vmhost = Get-VMHost -Name MyVMHost1
New-VM -Name MyVM2 -VM MyVM1 -Datastore $myDatastore -VMHost $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new virtual machine named MyVM2 by cloning the MyVM1 virtual machine on the specified datastore and host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 8 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VM -VM MyVM1, MyVM2 -Location MyFolder1 -VMHost MyHost1</dev:code>
  			<dev:remarks>
				<maml:para>Copies the MyVM1 and MyVM2 virtual machines to the MyFolder1 folder on the MyHost1 host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 9 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myResourcePool = Get-ResourcePool -Name MyResourcePool1
$mySpecification = Get-OSCustomizationSpec -Name WindowsSpec
New-VM -VM MyVM1 -Name MyVM2 -OSCustomizationSpec $mySpecification -ResourcePool $myResourcePool</dev:code>
  			<dev:remarks>
				<maml:para>Clones the virtual machine MyVM1 to MyVM2 and applies a customization specification on the cloned virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 10 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myResourcePool = Get-ResourcePool -Name MyResourcePool1
$myTemplate = Get-Template -Name WindowsTemplate
$mySpecification = Get-OSCustomizationSpec -Name WindowsSpec
New-VM -Name MyVM2 -Template $myTemplate -ResourcePool $myResourcePool -OSCustomizationSpec $mySpecification</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine from the specified template and applies the specified customization specification.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 11 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>cd vmstores:\myserver@443\Datacenter\Storage1\MyVM1\
$vmxFile = Get-Item MyVM1.vmx
$vmhost = Get-VMHost -Name MyVMHost1
New-VM -VMHost $vmhost -VMFilePath $vmxFile.DatastoreFullPath</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the specified configuration file for the MyVM1 virtual machine and registers the MyVM1 virtual machine on the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 12 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
$myDatastoreCluster = Get-DatastoreCluster -Name MyStorageCluster1
New-VM -Name MyVM1 -DiskGB 40,40 -Datastore $myDatastoreCluster -ResourcePool $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine on a datastore cluster. By default, the new virtual machine has an intra-VM affinity rule.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 13 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
$myDatastoreCluster = Get-DatastoreCluster -Name MyStorageCluster1
$myAdvancedOption = New-Object &#39;VMware.VimAutomation.ViCore.Types.V1.DatastoreManagement.SdrsVMDiskAntiAffinityRule&#39; 1,2
New-VM -Name MyVM1 -DiskGB 40,40,40 -Datastore $myDatastoreCluster -AdvancedOption $myAdvancedOption -ResourcePool $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine on a datastore cluster. The machine has three hard disks.  For the first two disks, intra-VM anti-affinity rule is specified and they will be placed on a datastore different from the datastore cluster. Identifying the hard disk in the Intra-VM anti-affinity happens by indexing the disks starting from 1.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 14 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVM1 = Get-VM -Name WindowsXP
$myResourcePool = Get-ResourcePool -Name MyResourcePool1
$myAdvancedOption = New-Object &#39;VMware.VimAutomation.ViCore.Types.V1.DatastoreManagement.SdrsVMAntiAffinityRule&#39; $myVM1
$myDatastoreCluster = Get-DatastoreCluster -Name MyStorageCluster1
New-VM -Name MyVM1 -DiskGB 40,40,40 -Datastore $myDatastoreCluster -AdvancedOption $myAdvancedOption -ResourcePool $myResourcePool</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine on a datastore cluster and specifies a VM anti-affinity rule between the new virtual machine and an existing virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 15 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$mySourceVM = Get-VM -Name MySourceVM1
$vmhost = Get-VMHost -Name MyVMHost1
$hardDiskList = Get-HardDisk -VM $vm | select -First 2
$myDatastoreCluster = Get-DatastoreCluster -Name MyStorageCluster1
$myAdvancedOption = New-Object &#39;VMware.VimAutomation.ViCore.Types.V1.DatastoreManagement.SdrsVMDiskAntiAffinityRule&#39; $hardDiskList
New-VM -Name MyVM1 -VM $mySourceVM -Datastore $myDatastoreCluster -AdvancedOption $myAdvancedOption -ResourcePool $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Clones a virtual machine on a datastore cluster and specifies an intra-VM anti-affinity rule by using references to the hard disks of the source virtual machine. When you apply this rule to the AdvancedOption parameter of New-VM, the first and second disk of the new virtual machine will be placed on different datastores within the specified datastore cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 16 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$mySourceVM = Get-VM -Name MySourceVM1
$myVM1 = Get-VM -Name WindowsXP
$myAdvancedOption = New-Object &#39;VMware.VimAutomation.ViCore.Types.V1.DatastoreManagement.SdrsVMAntiAffinityRule&#39; $myVM1
$myDatastoreCluster = Get-DatastoreCluster -Name MyStorageCluster1
$vmhost = Get-VMHost -Name MyVMHost1
New-VM -Name MyVM2 -VM $mySourceVM -Datastore $myDatastoreCluster -AdvancedOption $myAdvancedOption -ResourcePool $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Clones a virtual machine on a datastore cluster and specifies a VM anti-afffinity rule between the new virtual machine and an existing virtual machine. When you apply this rule to the AdvancedOption parameter of New-VM, the new virtual machine and the WindowsXP virtual machine will be placed on different datastores within the specified datastore cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 17 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$mySourceTemplate = Get-Template -Name WindowsTemplate
$myDatastoreCluster = Get-DatastoreCluster -Name MyStorageCluster
$myAdvancedOption = New-Object &#39;VMware.VimAutomation.ViCore.Types.V1.DatastoreManagement.SdrsVMDiskAntiAffinityRule&#39; $hardDiskList
$vmhost = Get-VMHost -Name MyVMHost1
New-VM -Name MyVM1 -Template $mySourceTemplate -Datastore $myDatastoreCluster -AdvancedOption $myAdvancedOption -ResourcePool $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine from a template, specifies a VM anti-affinity rule, and stores the virtual machine on a specified datastore cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 18 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
$myVM = Get-VM -Name WindowsXP
$mySourceTemplate = Get-Template -Name WindowsTemplate
$myDatastoreCluster = Get-DatastoreCluster -Name MyStorageCluster1
$myAdvancedOption = New-Object &#39;VMware.VimAutomation.ViCore.Types.V1.DatastoreManagement.SdrsVMAntiAffinityRule&#39; $myVM
New-VM -Name VM -Template $mySourceTemplate -Datastore $myDatastoreCluster -AdvancedOption $myAdvancedOption -ResourcePool $vmhost</dev:code>
  			<dev:remarks>
				<maml:para>Creates a virtual machine from a template, specifies a VM anti-affinity rule, and stores the virtual machine on a specified datastore cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 19 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$mySourceVM = Get-VM -Name MySourceVM1
$myReferenceSnapshot = Get-Snapshot -VM $mySourceVM -Name &quot;InitialState&quot;
$vmhost = Get-VMHost -Name MyVMHost1
$myDatastore = Get-Datastore -Name MyDatastore1
New-VM -Name MyLinkedCloneVM1 -VM $mySourceVM -LinkedClone -ReferenceSnapshot $myReferenceSnapshot -ResourcePool $vmhost -Datastore $myDatastore</dev:code>
  			<dev:remarks>
				<maml:para>Creates a linked clone from the specified snapshot of the parent virtual machine. The linked clone is stored to the specified VM host and datastore.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 20 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myCluster = Get-Cluster -Name &quot;MyCluster&quot;
$myVDPortGroup = Get-VDPortgroup -Name &quot;MyVDPortGroup&quot;
$mySharedDatastore = Get-Datastore -Name &quot;MySharedDatastore&quot;
New-VM -Name MyVM -ResourcePool $myCluster -Portgroup $myVDPortGroup -DiskGB 40 -MemoryGB 4 -Datastore $mySharedDatastore</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new virtual machine with the specified configuration and connects it to the specified distributed port group.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VM.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VMGuestRoute</command:name>
		<maml:description>
			<maml:para>This cmdlet adds a new route to the routing table of the provided virtual machines and guests.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VMGuestRoute</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet is deprecated. Use Invoke-VMGuestScript instead.

This cmdlet adds a new route to the routing table of the provided virtual machines and guests. The cmdlet adds only persistent routes. For a list of supported operating systems, see the PowerCLI User&#39;s Guide.

To run this cmdlet against vCenter Server/ESX/ESXi versions earlier than 5.0, you need to meet the following requirements:
*You must run the cmdlet on the 32-bit version of Windows PowerShell.
*You must have access to the ESX that hosts the virtual machine over TCP port 902.
*For vCenter Server/ESX/ESXi versions earlier than 4.1, you need VirtualMachine.Interact.ConsoleInteract privilege. For vCenter Server/ESX/ESXi 4.1 and later, you need VirtualMachine.Interact.GuestControl privilege.

To run this cmdlet against vCenter Server/ESXi 5.0 and later, you need VirtualMachine.GuestOperations.Execute and VirtualMachine.GuestOperations.Modify privileges.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VMGuestRoute</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines to which you want to add the new route.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies a destination IP address for the new route.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >IPAddress</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Netmask</maml:name>
				<maml:description>
					<maml:para>Specifies a network mask for the new route.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Gateway</maml:name>
				<maml:description>
					<maml:para>Specifies a gateway for the new route.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >IPAddress</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Interface</maml:name>
				<maml:description>
					<maml:para>Specifies a network interface for the new route. For Linux guest operating systems, this parameter is mandatory.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Object</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMGuest</maml:name>
				<maml:description>
					<maml:para>Specifies the guests to which you want to add the new route.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuest[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ToolsWaitSecs</maml:name>
				<maml:description>
					<maml:para>Specifies the time in seconds to wait for a response from VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS. Do not use this parameter if the GuestUser and GuestPassword parameters are used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines to which you want to add the new route.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies a destination IP address for the new route.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IPAddress</command:parameterValue>
			<dev:type>
				<maml:name>IPAddress</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Netmask</maml:name>
			<maml:description>
				<maml:para>Specifies a network mask for the new route.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Gateway</maml:name>
			<maml:description>
				<maml:para>Specifies a gateway for the new route.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IPAddress</command:parameterValue>
			<dev:type>
				<maml:name>IPAddress</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Interface</maml:name>
			<maml:description>
				<maml:para>Specifies a network interface for the new route. For Linux guest operating systems, this parameter is mandatory.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMGuest</maml:name>
			<maml:description>
				<maml:para>Specifies the guests to which you want to add the new route.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuest[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuest[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ToolsWaitSecs</maml:name>
			<maml:description>
				<maml:para>Specifies the time in seconds to wait for a response from VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS. Do not use this parameter if the GuestUser and GuestPassword parameters are used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created VMGuestRoute object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Consider that New-VMGuestRoute might behave  inconsistently and create different types of routes depending on the OS type - Windows or Linux.

This cmdlet is not compatible with IPv6 environments.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VMGuestRoute -GuestUser user -GuestPassword pass2 -VM $vm -Destination &#39;192.168.100.10&#39; -Netmask &#39;255.255.255.255&#39; -Gateway &#39;10.23.112.58&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new guest route with the specified parameters.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VMGuestRoute.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMGuestRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMGuestRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VMHostAccount</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new host user or group account.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VMHostAccount</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new host user or group account using the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VMHostAccount</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies an ID for the new host account.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Specifies a password for the new host account.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Provide a description of the new host account. The maximum length of the text is 255 symbols.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>UserAccount</maml:name>
				<maml:description>
					<maml:para>Indicates that the new host account is a user account.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AssignGroups</maml:name>
				<maml:description>
					<maml:para>If the UserAccount parameter is set to $true, use AssignGroups to specify the groups to which the newly created user belongs.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GrantShellAccess</maml:name>
				<maml:description>
					<maml:para>Indicates that the new account is allowed to access the ESX shell.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer. 
Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-VMHostAccount</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies an ID for the new host account.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GroupAccount</maml:name>
				<maml:description>
					<maml:para>Indicates that the new host account is a group account. Starting with ESXi 5.1, this parameter is not supported.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AssignUsers</maml:name>
				<maml:description>
					<maml:para>If the GroupAccount parameter is set to $true, use AssignUsers to specify the users that belong to the newly created group account.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer. 
Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Id</maml:name>
			<maml:description>
				<maml:para>Specifies an ID for the new host account.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Specifies a password for the new host account.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Provide a description of the new host account. The maximum length of the text is 255 symbols.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserAccount</maml:name>
			<maml:description>
				<maml:para>Indicates that the new host account is a user account.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AssignGroups</maml:name>
			<maml:description>
				<maml:para>If the UserAccount parameter is set to $true, use AssignGroups to specify the groups to which the newly created user belongs.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GrantShellAccess</maml:name>
			<maml:description>
				<maml:para>Indicates that the new account is allowed to access the ESX shell.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer. 
Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupAccount</maml:name>
			<maml:description>
				<maml:para>Indicates that the new host account is a group account. Starting with ESXi 5.1, this parameter is not supported.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AssignUsers</maml:name>
			<maml:description>
				<maml:para>If the GroupAccount parameter is set to $true, use AssignUsers to specify the users that belong to the newly created group account.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created HostUserAccount or HostGroupAccount object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If the GroupAccount parameter is specified, the cmdlet returns the newly created HostGroupAccount object. If the UserAccount parameter is specified, the cmdlet returns the newly created HostUserAccount object.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Starting with ESXi 5.1, you cannot create group host accounts.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VMHostAccount -ID MyUser1 -Password MyPassword1 -UserAccount</dev:code>
  			<dev:remarks>
				<maml:para>Creates a user account with a specified user ID and password. The user account is created on the default server.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myUser1 = Get-VMHostAccount -ID MyUser1 -User
New-VMHostAccount -Id MyGroup1 -GroupAccount -AssignUsers $myUser1</dev:code>
  			<dev:remarks>
				<maml:para>Creates a group account with a specified ID and assigns a specified user to the group account. Starting with ESXi 5.1, you cannot create group host accounts.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VMHostAccount.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VMHostNetworkAdapter</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new HostVirtualNIC (Service Console or VMKernel) on the specified host.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VMHostNetworkAdapter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new HostVirtualNIC (Service Console or VMKernel) on the specified host. Creates a port group with a name specified by the PortGroup parameter on the virtual switch passed through the VirtualSwitch parameter. Adds either a Console NIC if ConsoleNIC is set, or a VMKernel NIC otherwise.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VMHostNetworkAdapter</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host to which you want to add the new adapter. This parameter is mandatory when creating a network adapter on a distributed switch.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>PortGroup</maml:name>
				<maml:description>
					<maml:para>Specifies the port group to which you want to add the new adapter. If a distributed switch is passed to the VirtualSwitch parameter, an existing port group name should be specified. For standard virtual switches, if the port group is non-existent, a new port group with the specified name will be created and the new adapter will be added to the port group.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PortId</maml:name>
				<maml:description>
					<maml:para>Specifies the port of the specified distributed switch to which you want to connect the network adapter. Use this parameter only if a distributed switch is passed to the VirtualSwitch parameter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "3" >
				<maml:name>VirtualSwitch</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual switch to which you want to add the new network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualSwitchBase</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>IP</maml:name>
				<maml:description>
					<maml:para>Specifies an IP address for the new network adapter. All IP addresses are specified using IPv4 dot notation. If IP is not specified, DHCP mode is enabled. For VMKernel network adapters, the DHCP mode is supported only on vCenter Server 4.1, ESX 4.1, and later.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "5" >
				<maml:name>SubnetMask</maml:name>
				<maml:description>
					<maml:para>Specifies a subnet mask for the new network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "6" >
				<maml:name>Mac</maml:name>
				<maml:description>
					<maml:para>Specifies a media access control (MAC) address for the new virtual network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Mtu</maml:name>
				<maml:description>
					<maml:para>Specifies the MTU size. This parameter is supported only on ESX/vCenter Server 4.1 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ConsoleNic</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that you want to create a service console virtual network adapter. If the value is $false, indicates that you want to create a virtual host/VMkernel network adapter. Not supported on ESXi.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMotionEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to use the new virtual host/VMKernel network adapter for VMotion.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>FaultToleranceLoggingEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that the network adapter is enabled for Fault Tolerance (FT) logging. This parameter is supported only on ESX/vCenter Server 4.1 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IPv6ThroughDhcp</maml:name>
				<maml:description>
					<maml:para>Indicates that the IPv6 address is obtained through DHCP.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AutomaticIPv6</maml:name>
				<maml:description>
					<maml:para>Indicates that the IPv6 address is obtained through a router advertisement.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IPv6</maml:name>
				<maml:description>
					<maml:para>Specifies multiple static addresses using the following format: &lt;IPv6&gt;/&lt;subnet_prefix_length&gt; or &lt;IPv6&gt;. If you skip &lt;subnet_prefix_length&gt;, the default value of 64 is used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ManagementTrafficEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to enable the network adapter for management traffic. This parameter is supported only on ESX/ESXi/vCenter Server 4.1 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VsanTrafficEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that Virtual SAN traffic is enabled on this network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>The Server parameter is required when the host is specified by name. In this case, the host with the specified name is searched for on the specified Servers and a network adapter is added to it. If a VMHost object is passed to the VMHost parameter, the Server parameter is not used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host to which you want to add the new adapter. This parameter is mandatory when creating a network adapter on a distributed switch.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHost</command:parameterValue>
			<dev:type>
				<maml:name>VMHost</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>PortGroup</maml:name>
			<maml:description>
				<maml:para>Specifies the port group to which you want to add the new adapter. If a distributed switch is passed to the VirtualSwitch parameter, an existing port group name should be specified. For standard virtual switches, if the port group is non-existent, a new port group with the specified name will be created and the new adapter will be added to the port group.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PortId</maml:name>
			<maml:description>
				<maml:para>Specifies the port of the specified distributed switch to which you want to connect the network adapter. Use this parameter only if a distributed switch is passed to the VirtualSwitch parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="3">
			<maml:name>VirtualSwitch</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual switch to which you want to add the new network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualSwitchBase</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitchBase</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>IP</maml:name>
			<maml:description>
				<maml:para>Specifies an IP address for the new network adapter. All IP addresses are specified using IPv4 dot notation. If IP is not specified, DHCP mode is enabled. For VMKernel network adapters, the DHCP mode is supported only on vCenter Server 4.1, ESX 4.1, and later.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>SubnetMask</maml:name>
			<maml:description>
				<maml:para>Specifies a subnet mask for the new network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6">
			<maml:name>Mac</maml:name>
			<maml:description>
				<maml:para>Specifies a media access control (MAC) address for the new virtual network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Mtu</maml:name>
			<maml:description>
				<maml:para>Specifies the MTU size. This parameter is supported only on ESX/vCenter Server 4.1 and later.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConsoleNic</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that you want to create a service console virtual network adapter. If the value is $false, indicates that you want to create a virtual host/VMkernel network adapter. Not supported on ESXi.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMotionEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to use the new virtual host/VMKernel network adapter for VMotion.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FaultToleranceLoggingEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that the network adapter is enabled for Fault Tolerance (FT) logging. This parameter is supported only on ESX/vCenter Server 4.1 and later.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IPv6ThroughDhcp</maml:name>
			<maml:description>
				<maml:para>Indicates that the IPv6 address is obtained through DHCP.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AutomaticIPv6</maml:name>
			<maml:description>
				<maml:para>Indicates that the IPv6 address is obtained through a router advertisement.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IPv6</maml:name>
			<maml:description>
				<maml:para>Specifies multiple static addresses using the following format: &lt;IPv6&gt;/&lt;subnet_prefix_length&gt; or &lt;IPv6&gt;. If you skip &lt;subnet_prefix_length&gt;, the default value of 64 is used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagementTrafficEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to enable the network adapter for management traffic. This parameter is supported only on ESX/ESXi/vCenter Server 4.1 and later.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VsanTrafficEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that Virtual SAN traffic is enabled on this network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>The Server parameter is required when the host is specified by name. In this case, the host with the specified name is searched for on the specified Servers and a network adapter is added to it. If a VMHost object is passed to the VMHost parameter, the Server parameter is not used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created HostVirtualNic object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>To configure IPv6 settings, you must be working on ESX 4.1 or later and IPv6 must be enabled on the ESX system.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
$myVirtualSwitch = Get-VirtualSwitch -VMHost $vmhost -Name MyVirtualSwitch1
New-VMHostNetworkAdapter -VMHost $vmhost -PortGroup MyVMKernelPortGroup1 -VirtualSwitch $myVirtualSwitch -Mtu 4000</dev:code>
  			<dev:remarks>
				<maml:para>Creates a VMKernel port group at the MyVirtualSwitch1 virtual switch. The IP address is obtained via DHCP.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
$myVirtualSwitch = Get-VirtualSwitch -VMHost $vmhost -Name MyVirtualSwitch1
New-VMHostNetworkAdapter -VMHost $vmhost -PortGroup MyVMKernelPortGroup1 -VirtualSwitch $myVirtualSwitch -IP 192.168.168.110 -SubnetMask 255.255.255.0</dev:code>
  			<dev:remarks>
				<maml:para>Creates a VMKernel port group at the MyVirtualSwitch1 virtual switch and assigns a static IP address.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
$myVirtualSwitch = Get-VirtualSwitch -VMHost $vmhost -Name MyVirtualSwitch1
New-VMHostNetworkAdapter -VMHost $vmhost -VirtualSwitch $myVirtualSwitch -PortGroup MyVMKernelPortGroup1 -IP 192.168.0.1 -SubnetMask 255.255.255.0 -IPv6 &quot;0200:2342::1/32&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Creates a VMKernel NIC that has an IPv4 address and an IPv6 address.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
$myVirtualSwitch = Get-VirtualSwitch -VMHost $vmhost -Name MyVirtualSwitch1
New-VMHostNetworkAdapter -VMHost $vmhost -VirtualSwitch $myVirtualSwitch -PortGroup MyVMKernelPortGroup1 -IP 192.168.0.1 -SubnetMask 255.255.255.0 -AutomaticIPv6</dev:code>
  			<dev:remarks>
				<maml:para>Creates a VMKernel NIC that obtains IPv6 automatically (by router advertisement) and takes the desired IPv4 address.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
$myVirtualSwitch = Get-VirtualSwitch -VMHost $vmhost -Name MyVirtualSwitch1
New-VMHostNetworkAdapter -VMHost $vmhost -VirtualSwitch $myVirtualSwitch -PortGroup MyVMKernelPortGroup1 -IPv6ThroughDhcp</dev:code>
  			<dev:remarks>
				<maml:para>Creates a VMKernel NIC that obtains the IPv4 and IPv6 addresses by DHCP.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 6 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost = Get-VMHost -Name MyVMHost1
$myVirtualSwitch = Get-VirtualSwitch -VMHost $vmhost -Name MyVirtualSwitch1
New-VMHostNetworkAdapter -VMHost $vmhost -PortGroup MyConsolePortGroup1 -VirtualSwitch $myVirtualSwitch -ConsoleNic</dev:code>
  			<dev:remarks>
				<maml:para>Creates a Service Console port group at the vSwitch virtual switch. The IP address is obtained via DHCP.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 7 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVMHost = Get-VMHost -Name &quot;MyVMHost&quot;
$myVDSwitch = Get-VDSwitch -Name &quot;MyVDSwitch&quot;
New-VMHostNetworkAdapter -VMHost $myVMHost -PortGroup &quot;MyVDPortgroup&quot; -VirtualSwitch $myVDSwitch -IP 192.168.0.50 -SubnetMask 255.255.255.0</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new VMKernel network adapter and connects it to the specified port group on the specified distributed switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 8 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVMHost = Get-VMHost -Name &quot;MyVMHost&quot;
$myVDSwitch = Get-VDSwitch -Name &quot;MyVDSwitch&quot;
New-VMHostNetworkAdapter -VMHost $myVMHost -VirtualSwitch $myVDSwitch -PortId 100 -IP 192.168.0.50 -SubnetMask 255.255.255.0</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new VMKernel network adapter and connects it to a specified port on a specified distributed switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VMHostNetworkAdapter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostNetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostNetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VMHostProfile</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new  host profile based on a reference host.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VMHostProfile</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new host profile based on a reference host.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VMHostProfile</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a name for the new host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>ReferenceHost</maml:name>
				<maml:description>
					<maml:para>Specifies the reference host, on which the new virtual machine host profile is based.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Provides a description for the new host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CompatibilityMode</maml:name>
				<maml:description>
					<maml:para>If you are connected to a vCenter Server/ESX 5.0 or later, use this parameter to indicate that you want the new profile to be compatible with hosts running ESX/vCenter Server versions earlier than 5.0.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a name for the new host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>ReferenceHost</maml:name>
			<maml:description>
				<maml:para>Specifies the reference host, on which the new virtual machine host profile is based.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHost</command:parameterValue>
			<dev:type>
				<maml:name>VMHost</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Provides a description for the new host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompatibilityMode</maml:name>
			<maml:description>
				<maml:para>If you are connected to a vCenter Server/ESX 5.0 or later, use this parameter to indicate that you want the new profile to be compatible with hosts running ESX/vCenter Server versions earlier than 5.0.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The newly created VMHostProfile object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$h = Get-VMHost 10.23.134.133

New-VMHostProfile -Name testProfile -Description &quot;This is my first test profile.&quot; -ReferenceHost $h</dev:code>
  			<dev:remarks>
				<maml:para>Creates a profile based on the virtual machine host with an IP address 10.23.134.133.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VMHostProfile.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Invoke-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Test-VMHostProfileCompliance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>New-VMHostRoute</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new route in the routing table of a host.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>VMHostRoute</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet creates a new route in the routing table of a host.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-VMHostRoute</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host for which you want to create a new route.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Specifies a destination IP address for the new route.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >IPAddress</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Gateway</maml:name>
				<maml:description>
					<maml:para>Specifies a gateway IP address for the new route.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >IPAddress</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PrefixLength</maml:name>
				<maml:description>
					<maml:para>Specifies the prefix length of the destination IP address. For IPv4, the valid values are from 0 to 32, and for IPv6 - from 0 to 128.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host for which you want to create a new route.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Specifies a destination IP address for the new route.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IPAddress</command:parameterValue>
			<dev:type>
				<maml:name>IPAddress</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Gateway</maml:name>
			<maml:description>
				<maml:para>Specifies a gateway IP address for the new route.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IPAddress</command:parameterValue>
			<dev:type>
				<maml:name>IPAddress</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrefixLength</maml:name>
			<maml:description>
				<maml:para>Specifies the prefix length of the destination IP address. For IPv4, the valid values are from 0 to 32, and for IPv6 - from 0 to 128.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The one or more newly created VMHostRoute objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Supported only on ESX 4.1/ vCenter Server 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>New-VMHostRoute -VMHost 10.23.114.195 -Destination 192.168.103.102 -PrefixLength 32 -Gateway 10.23.84.53</dev:code>
  			<dev:remarks>
				<maml:para>Creates a route for the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/New-VMHostRoute.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Open-VMConsoleWindow</command:name>
		<maml:description>
			<maml:para>This cmdlet opens a window to the virtual machine&#39;s console.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Open</command:verb>
		<command:noun>VMConsoleWindow</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet opens a window to the virtual machine&#39;s console. The window is opened in a Web page in the browser configured in the VMConsoleWindowBrowser setting (in Set-PowerCLIConfiguration), or in the default Web browser, if the setting is not configured.

If the default browser is not 32-bit, you must configure a 32-bit browser to be used by this cmdlet. This configuration is done through the Set-PowerCLIConfiguration cmdlet, by specifying the VMConsoleWindowBrowser setting and providing the full path to a browser&#39;s executable file. The officially supported browsers are listed on the VMware site, under the VMRC distributable (which is used to display the virtual machine&#39;s console).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Open-VMConsoleWindow</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines for which to open a remote console. Supports vCloud and vSphere virtual machines.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >RemoteConsoleVM[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>FullScreen</maml:name>
				<maml:description>
					<maml:para>If specified, opens the virtual machine console window in full screen mode.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>UrlOnly</maml:name>
				<maml:description>
					<maml:para>If specified, the cmdlet returns the URL for opening a console window to the virtual machine, without opening the console window.

Note: The URL is valid for 30 seconds. After 30 seconds, the screen authentication ticket contained in the URL expires.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems or cloud server instances on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIConnection[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines for which to open a remote console. Supports vCloud and vSphere virtual machines.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">RemoteConsoleVM[]</command:parameterValue>
			<dev:type>
				<maml:name>RemoteConsoleVM[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FullScreen</maml:name>
			<maml:description>
				<maml:para>If specified, opens the virtual machine console window in full screen mode.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UrlOnly</maml:name>
			<maml:description>
				<maml:para>If specified, the cmdlet returns the URL for opening a console window to the virtual machine, without opening the console window.

Note: The URL is valid for 30 seconds. After 30 seconds, the screen authentication ticket contained in the URL expires.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems or cloud server instances on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIConnection[]</command:parameterValue>
			<dev:type>
				<maml:name>VIConnection[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>A Web browser window displaying a remote console to the specified virtual machine</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>The VM parameter accepts powered-on vSphere and vCloud Director virtual machines.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-CIVM myVM | Open-VMConsoleWindow -FullScreen</dev:code>
  			<dev:remarks>
				<maml:para>Opens the console of the specified virtual machine in full screen mode.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Open-VMConsoleWindow.html</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-AdvancedSetting</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified advanced setting.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>AdvancedSetting</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified advanced setting.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-AdvancedSetting</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>AdvancedSetting</maml:name>
				<maml:description>
					<maml:para>Specifies the advanced settings you want to remove.

Note: You can only remove advanced settings from virtual machines in ESXi or vCenter Server environments version 5.5 or later.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AdvancedSetting[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>AdvancedSetting</maml:name>
			<maml:description>
				<maml:para>Specifies the advanced settings you want to remove.

Note: You can only remove advanced settings from virtual machines in ESXi or vCenter Server environments version 5.5 or later.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">AdvancedSetting[]</command:parameterValue>
			<dev:type>
				<maml:name>AdvancedSetting[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This cmdlet is not applicable for VMHost entities.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AdvancedSetting -Entity (Get-Cluster -Name Cluster) | Remove-AdvancedSetting -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Removes the advanced settings of the cluster named Cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-AdvancedSetting.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-AlarmAction</command:name>
		<maml:description>
			<maml:para>This cmdlet removes an alarm action.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>AlarmAction</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes an alarm action.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-AlarmAction</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>AlarmAction</maml:name>
				<maml:description>
					<maml:para>Specifies the alarm actions you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AlarmAction[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>AlarmAction</maml:name>
			<maml:description>
				<maml:para>Specifies the alarm actions you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">AlarmAction[]</command:parameterValue>
			<dev:type>
				<maml:name>AlarmAction[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmDefinition -Name &quot;Alarm1&quot; | Get-AlarmAction | Remove-AlarmAction -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Removes all actions for an alarm definition.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-AlarmAction.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-AlarmActionTrigger</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the alarm action triggers.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>AlarmActionTrigger</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the selected alarm action triggers.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-AlarmActionTrigger</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>AlarmActionTrigger</maml:name>
				<maml:description>
					<maml:para>Specifies the alarm action triggers you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AlarmActionTrigger[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>AlarmActionTrigger</maml:name>
			<maml:description>
				<maml:para>Specifies the alarm action triggers you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">AlarmActionTrigger[]</command:parameterValue>
			<dev:type>
				<maml:name>AlarmActionTrigger[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmDefinition -Name &quot;Alarm1&quot; | Get-AlarmAction | Get-AlarmActionTrigger | select -First 1 | Remove-AlarmActionTrigger -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Removes the first action trigger found for an alarm definition.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-AlarmActionTrigger.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-CDDrive</command:name>
		<maml:description>
			<maml:para>This cmdlet removes virtual CD drives from their locations.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>CDDrive</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes virtual CD drives from their locations.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-CDDrive</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>CD</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual CD drives you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >CDDrive[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>CD</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual CD drives you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CDDrive[]</command:parameterValue>
			<dev:type>
				<maml:name>CDDrive[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$cd = Get-CDDrive -VM $vm -Template $template

Remove-CDDrive -CD $cd</dev:code>
  			<dev:remarks>
				<maml:para>Removes all CD drives for the specified virtual machines and templates.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-CDDrive.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-Cluster</command:name>
		<maml:description>
			<maml:para>This cmdlet deletes the specified clusters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Cluster</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet deletes the specified clusters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-Cluster</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Specifies the clusters you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Cluster[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Specifies the clusters you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Cluster[]</command:parameterValue>
			<dev:type>
				<maml:name>Cluster[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$cluster =  New-Cluster -Name Cluster -Location Datacenter

Remove-Cluster $cluster -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Creates and then removes, without asking for user confirmation, the Custer cluster on the Datacenter datacenter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-Cluster.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-CustomAttribute</command:name>
		<maml:description>
			<maml:para>This cmdlet removes custom attributes.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>CustomAttribute</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes custom attributes.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-CustomAttribute</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>CustomAttribute</maml:name>
				<maml:description>
					<maml:para>Specifies the custom attributes you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >CustomAttribute[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>CustomAttribute</maml:name>
			<maml:description>
				<maml:para>Specifies the custom attributes you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CustomAttribute[]</command:parameterValue>
			<dev:type>
				<maml:name>CustomAttribute[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-CustomAttribute -CustomAttribute &quot;CompanyID&quot;, &quot;Owner&quot; -Server $agent007</dev:code>
  			<dev:remarks>
				<maml:para>Removes the CompanyID and Owner custom attributes from the server stored in the $agent007 variable.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-CustomAttribute.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Annotation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Annotation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-Datacenter</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified datacenters from their locations.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Datacenter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified datacenters and their children objects from their locations.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-Datacenter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Datacenter</maml:name>
				<maml:description>
					<maml:para>Specifies the datacenters you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datacenter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Datacenter</maml:name>
			<maml:description>
				<maml:para>Specifies the datacenters you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Datacenter[]</command:parameterValue>
			<dev:type>
				<maml:name>Datacenter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-Datacenter Datacenter</dev:code>
  			<dev:remarks>
				<maml:para>Removes the Datacenter datacenter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$task = Remove-Datacenter Datacenter -RunAsync</dev:code>
  			<dev:remarks>
				<maml:para>Asynchronously removes Datacenter08.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-Datacenter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-Datastore</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified datastores from their locations.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Datastore</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified datastores from their locations. The cmdlet permanently deletes the content of the removed datastores, unless they are shared (NFS).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-Datastore</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastores you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datastore[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host to which the datastore you want to remove belongs.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastores you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Datastore[]</command:parameterValue>
			<dev:type>
				<maml:name>Datastore[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host to which the datastore you want to remove belongs.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHost</command:parameterValue>
			<dev:type>
				<maml:name>VMHost</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-Datastore -Datastore Datastore -VMHost 10.23.112.234 -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Removes the Datastore datastore from the host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-Datastore.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-DatastoreCluster</command:name>
		<maml:description>
			<maml:para>This cmdlet deletes the specified datastore clusters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>DatastoreCluster</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet deletes the specified datastore clusters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-DatastoreCluster</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>DatastoreCluster</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore cluster that you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DatastoreCluster[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>DatastoreCluster</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore cluster that you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DatastoreCluster[]</command:parameterValue>
			<dev:type>
				<maml:name>DatastoreCluster[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-DatastoreCluster -Name &#39;MyDatastoreCluster&#39; | Remove-DatastoreCluster -Confirm $false</dev:code>
  			<dev:remarks>
				<maml:para>Removes the specified datastore cluster without asking for confirmation.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-DatastoreCluster.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-DrsRule</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified DRS rules.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>DrsRule</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified DRS rules.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-DrsRule</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Rule</maml:name>
				<maml:description>
					<maml:para>Specifies the DRS rules you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DrsRule[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Rule</maml:name>
			<maml:description>
				<maml:para>Specifies the DRS rules you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DrsRule[]</command:parameterValue>
			<dev:type>
				<maml:name>DrsRule[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$rules = Get-DrsRule -Cluster $cluster -Name &quot;*Rule1*&quot;

Remove-DrsRule $rules -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Removes the DRS rules for the $cluster cluster, whose names contain &quot;Rule1&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-DrsRule.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-FloppyDrive</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the virtual floppy drives from their locations.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>FloppyDrive</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the virtual floppy drives from their locations.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-FloppyDrive</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Floppy</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual floppy drives you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >FloppyDrive[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Floppy</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual floppy drives you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">FloppyDrive[]</command:parameterValue>
			<dev:type>
				<maml:name>FloppyDrive[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$floppy = Get-FloppyDrive -VM VM

Remove-FloppyDrive -Floppy $floppy</dev:code>
  			<dev:remarks>
				<maml:para>Removes the floppy drive of the virtual machine named VM.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-FloppyDrive.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-Folder</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified folders from their locations.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Folder</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified folders and their children objects from their locations.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-Folder</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Folder</maml:name>
				<maml:description>
					<maml:para>Specifies the folders you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Folder[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DeletePermanently</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to delete from the disk any virtual machines contained in the specified folder, and not only to remove them from the inventory. This parameter is supported only for VirtualMachine folders.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Folder</maml:name>
			<maml:description>
				<maml:para>Specifies the folders you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Folder[]</command:parameterValue>
			<dev:type>
				<maml:name>Folder[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeletePermanently</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to delete from the disk any virtual machines contained in the specified folder, and not only to remove them from the inventory. This parameter is supported only for VirtualMachine folders.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-Folder -Folder &quot;testFolder&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Removes a folder by name.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Folder -Name &quot;testFolder&quot; | Remove-Folder</dev:code>
  			<dev:remarks>
				<maml:para>Removes a folder by object.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Folder -Name &quot;testFolder&quot; | Remove-Folder -DeletePermanently</dev:code>
  			<dev:remarks>
				<maml:para>Permanently removes a folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-Folder.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-HardDisk</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified virtual hard disks.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>HardDisk</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified virtual hard disks.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-HardDisk</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HardDisk</maml:name>
				<maml:description>
					<maml:para>Specifies the hard disks you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HardDisk[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DeletePermanently</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to delete the hard disks not only from the inventory, but from the datastore as well.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HardDisk</maml:name>
			<maml:description>
				<maml:para>Specifies the hard disks you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HardDisk[]</command:parameterValue>
			<dev:type>
				<maml:name>HardDisk[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeletePermanently</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to delete the hard disks not only from the inventory, but from the datastore as well.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-HardDisk -VM $vm | Remove-HardDisk</dev:code>
  			<dev:remarks>
				<maml:para>Removes the hard disks of the virtual machine stored in the $vm variable.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$hdd = Get-HardDisk -VM &#39;MyVM&#39; -Name &#39;Hard disk 4&#39;
Remove-HardDisk -HardDisk $hdd</dev:code>
  			<dev:remarks>
				<maml:para>Removes the &#39;Hard disk 4&#39; hard disk of the &#39;MyVM&#39; virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-HardDisk.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Copy-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-Inventory</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified inventory items from their locations.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Inventory</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified inventory items and their children from their locations.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-Inventory</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Item</maml:name>
				<maml:description>
					<maml:para>Specifies the inventory items you want to remove. This parameter accepts Folder, ResourcePool, Datacenter, VirtualMachine, VMHost, Cluster, Template, and VApp objects.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >InventoryItem[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Item</maml:name>
			<maml:description>
				<maml:para>Specifies the inventory items you want to remove. This parameter accepts Folder, ResourcePool, Datacenter, VirtualMachine, VMHost, Cluster, Template, and VApp objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">InventoryItem[]</command:parameterValue>
			<dev:type>
				<maml:name>InventoryItem[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Folder, ResourcePool, Datacenter, VirtualMachine, VMHost, Cluster, Template, VApp</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Folder Folder| Get-Inventory -NoRecursion | Remove-Inventory</dev:code>
  			<dev:remarks>
				<maml:para>Removes all objects from the Folder folder.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-Inventory.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Inventory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Inventory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-IScsiHbaTarget</command:name>
		<maml:description>
			<maml:para>This cmdlet removes targets from their iSCSI HBAs.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>IScsiHbaTarget</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes targets from their iSCSI HBAs.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-IScsiHbaTarget</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Target</maml:name>
				<maml:description>
					<maml:para>Specifies the iSCSI HBA targets you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >IScsiHbaTarget[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Target</maml:name>
			<maml:description>
				<maml:para>Specifies the iSCSI HBA targets you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IScsiHbaTarget[]</command:parameterValue>
			<dev:type>
				<maml:name>IScsiHbaTarget[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-IScsiHbaTarget -Address 10.23.84.73 -Type Send | Remove-IScsiHbaTarget</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves and removes the targets of type Send on the specified address.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-IScsiHbaTarget -Target (Get-IScsiHbaTarget -Address 10.23.84.73)</dev:code>
  			<dev:remarks>
				<maml:para>Removes the specified iSCSI HBA targets.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-IScsiHbaTarget.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostHba</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostHba</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-NetworkAdapter</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the virtual network adapters from their locations.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>NetworkAdapter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the virtual network adapters from their locations.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-NetworkAdapter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>NetworkAdapter</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual network adapters you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >NetworkAdapter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>NetworkAdapter</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual network adapters you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">NetworkAdapter[]</command:parameterValue>
			<dev:type>
				<maml:name>NetworkAdapter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$nic = Get-NetworkAdapter -VM VM

Remove-NetworkAdapter -NetworkAdapter $nic</dev:code>
  			<dev:remarks>
				<maml:para>Removes the network adapter of the VM virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-NetworkAdapter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-OSCustomizationNicMapping</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified OS customization NIC mappings.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>OSCustomizationNicMapping</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified OS customization NIC mappings.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-OSCustomizationNicMapping</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>OSCustomizationNicMapping</maml:name>
				<maml:description>
					<maml:para>Specifies the OSCustomizationNicMapping objects you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OSCustomizationNicMapping[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>OSCustomizationNicMapping</maml:name>
			<maml:description>
				<maml:para>Specifies the OSCustomizationNicMapping objects you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OSCustomizationNicMapping[]</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationNicMapping[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$nicMapping = Get-OSCustomization MyCustomizationSpec | Get-OSCustomizationNicMapping
Remove-OSCustomizationNicMapping $nicMapping -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Removes the NIC mappings of the specified OS customization spec without asking for confirmation.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-OSCustomizationNicMapping.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-OSCustomizationNicMapping</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-OSCustomizationNicMapping</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OSCustomizationNicMapping</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-OSCustomizationSpec</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified OS customization specifications.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>OSCustomizationSpec</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified OS customization specifications.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-OSCustomizationSpec</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies the customization specifications you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OSCustomizationSpec[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>OSCustomizationSpec</maml:name>
			<maml:description>
				<maml:para>Specifies the customization specifications you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OSCustomizationSpec[]</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationSpec[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-OSCustomizationSpec Spec -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Removes the Spec OS customization specification from the server.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-OSCustomizationSpec.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-OSCustomizationSpec</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-OSCustomizationSpec</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-OSCustomizationSpec</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-PassthroughDevice</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified pass-through devices.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>PassthroughDevice</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified pass-through devices. You can remove only those pass-through devices that are retrieved from virtual machines.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-PassthroughDevice</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>PassthroughDevice</maml:name>
				<maml:description>
					<maml:para>Specifies the pass-through devices you want to remove. You can remove only those pass-through devices that are retrieved from virtual machines.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PassThroughDevice[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>PassthroughDevice</maml:name>
			<maml:description>
				<maml:para>Specifies the pass-through devices you want to remove. You can remove only those pass-through devices that are retrieved from virtual machines.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PassThroughDevice[]</command:parameterValue>
			<dev:type>
				<maml:name>PassThroughDevice[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-PassthroughDevice -VM VM | Remove-PassthroughDevice</dev:code>
  			<dev:remarks>
				<maml:para>Removes all pass-through devices of the VM virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-PassthroughDevice.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-PassthroughDevice</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-PassthroughDevice</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-ResourcePool</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified resource pools from their locations.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ResourcePool</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified resource pools and their children objects from their locations.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ResourcePool</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>ResourcePool</maml:name>
				<maml:description>
					<maml:para>Specifies the resource pools you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ResourcePool[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>ResourcePool</maml:name>
			<maml:description>
				<maml:para>Specifies the resource pools you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ResourcePool[]</command:parameterValue>
			<dev:type>
				<maml:name>ResourcePool[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-ResourcePool -ResourcePool ResourcePool</dev:code>
  			<dev:remarks>
				<maml:para>Removes the resource pool named ResourcePool.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-ResourcePool.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-Snapshot</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified virtual machine snapshots.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Snapshot</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified virtual machine snapshots. If the value of the RemoveChildren parameter is $true, the cmdlet removes the child snapshots as well.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-Snapshot</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Snapshot</maml:name>
				<maml:description>
					<maml:para>Specifies the snapshots you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Snapshot[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveChildren</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to remove the children of the specified snapshots as well.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Snapshot</maml:name>
			<maml:description>
				<maml:para>Specifies the snapshots you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Snapshot[]</command:parameterValue>
			<dev:type>
				<maml:name>Snapshot[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveChildren</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to remove the children of the specified snapshots as well.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-Snapshot -Snapshot $snapshot1 -RemoveChildren</dev:code>
  			<dev:remarks>
				<maml:para>Removes the snapshot in the $snapshot variable and its children.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-Snapshot.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-StatInterval</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the statistics interval specified by the provided sampling period or name.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>StatInterval</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the statistics interval specified by the provided sampling period or name.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-StatInterval</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Interval</maml:name>
				<maml:description>
					<maml:para>Specifies the statistics intervals you want to remove. The values of this parameter can be statistics interval objects, names, or refresh periods in seconds.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >StatInterval[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Interval</maml:name>
			<maml:description>
				<maml:para>Specifies the statistics intervals you want to remove. The values of this parameter can be statistics interval objects, names, or refresh periods in seconds.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">StatInterval[]</command:parameterValue>
			<dev:type>
				<maml:name>StatInterval[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-StatInterval -Interval *</dev:code>
  			<dev:remarks>
				<maml:para>Removes all the statistics intervals. Note that deleting statistics intervals is allowed only on VirtualCenter 2.0.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-StatInterval.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Stat</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-StatType</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-Tag</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified tags from the server.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Tag</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified tags from the server.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-Tag</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Specifies the tags you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Specifies the tags you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only with vCenter Server 5.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$tagCategory = Get-TagCategory &quot;MyTagCategory&quot;
Get-Tag -Name &quot;MyTag1&quot;, &quot;MyTag2&quot; -Category $tagCategory | Remove-Tag</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the tags named &quot;MyTag1&quot; and &quot;MyTag2&quot; from the specified tag category named &quot;MyTagCategory&quot; and then removes the tags from the vCenter Server system.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-Tag.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-TagAssignment</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified tag assignment.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>TagAssignment</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified tag assignment. The cmdlet removes the assignment of the tag in TagAssignment.Tag from the entity in TagAssignment.Entity.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-TagAssignment</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>TagAssignment</maml:name>
				<maml:description>
					<maml:para>Specifies the assigned tags to be removed.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >TagAssignment[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>TagAssignment</maml:name>
			<maml:description>
				<maml:para>Specifies the assigned tags to be removed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">TagAssignment[]</command:parameterValue>
			<dev:type>
				<maml:name>TagAssignment[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only with vCenter Server 5.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myVM = Get-VM myvm
$myTagAssignment = Get-TagAssignment $myVM
Remove-TagAssignment $myTagAssignment</dev:code>
  			<dev:remarks>
				<maml:para>Removes all connections to tags from the specified virtual machine entity.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-TagAssignment.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-TagAssignment</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-TagAssignment</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-TagCategory</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified tag categories from the server.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>TagCategory</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified tag categories from the server. 

Note: This will remove all tags in the category and any assignments of these tags.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-TagCategory</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Category</maml:name>
				<maml:description>
					<maml:para>Specifies the categories you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >TagCategory[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Category</maml:name>
			<maml:description>
				<maml:para>Specifies the categories you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">TagCategory[]</command:parameterValue>
			<dev:type>
				<maml:name>TagCategory[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only with vCenter Server 5.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-TagCategory &quot;MyTagCategory&quot; | Remove-TagCategory</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a tag category named &quot;MyTagCategory&quot; and then removes it from the vCenter Server system.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-TagCategory.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-Template</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified virtual machine templates from the inventory.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Template</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified virtual machine templates from the inventory. If the value of the DeletePermanently parameter is  $true, the cmdlet removes the templates from the inventory and deletes them from the disk.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-Template</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine templates you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Template[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DeletePermanently</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to delete the templates not only from the inventory, but from the datastore as well.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine templates you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Template[]</command:parameterValue>
			<dev:type>
				<maml:name>Template[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeletePermanently</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to delete the templates not only from the inventory, but from the datastore as well.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is passed to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-Template -Template $template</dev:code>
  			<dev:remarks>
				<maml:para>Removes the virtual machine template saved in the $template variable.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-Template.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-UsbDevice</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified USB devices from a virtual machine.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>UsbDevice</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified USB devices from a virtual machine.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-UsbDevice</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>UsbDevice</maml:name>
				<maml:description>
					<maml:para>Specifies the USB devices you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >UsbDevice[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>UsbDevice</maml:name>
			<maml:description>
				<maml:para>Specifies the USB devices you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">UsbDevice[]</command:parameterValue>
			<dev:type>
				<maml:name>UsbDevice[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-UsbDevice -VM (Get-VM -Location $vmhost) | Remove-UsbDevice</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the virtual machines on the host stored in the $vmhost variable and removes their USB devices.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-UsbDevice.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-UsbDevice</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VApp</command:name>
		<maml:description>
			<maml:para>This cmdlet removes vApps from the server.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VApp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes vApps from the server.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VApp</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DeletePermanently</maml:name>
				<maml:description>
					<maml:para>Indicates that you want not only to remove the vApps from the inventory, but also to delete the virtual machines they contain from the datastore.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VApp</maml:name>
				<maml:description>
					<maml:para>Specifies the vApp you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VApp[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeletePermanently</maml:name>
			<maml:description>
				<maml:para>Indicates that you want not only to remove the vApps from the inventory, but also to delete the virtual machines they contain from the datastore.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VApp</maml:name>
			<maml:description>
				<maml:para>Specifies the vApp you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VApp[]</command:parameterValue>
			<dev:type>
				<maml:name>VApp[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost -Name MyVMHost1 | Get-VApp | Remove-VApp</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves and removes all vApps available on the MyVMHost1 host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VApp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VICredentialStoreItem</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified credential store items.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VICredentialStoreItem</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the credential store items that match the specified Host and User parameters. At least one of the Host and User parameters must be provided. To remove all passwords,  call “Remove-VICredentialStoreItem *”, which is a wildcard matching all hosts.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VICredentialStoreItem</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>CredentialStoreItem</maml:name>
				<maml:description>
					<maml:para>Specifies the credential store items you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VICredentialStoreItem[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-VICredentialStoreItem</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Host</maml:name>
				<maml:description>
					<maml:para>Specifies a host to filter the credential store items you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>User</maml:name>
				<maml:description>
					<maml:para>Specifies a user to filter the credential store items you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>Specifies the file location of the credential store items that are to be removed.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>CredentialStoreItem</maml:name>
			<maml:description>
				<maml:para>Specifies the credential store items you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VICredentialStoreItem[]</command:parameterValue>
			<dev:type>
				<maml:name>VICredentialStoreItem[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Host</maml:name>
			<maml:description>
				<maml:para>Specifies a host to filter the credential store items you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>User</maml:name>
			<maml:description>
				<maml:para>Specifies a user to filter the credential store items you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>File</maml:name>
			<maml:description>
				<maml:para>Specifies the file location of the credential store items that are to be removed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VICredentialStoreItem -Host 192.168.1.100 -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Removes all credentials for the specified host from the default credential store file.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VICredentialStoreItem -User &#39;admin&#39; -Host &#39;192.168.*&#39; -File &#39;credentials.xml&#39; -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Removes all credentials for the specified user and network from a credential store file.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VICredentialStoreItem.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VICredentialStoreItem</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VICredentialStoreItem</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VIPermission</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified permissions.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VIPermission</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified permissions.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VIPermission</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Permission</maml:name>
				<maml:description>
					<maml:para>Specifies the permissions you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Permission[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Permission</maml:name>
			<maml:description>
				<maml:para>Specifies the permissions you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Permission[]</command:parameterValue>
			<dev:type>
				<maml:name>Permission[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VIPermission -Permission $permission -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Removes the $permission permission without asking for confirmation.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VIPermission.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPrivilege</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VIProperty</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the extended properties from the specified object types.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VIProperty</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the extended properties from the specified object types. Changes take effect upon the next retrieval of the corresponding objects.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VIProperty</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VIProperty</maml:name>
				<maml:description>
					<maml:para>Specifies the extended object properties you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIProperty[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-VIProperty</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the names of the extended properties you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>ObjectType</maml:name>
				<maml:description>
					<maml:para>Specifies the object types to which the extended properties you want to remove belong.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VIProperty</maml:name>
			<maml:description>
				<maml:para>Specifies the extended object properties you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIProperty[]</command:parameterValue>
			<dev:type>
				<maml:name>VIProperty[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the names of the extended properties you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>ObjectType</maml:name>
			<maml:description>
				<maml:para>Specifies the object types to which the extended properties you want to remove belong.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VIProperty -Name * -ObjectType *</dev:code>
  			<dev:remarks>
				<maml:para>Removes all custom properties.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VIProperty -Name * -ObjectType VirtualMachine</dev:code>
  			<dev:remarks>
				<maml:para>Removes all custom properties for the VirtualMachine object type.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VIProperty -Name OverallStatus, ConfigStatus -ObjectType VirtualMachine</dev:code>
  			<dev:remarks>
				<maml:para>Removes the OverallStatus and ConfigStatus for the VirtualMachine object type.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VIProperty -Name OverallStatus -ObjectType VirtualMachine, Datacenter</dev:code>
  			<dev:remarks>
				<maml:para>Removes the OverallStatus property for the VirtualMachine and Datacenter types.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VIProperty -Name *status* -ObjectType Virt*</dev:code>
  			<dev:remarks>
				<maml:para>Removes all properties that contain &quot;status&quot; in their names for object types with names that start with &quot;Virt&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VIProperty.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIProperty</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIProperty</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VIRole</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified roles.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VIRole</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified roles. To remove a role that is associated with a permission, you need to set the Force parameter to $true.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VIRole</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Role</maml:name>
				<maml:description>
					<maml:para>Specifies the roles you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Role[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to remove the role even if it is associated with a permission.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Role</maml:name>
			<maml:description>
				<maml:para>Specifies the roles you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Role[]</command:parameterValue>
			<dev:type>
				<maml:name>Role[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to remove the role even if it is associated with a permission.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VIRole -Server $server -Name &quot;Customer*&quot; | Remove-VIRole</dev:code>
  			<dev:remarks>
				<maml:para>Removes the roles with names that start with  &quot;Customer&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VIRole.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPrivilege</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VirtualPortGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified virtual port groups.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VirtualPortGroup</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified virtual port groups.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VirtualPortGroup</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualPortGroup</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual port groups you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualPortGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation..</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualPortGroup</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual port groups you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualPortGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualPortGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation..</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vswitch =  New-VirtualSwitch -VMHost 10.23.112.234 -Name VirtualSwitch

$vportgroup =  New-VirtualPortGroup -VirtualSwitch $vswitch -Name VPortGroup

Remove-VirtualPortGroup -VirtualPortGroup $vportgroup</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new virtual switch named VirtualSwitch and a virtual ports group VPortGroup for this switch. Then removes the virtual ports group.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VirtualPortGroup.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VirtualSwitch</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified virtual switches from their locations.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VirtualSwitch</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified virtual switches from their locations.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VirtualSwitch</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualSwitch</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual switches you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualSwitch[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualSwitch</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual switches you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualSwitch[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitch[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vswitch =  New-VirtualSwitch -VMHost 10.23.122.145 -Name VirtualSwitch

Remove-VirtualSwitch -VirtualSwitch $vswitch</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new virtual switch named VirtualSwitch on the host with an IP address 10.23.122.145. Then removes the virtual switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VirtualSwitch.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VirtualSwitch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VirtualSwitch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VirtualSwitch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VirtualSwitchPhysicalNetworkAdapter</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified host physical NICs from the standard virtual switch.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VirtualSwitchPhysicalNetworkAdapter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified host physical NICs from the standard virtual switch.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VirtualSwitchPhysicalNetworkAdapter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHostNetworkAdapter</maml:name>
				<maml:description>
					<maml:para>Specifies the network adapters you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PhysicalNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHostNetworkAdapter</maml:name>
			<maml:description>
				<maml:para>Specifies the network adapters you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PhysicalNic[]</command:parameterValue>
			<dev:type>
				<maml:name>PhysicalNic[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMhost &quot;myVMhost&quot; | Get-VMHostNetworkAdapter -Physical -Name &quot;vmnic1&quot; | Remove-VirtualSwitchPhysicalNetworkAdapter</dev:code>
  			<dev:remarks>
				<maml:para>Removes a VMHost NIC from the virtual switch it is attached to.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VirtualSwitchPhysicalNetworkAdapter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VirtualSwitchPhysicalNetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VM</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified virtual machines from the vCenter Server system.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VM</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified virtual machines from the vCenter Server system. If the value of the DeletePermanently parameter is $true, the cmdlet not only removes the virtual machines from the inventory, but also deletes them from the disk.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VM</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DeletePermanently</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to delete the virtual machines not only from the inventory, but from the datastore.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeletePermanently</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to delete the virtual machines not only from the inventory, but from the datastore.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VM VM -DeletePermanently</dev:code>
  			<dev:remarks>
				<maml:para>Removes the VM virtual machine and deletes its files from the ESX host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VM.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VMGuestRoute</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified routes from the routing table of their corresponding virtual machines.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VMGuestRoute</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet is deprecated. Use Invoke-VMGuestScript instead.

This cmdlet removes the specified routes from the routing table of their corresponding virtual machines. For a list of supported operating systems, see the PowerCLI User&#39;s Guide.

To run this cmdlet against vCenter Server/ESX/ESXi versions earlier than 5.0, you need to meet the following requirements:
*You must run the cmdlet on the 32-bit version of Windows PowerShell.
*You must have access to the ESX that hosts the virtual machine over TCP port 902.
*For vCenter Server/ESX/ESXi versions earlier than 4.1, you need VirtualMachine.Interact.ConsoleInteract privilege. For vCenter Server/ESX/ESXi 4.1 and later, you need VirtualMachine.Interact.GuestControl privilege.

To run this cmdlet against vCenter Server/ESXi 5.0 and later, you need VirtualMachine.GuestOperations.Execute and VirtualMachine.GuestOperations.Modify privileges.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VMGuestRoute</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMGuestRoute</maml:name>
				<maml:description>
					<maml:para>Specifies the route you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuestRoute[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ToolsWaitSecs</maml:name>
				<maml:description>
					<maml:para>Specifies the time in seconds to wait for a response from VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS. Do not use this parameter if the GuestUser and GuestPassword parameters are used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMGuestRoute</maml:name>
			<maml:description>
				<maml:para>Specifies the route you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuestRoute[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuestRoute[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ToolsWaitSecs</maml:name>
			<maml:description>
				<maml:para>Specifies the time in seconds to wait for a response from VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS. Do not use this parameter if the GuestUser and GuestPassword parameters are used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This cmdlet is not compatible with IPv6 environments.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VMGuestRoute -GuestUser user -GuestPassword pass2 -VMGuestRoute $route</dev:code>
  			<dev:remarks>
				<maml:para>Removes the guest route stored in the $route variable.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VMGuestRoute.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMGuestRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMGuestRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VMHost</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified hosts from the inventory.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VMHost</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified hosts from the inventory.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VMHost</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myServer = Connect-VIServer -Server 10.23.112.235
Get-VMHost -Server $myServer -Location MyDatacenter1 | Remove-VMHost -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Removes a specified VM host from a vCenter Server system without asking for a confirmation.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VMHost.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VMHostAccount</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified host accounts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VMHostAccount</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified host accounts . These can be  HostGroupAccount objects, HostUserAccount objects, or both.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VMHostAccount</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HostAccount</maml:name>
				<maml:description>
					<maml:para>Specifies the host accounts you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HostAccount[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HostAccount</maml:name>
			<maml:description>
				<maml:para>Specifies the host accounts you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HostAccount[]</command:parameterValue>
			<dev:type>
				<maml:name>HostAccount[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>One or more HostAccount objects</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>One or more HostAccount objects - depending on what the user specified can be one of the child types: HostGroupAccount, HostUserAccount.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostAccount -Group -ID user | Remove-VMHostAccount -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Removes the group account with ID &quot;user&quot;. Asks for confirmation before running the command.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VMHostAccount.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VMHostNetworkAdapter</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified host network adapters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VMHostNetworkAdapter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified host network adapters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VMHostNetworkAdapter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Nic</maml:name>
				<maml:description>
					<maml:para>Specifies the network adapters you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HostVirtualNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Nic</maml:name>
			<maml:description>
				<maml:para>Specifies the network adapters you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HostVirtualNic[]</command:parameterValue>
			<dev:type>
				<maml:name>HostVirtualNic[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$network = Get-VMHostNetwork

Remove-VMHostNetworkAdapter $network.VirtualNic[0] -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Removes the first virtual network adapter of the host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VMHostNetworkAdapter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostNetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostNetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VMHostNtpServer</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified NTP servers from the NTP server list of the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VMHostNtpServer</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified NTP servers from the NTP server list of the specified hosts.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VMHostNtpServer</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>NtpServer</maml:name>
				<maml:description>
					<maml:para>Specifies the NTP servers you want to remove from the NTP servers list of the specified host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host whose NTP servers you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>NtpServer</maml:name>
			<maml:description>
				<maml:para>Specifies the NTP servers you want to remove from the NTP servers list of the specified host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host whose NTP servers you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VmHostNtpServer -NtpServer 192.168.1.5 -VMHost $vmhost -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Removes the NTP server with an IP address 192.168.1.5 from the virtual machine hosts stored in the $vmhost variable.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Remove-VmHostNtpServer -NtpServer &quot;old-ntp-server.com&quot; -VMHost (Get-VMHost) -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Removes the NTP server with a domain name &quot;old-ntp-server.com&quot; from the virtual machine hosts pipelined through the Get-VMHost cmdlet.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VMHostNtpServer.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-VMHostNtpServer</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VMHostProfile</command:name>
		<maml:description>
			<maml:para>This cmdlet removes the specified host profiles.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VMHostProfile</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes the specified host profiles. If the Entity parameter is provided, the cmdlet removes the profile association for the specified entity. Otherwise, the cmdlet removes the profile object.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VMHostProfile</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Profile</maml:name>
				<maml:description>
					<maml:para>Specifies the host profiles you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostProfile[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-VMHostProfile</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies the host or cluster whose host profile association you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >InventoryItem[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Profile</maml:name>
			<maml:description>
				<maml:para>Specifies the host profiles you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostProfile[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostProfile[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies the host or cluster whose host profile association you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">InventoryItem[]</command:parameterValue>
			<dev:type>
				<maml:name>InventoryItem[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostProfile -Name Profile | Remove-VMHostProfile -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Deletes the Profile host profile.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VMHostProfile.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Invoke-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostProfileCompliance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Test-VMHostProfileCompliance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Remove-VMHostRoute</command:name>
		<maml:description>
			<maml:para>This cmdlet removes host routes.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>VMHostRoute</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet removes host routes.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-VMHostRoute</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHostRoute</maml:name>
				<maml:description>
					<maml:para>Specifies the host routes you want to remove.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostRoute[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHostRoute</maml:name>
			<maml:description>
				<maml:para>Specifies the host routes you want to remove.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostRoute[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostRoute[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Supported only on ESX 4.1/ vCenter Server 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$destIpList = (&#39;192.168.111.101&#39;, &#39;192.168.111.102&#39;)

$routes = Get-VMHostRoute -VMHost ($script:vmhost1, $script:vmhost2) | where {$destIpList -contains $_.Destination.IPAddressToString}

Remove-VMHostRoute -VMHostRoute $routes -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Removes the host routes that have the specified destination IP addresses.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Remove-VMHostRoute.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Restart-VM</command:name>
		<maml:description>
			<maml:para>This cmdlet restarts the specified virtual machines.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Restart</command:verb>
		<command:noun>VM</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet restarts the specified virtual machines.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Restart-VM</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines you want to restart.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines you want to restart.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VirtualMachine objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Restart-VM -VM VM -RunAsync -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Restarts the VM virtual machine after user confirmation. The cmdlet returns without waiting for the task to complete.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Restart-VM.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Restart-VMGuest</command:name>
		<maml:description>
			<maml:para>This cmdlet restarts the virtual machine guest operating systems.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Restart</command:verb>
		<command:noun>VMGuest</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet restarts the virtual machine guest operating systems.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Restart-VMGuest</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines whose operating systems you want to restart. The specified virtual machines must have VMware Tools installed.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Restart-VMGuest</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Guest</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine guest operating systems you want to restart.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuest[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines whose operating systems you want to restart. The specified virtual machines must have VMware Tools installed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Guest</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine guest operating systems you want to restart.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuest[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuest[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMGuest objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM | Restart-VMGuest</dev:code>
  			<dev:remarks>
				<maml:para>Restarts the guest OS of the virtual machine named VM.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Restart-VMGuest.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Restart-VMHost</command:name>
		<maml:description>
			<maml:para>This cmdlet restarts the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Restart</command:verb>
		<command:noun>VMHost</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet restarts the specified hosts.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Restart-VMHost</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts you want to restart.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to restart the hosts even if they are not in a maintenance mode.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Evacuate</maml:name>
				<maml:description>
					<maml:para>Indicates that vCenter Server automatically reregisters the virtual machines that are compatible for reregistration. If they are not compatible, they remain on the rebooted host. If there are powered-on virtual machines that cannot be reregistered, the operation waits until they are powered off manually. The Evacuate parameter is valid only if the cmdlet is run against a vCenter Server system and the host is in a DRS-enabled cluster.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts you want to restart.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to restart the hosts even if they are not in a maintenance mode.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Evacuate</maml:name>
			<maml:description>
				<maml:para>Indicates that vCenter Server automatically reregisters the virtual machines that are compatible for reregistration. If they are not compatible, they remain on the rebooted host. If there are powered-on virtual machines that cannot be reregistered, the operation waits until they are powered off manually. The Evacuate parameter is valid only if the cmdlet is run against a vCenter Server system and the host is in a DRS-enabled cluster.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHost objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Restart-VMHost 10.23.112.235 -RunAsync -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Restarts the specified host after user confirmation. The cmdlet returns without waiting for the task to complete.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Restart-VMHost.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Restart-VMHostService</command:name>
		<maml:description>
			<maml:para>This cmdlet restarts the specified host services.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Restart</command:verb>
		<command:noun>VMHostService</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet restarts the specified host services.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Restart-VMHostService</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HostService</maml:name>
				<maml:description>
					<maml:para>Specifies the host service you want to restart.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HostService[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HostService</maml:name>
			<maml:description>
				<maml:para>Specifies the host service you want to restart.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HostService[]</command:parameterValue>
			<dev:type>
				<maml:name>HostService[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>One or more HostService objects</maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more HostService objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Restart-VMHostService -Service $vmHostService -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Restarts a host service.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Restart-VMHostService.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-AdvancedSetting</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the specified advanced setting.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>AdvancedSetting</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the specified advanced setting.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-AdvancedSetting</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>AdvancedSetting</maml:name>
				<maml:description>
					<maml:para>Specifies the advanced setting you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AdvancedSetting[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>Specifies a new value for the advanced setting.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Object</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>AdvancedSetting</maml:name>
			<maml:description>
				<maml:para>Specifies the advanced setting you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">AdvancedSetting[]</command:parameterValue>
			<dev:type>
				<maml:name>AdvancedSetting[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>Specifies a new value for the advanced setting.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified AdvancedSetting objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AdvancedSetting -Entity (Get-Cluster -Name Cluster) -Name SettingName | Set-AdvancedSetting -Value NewValue</dev:code>
  			<dev:remarks>
				<maml:para>Changes the value of the advanced setting SettingName of the Cluster cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AdvancedSetting -Entity Server -Name &#39;mail.smtp.server&#39; | Set-AdvancedSetting -Value &#39;test.vmware.com&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Changes the value of the advanced setting mail.smtp.server of the specified server to test.vmware.com.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-AdvancedSetting.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AdvancedSetting</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-AlarmDefinition</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the specified alarm definitions.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>AlarmDefinition</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the specified alarm definitions.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-AlarmDefinition</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>AlarmDefinition</maml:name>
				<maml:description>
					<maml:para>Specifies the alarm definition you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >AlarmDefinition[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ActionRepeatMinutes</maml:name>
				<maml:description>
					<maml:para>Specifies a time period in minutes to define how often the alarm action repeats if the alarm is active.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Specifies a new description for the alarm definition.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Indicates that the alarm definition is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the alarm definition.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>AlarmDefinition</maml:name>
			<maml:description>
				<maml:para>Specifies the alarm definition you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">AlarmDefinition[]</command:parameterValue>
			<dev:type>
				<maml:name>AlarmDefinition[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ActionRepeatMinutes</maml:name>
			<maml:description>
				<maml:para>Specifies a time period in minutes to define how often the alarm action repeats if the alarm is active.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Specifies a new description for the alarm definition.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Indicates that the alarm definition is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the alarm definition.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified AlarmDefinition objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmDefinition -Name &#39;alarms&#39; | Set-AlarmDefinition -ActionRepeatMinutes ($_.ActionRepeatMinutes + 1)</dev:code>
  			<dev:remarks>
				<maml:para>Increase all selected alarms action repeat minutes.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-AlarmDefinition -Name &#39;alarm&#39; | foreach {$_ | Set-AlarmDefinition -Name &#39;alarm new name&#39; -Description &#39;new description&#39; -Enabled:$true}</dev:code>
  			<dev:remarks>
				<maml:para>Changes the name, description, and the Enabled flag of the selected alarms.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-AlarmDefinition.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmDefinition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmAction</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AlarmActionTrigger</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-Annotation</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the value of a custom attribute.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Annotation</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the value of a custom attribute that applies to one or more inventory items.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Annotation</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Entity</maml:name>
				<maml:description>
					<maml:para>Specifies the entities to which the new annotation value applies.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >InventoryItem[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>CustomAttribute</maml:name>
				<maml:description>
					<maml:para>Specifies the custom attribute whose annotation you want to change.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >CustomAttribute</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>Specifies a new value for the annotation.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Entity</maml:name>
			<maml:description>
				<maml:para>Specifies the entities to which the new annotation value applies.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">InventoryItem[]</command:parameterValue>
			<dev:type>
				<maml:name>InventoryItem[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>CustomAttribute</maml:name>
			<maml:description>
				<maml:para>Specifies the custom attribute whose annotation you want to change.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">CustomAttribute</command:parameterValue>
			<dev:type>
				<maml:name>CustomAttribute</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>Specifies a new value for the annotation.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified Annotation objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-Annotation -Entity $vmhost -CustomAttribute &quot;PhysicalLocation&quot; -Value Office</dev:code>
  			<dev:remarks>
				<maml:para>Modifies the annotation of the PhysicalLocation custom attribute for the host stored in the $vmhost variable.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Cluster Cluster | Set-Annotation -CustomAttribute &quot;PhysicalLocation&quot; -Value California</dev:code>
  			<dev:remarks>
				<maml:para>Modifies the annotation of the PhysicalLocation custom attribute for the Cluster cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-Annotation.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Annotation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-CDDrive</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the configuration of a virtual CD drive.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>CDDrive</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet updates a virtual CD drive. If an ISO location is provided, sets the CD to point to the ISO. Changes the StartConnected and Connected flags if StartConnected and/or Connected is set. If NoMedia parameter is set to $true, removes the CD drive&#39;s media backing and disconnects it. Note that the Connected parameter can be specified only if the corresponding virtual machine is powered on.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-CDDrive</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>CD</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual CD drive you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >CDDrive[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IsoPath</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore path to the ISO (CD image) file that backs the virtual CD drive. Do not use this parameter when the HostDevice and NoMedia parameters are specified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostDevice</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the CD drive on the host which backs this virtual CD drive. Do not use this parameter when the ISOPath and NoMedia parameters are specified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoMedia</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to detach from the CD drive any type of connected media - ISO from datastore or host device. Do not use this parameter when the ISOPath or HostDevice parameters are specified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartConnected</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual CD drive starts connected when the virtual machine associated with it powers on.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Connected</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual CD drive is connected after its creation. This parameter can be specified only if the corresponding virtual machine is powered on.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>CD</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual CD drive you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CDDrive[]</command:parameterValue>
			<dev:type>
				<maml:name>CDDrive[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IsoPath</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore path to the ISO (CD image) file that backs the virtual CD drive. Do not use this parameter when the HostDevice and NoMedia parameters are specified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostDevice</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the CD drive on the host which backs this virtual CD drive. Do not use this parameter when the ISOPath and NoMedia parameters are specified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoMedia</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to detach from the CD drive any type of connected media - ISO from datastore or host device. Do not use this parameter when the ISOPath or HostDevice parameters are specified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StartConnected</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual CD drive starts connected when the virtual machine associated with it powers on.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connected</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual CD drive is connected after its creation. This parameter can be specified only if the corresponding virtual machine is powered on.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified CDDrive objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$cd = New-CDDrive -VM VM -ISOPath &quot;[sof-20666-esx:storage1] ISO\testISO.iso&quot;

Set-CDDrive -CD $cd -NoMedia</dev:code>
  			<dev:remarks>
				<maml:para>Creates a CD drive on the VM virtual machine and attaches testISO.iso, previously uploaded.
Then disconnects the ISO.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-CDDrive.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-CDDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-Cluster</command:name>
		<maml:description>
			<maml:para>This cmldlet modifies the configuration of a cluster.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Cluster</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the configuration of a cluster.
HAEnabled is automatically set to $true if some of the HA settings, HAAdmissionControlEnabled, HAFailoverLevel, HARestartPriority, HAIsolationResponse, are specified.
DrsEnabled is automatically set to $true if some of the DRS settings, DrsAutomationLevel, DrsMode, are specified.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Cluster</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HARestartPriority</maml:name>
				<maml:description>
					<maml:para>Specifies the cluster HA restart priority. The valid values are Disabled, Low, Medium, and High. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX/ESXi hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HARestartPriority</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAIsolationResponse</maml:name>
				<maml:description>
					<maml:para>Specifies whether the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The valid values are PowerOff and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HAIsolationResponse</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMSwapfilePolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the swapfile placement policy. The following values are valid:

InHostDataStore - Store the swapfile in the datastore specified by the VMSwapfileDatastoreID property of the virtual machine host. If the VMSwapfileDatastoreID property is not set or indicates a datastore with insufficient free space, the swapfile is stored in the same directory as the virtual machine. This setting might degrade the VMotion performance.


WithVM - Store the swapfile in the same directory as the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMSwapfilePolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the cluster you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Cluster[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the cluster.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that VMware High Availability is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAAdmissionControlEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual machines in the cluster will not start if they violate availability constraints.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAFailoverLevel</maml:name>
				<maml:description>
					<maml:para>Specifies a failover level. This is the number of physical host failures that can be tolerated without impacting the ability to meet minimum thresholds for all running virtual machines. The valid values range from one to four.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that VMware DRS (Distributed Resource Scheduler) is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsMode</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated and scheduled for removal. Use the DrsAutomationLevel parameter instead. 

Specifies a DRS (Distributed Resource Scheduler) mode. The valid values are FullyAutomated, Manual, and PartiallyAutomated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:description>
					<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, and PartiallyAutomated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsAutomationLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VsanEnabled</maml:name>
				<maml:description>
					<maml:para>Specifies whether the Virtual SAN feature is enabled on this cluster.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VsanDiskClaimMode</maml:name>
				<maml:description>
					<maml:para>Specifies the mode by which disks are claimed by the Virtual SAN.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VsanDiskClaimMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Profile</maml:name>
				<maml:description>
					<maml:para>Specifies a host profile you want to associate with the cluster. If the value of this parameter is $null, the current profile association is removed.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHostProfile</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>EVCMode</maml:name>
				<maml:description>
					<maml:para>Specifies the VMware Enhanced vMotion Compatibility (EVC) mode of the newly created cluster. If not specified or set to $null, EVC is disabled.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HARestartPriority</maml:name>
			<maml:description>
				<maml:para>Specifies the cluster HA restart priority. The valid values are Disabled, Low, Medium, and High. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX/ESXi hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HARestartPriority</command:parameterValue>
			<dev:type>
				<maml:name>HARestartPriority</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HAIsolationResponse</maml:name>
			<maml:description>
				<maml:para>Specifies whether the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The valid values are PowerOff and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HAIsolationResponse</command:parameterValue>
			<dev:type>
				<maml:name>HAIsolationResponse</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMSwapfilePolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the swapfile placement policy. The following values are valid:

InHostDataStore - Store the swapfile in the datastore specified by the VMSwapfileDatastoreID property of the virtual machine host. If the VMSwapfileDatastoreID property is not set or indicates a datastore with insufficient free space, the swapfile is stored in the same directory as the virtual machine. This setting might degrade the VMotion performance.


WithVM - Store the swapfile in the same directory as the virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMSwapfilePolicy</command:parameterValue>
			<dev:type>
				<maml:name>VMSwapfilePolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the cluster you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Cluster[]</command:parameterValue>
			<dev:type>
				<maml:name>Cluster[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the cluster.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HAEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that VMware High Availability is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HAAdmissionControlEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual machines in the cluster will not start if they violate availability constraints.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HAFailoverLevel</maml:name>
			<maml:description>
				<maml:para>Specifies a failover level. This is the number of physical host failures that can be tolerated without impacting the ability to meet minimum thresholds for all running virtual machines. The valid values range from one to four.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DrsEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that VMware DRS (Distributed Resource Scheduler) is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DrsMode</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated and scheduled for removal. Use the DrsAutomationLevel parameter instead. 

Specifies a DRS (Distributed Resource Scheduler) mode. The valid values are FullyAutomated, Manual, and PartiallyAutomated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DrsMode</command:parameterValue>
			<dev:type>
				<maml:name>DrsMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DrsAutomationLevel</maml:name>
			<maml:description>
				<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, and PartiallyAutomated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DrsAutomationLevel</command:parameterValue>
			<dev:type>
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VsanEnabled</maml:name>
			<maml:description>
				<maml:para>Specifies whether the Virtual SAN feature is enabled on this cluster.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VsanDiskClaimMode</maml:name>
			<maml:description>
				<maml:para>Specifies the mode by which disks are claimed by the Virtual SAN.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VsanDiskClaimMode</command:parameterValue>
			<dev:type>
				<maml:name>VsanDiskClaimMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Profile</maml:name>
			<maml:description>
				<maml:para>Specifies a host profile you want to associate with the cluster. If the value of this parameter is $null, the current profile association is removed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHostProfile</command:parameterValue>
			<dev:type>
				<maml:name>VMHostProfile</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EVCMode</maml:name>
			<maml:description>
				<maml:para>Specifies the VMware Enhanced vMotion Compatibility (EVC) mode of the newly created cluster. If not specified or set to $null, EVC is disabled.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified Cluster objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Cluster -Name &quot;MyClusterName&quot; | Set-Cluster -Name &quot;NewClusterName&quot; -HAEnabled:$true -HAAdmissionControlEnabled:$true -HAFailoverLevel 2 -VMSwapfilePolicy &quot;InHostDatastore&quot; -HARestartPriority &quot;Low&quot; -HAIsolationResponse &quot;PowerOff&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Renames the &quot;MyClusterName&quot; cluster to &quot;NewClusterName&quot; and changes its VMware HA (Hgh Availability) settings.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-Cluster -Cluster &quot;MyClusterName&quot; -DRSEnabled:$true -DRSAutomationLevel &quot;Manual&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Changes the VMware DRS (Distributed Resource Scheduler) settings of the &quot;MyClusterName&quot; cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-Cluster -Cluster &quot;MyClusterName&quot; -EVCMode &quot;intel-nehalem&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Changes the VMware EVC (Enhanced vMotion Compatibility) settings of the &quot;MyClusterName&quot; cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-Cluster.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Cluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-CustomAttribute</command:name>
		<maml:description>
			<maml:para>This cmdlet renames a custom attribute.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>CustomAttribute</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet renames a custom attribute.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-CustomAttribute</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>CustomAttribute</maml:name>
				<maml:description>
					<maml:para>Specifies the custom attribute you want to rename.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >CustomAttribute[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the custom attribute.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>CustomAttribute</maml:name>
			<maml:description>
				<maml:para>Specifies the custom attribute you want to rename.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CustomAttribute[]</command:parameterValue>
			<dev:type>
				<maml:name>CustomAttribute[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the custom attribute.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified CustomAttribute objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-CustomAttribute -Name CreationDetails -CustomAttribute CreationDate</dev:code>
  			<dev:remarks>
				<maml:para>Renames a custom attribute from CreationDate to CreationDetails.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-CustomAttribute -Name CreationDate -Server server1, server2 | Set-CustomAttribute -Name CreationDetails</dev:code>
  			<dev:remarks>
				<maml:para>Renames the custom attributes retrieved from the specified vSphere servers from CreationDate to CreationDetails.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-CustomAttribute.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-CustomAttribute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Annotation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Annotation</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-Datacenter</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the properties of the specified datacenter.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Datacenter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the properties of the specified datacenter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Datacenter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Datacenter</maml:name>
				<maml:description>
					<maml:para>Specifies the datacenter whose properties you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datacenter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the datacenter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Datacenter</maml:name>
			<maml:description>
				<maml:para>Specifies the datacenter whose properties you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Datacenter[]</command:parameterValue>
			<dev:type>
				<maml:name>Datacenter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the datacenter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified Datacenter objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-Datacenter -Datacenter Datacenter1 -Name Datacenter2</dev:code>
  			<dev:remarks>
				<maml:para>Renames the Datacenter1 to Datacenter2.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-Datacenter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Datacenter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-Datastore</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the properties of the specified datastore.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Datastore</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the properties of the specified datastore. You can use the following characters in a path, but not in a datastore name: slash (/), backslash (\), and percent (%).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Datastore</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore whose properties you want to change.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datastore[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the datastore. Do not use slash (/), backslash (\), and percent (%) characters in datastore names.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CongestionThresholdMillisecond</maml:name>
				<maml:description>
					<maml:para>Specifies the latency period beyond which the storage array is considered congested. The range of this value is between 10 to 100 milliseconds.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StorageIOControlEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates whether you want to enable the IO control.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-Datastore</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore whose properties you want to change.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Datastore[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MaintenanceMode</maml:name>
				<maml:description>
					<maml:para>Specifies whether you want to put the datastore in maintenance mode. The operation completes when no virtual machines are present and no provisioning processes are running on the datastore.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>EvacuateAutomatically</maml:name>
				<maml:description>
					<maml:para>Specifies whether you want to automatically migrate all virtual machines to another datastore if the value of MaintenanceMode is $true.
When the Storage DRS automation level is  set to Fully Automated, you do not need to specify the EvacuateAutomatically parameter because Storage DRS will migrate all virtual machines automatically.

If EvacuateAutomatically is specified, the SDRS placement and migration recommendations are automatically applied. If SDRS generates cluster DRS faults, an error report is displayed and the operation is cancelled. The report contains information about each datastore cluster DRS fault. 

If EvacuateAutomatically is not specified, an error report is displayed and the operation is cancelled. The error report contains information about each SDRS recommendation. If SDRS generates cluster DRS faults, an error report is displayed and the operation is cancelled. The error report contains information about each fault.

If EvacuateAutomatically is explicitly set to false, the cmdlet blocks execution without displaying an error message. If SDRS generates datastore cluster DRS faults, the cmdlet stops responding and an error report is displayed. The report contains information about each cluster DRS fault.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore whose properties you want to change.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Datastore[]</command:parameterValue>
			<dev:type>
				<maml:name>Datastore[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the datastore. Do not use slash (/), backslash (\), and percent (%) characters in datastore names.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CongestionThresholdMillisecond</maml:name>
			<maml:description>
				<maml:para>Specifies the latency period beyond which the storage array is considered congested. The range of this value is between 10 to 100 milliseconds.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StorageIOControlEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates whether you want to enable the IO control.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaintenanceMode</maml:name>
			<maml:description>
				<maml:para>Specifies whether you want to put the datastore in maintenance mode. The operation completes when no virtual machines are present and no provisioning processes are running on the datastore.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EvacuateAutomatically</maml:name>
			<maml:description>
				<maml:para>Specifies whether you want to automatically migrate all virtual machines to another datastore if the value of MaintenanceMode is $true.
When the Storage DRS automation level is  set to Fully Automated, you do not need to specify the EvacuateAutomatically parameter because Storage DRS will migrate all virtual machines automatically.

If EvacuateAutomatically is specified, the SDRS placement and migration recommendations are automatically applied. If SDRS generates cluster DRS faults, an error report is displayed and the operation is cancelled. The report contains information about each datastore cluster DRS fault. 

If EvacuateAutomatically is not specified, an error report is displayed and the operation is cancelled. The error report contains information about each SDRS recommendation. If SDRS generates cluster DRS faults, an error report is displayed and the operation is cancelled. The error report contains information about each fault.

If EvacuateAutomatically is explicitly set to false, the cmdlet blocks execution without displaying an error message. If SDRS generates datastore cluster DRS faults, the cmdlet stops responding and an error report is displayed. The report contains information about each cluster DRS fault.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified Datastore objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Datastore -Name Datastore1 | Set-Datastore -Name Datastore2</dev:code>
  			<dev:remarks>
				<maml:para>Renames the Datastore1 datastore to Datastore2.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-Datastore $datastore1, $datastore2 -StorageIOControlEnabled $true -CongestionThresholdMillisecond 80</dev:code>
  			<dev:remarks>
				<maml:para>Enables the Storage IO Control and set a congestion threshold of 80 milliseconds for the specified datastores.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Datastore -Name &#39;MyDatastore1&#39; | Set-Datastore -MaintenanceMode $true -EvacuateAutomatically</dev:code>
  			<dev:remarks>
				<maml:para>Puts the MyDatastore1 datastore in maintenance mode and specifies that all virtual machines on the datastore will be automatically migrated to another datastore.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-Datastore.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Datastore</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-DatastoreCluster</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the configuration of the specified datastore cluster.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>DatastoreCluster</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the configuration of the specified datastore cluster.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-DatastoreCluster</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>DatastoreCluster</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore cluster that you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DatastoreCluster[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IOLatencyThresholdMillisecond</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum I/O latency in milliseconds allowed before Storage DRS is triggered for the datastore cluster. The parameter accepts values in the range of 5 to 100. If the value of IOLoadBalancing is $false, the setting for the I/O latency threshold is not applied.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IOLoadBalanceEnabled</maml:name>
				<maml:description>
					<maml:para>Specifies whether I/O load balancing is enabled for the datastore cluster. If the value is $false, I/O load balancing is disabled and the settings for the I/O latency threshold and utilized space threshold are not applied.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the datastore cluster.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SdrsAutomationLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the Storage DRS automation level for the datastore cluster. This parameter accepts Disabled, Manual, and FullyAutomated values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsAutomationLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SpaceUtilizationThresholdPercent</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum percentage of consumed space allowed before Storage DRS is triggered for the datastore cluster. The parameter accepts values in the range of 50 to 100. If the value of IOLoadBalancing is $false, the setting for the utilized space threshold is not applied.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>DatastoreCluster</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore cluster that you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DatastoreCluster[]</command:parameterValue>
			<dev:type>
				<maml:name>DatastoreCluster[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IOLatencyThresholdMillisecond</maml:name>
			<maml:description>
				<maml:para>Specifies the maximum I/O latency in milliseconds allowed before Storage DRS is triggered for the datastore cluster. The parameter accepts values in the range of 5 to 100. If the value of IOLoadBalancing is $false, the setting for the I/O latency threshold is not applied.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IOLoadBalanceEnabled</maml:name>
			<maml:description>
				<maml:para>Specifies whether I/O load balancing is enabled for the datastore cluster. If the value is $false, I/O load balancing is disabled and the settings for the I/O latency threshold and utilized space threshold are not applied.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the datastore cluster.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SdrsAutomationLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the Storage DRS automation level for the datastore cluster. This parameter accepts Disabled, Manual, and FullyAutomated values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DrsAutomationLevel</command:parameterValue>
			<dev:type>
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SpaceUtilizationThresholdPercent</maml:name>
			<maml:description>
				<maml:para>Specifies the maximum percentage of consumed space allowed before Storage DRS is triggered for the datastore cluster. The parameter accepts values in the range of 50 to 100. If the value of IOLoadBalancing is $false, the setting for the utilized space threshold is not applied.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>One or more modified DatastoreCluster objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-DatastoreCluster -DatastoreCluster MyDatastoreCluster1 -Name &#39;MyDatastoreCluster2&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Changes the name of the specified datastore cluster.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-DatastoreCluster -DatastoreCluster MyDatastoreCluster -IOLatencyThresholdMillisecond 5</dev:code>
  			<dev:remarks>
				<maml:para>Sets the maximum I/O latency in milliseconds allowed before Storage DRS is triggered for the specified datastore cluster to 5 milliseconds.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-DatastoreCluster -DatastoreCluster MyDatastoreCluster - SdrsAutomationLevel FullyAutomated</dev:code>
  			<dev:remarks>
				<maml:para>Changes the Storage DRS automation level of the specified datastore cluster to Fully Automated.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-DatastoreCluster.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DatastoreCluster</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-DrsRule</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies an existing DRS rule.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>DrsRule</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies an existing DRS rule. Each rule defines the virtual machines that can run on the same host (affinity rule) or must run on different hosts (anti-affinity rule).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-DrsRule</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Indicates that the DRS rule is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Rule</maml:name>
				<maml:description>
					<maml:para>Specifies the DRS rule you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >DrsRule[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the DRS rule.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines that can be referenced by the new DRS rule.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Indicates that the DRS rule is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Rule</maml:name>
			<maml:description>
				<maml:para>Specifies the DRS rule you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">DrsRule[]</command:parameterValue>
			<dev:type>
				<maml:name>DrsRule[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the DRS rule.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines that can be referenced by the new DRS rule.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified DrsVMAffinityRule objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Get-VM DrsRuleVM1*

Set-DrsRule -Rule $affinityRule -VM $vm -Enabled $true;</dev:code>
  			<dev:remarks>
				<maml:para>Updates the list of virtual machines that might be referenced by the DRS rule stored in the $affinityRule  variable and enables the rule.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-DrsRule.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-FloppyDrive</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the configuration of the specified virtual floppy drive.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>FloppyDrive</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the configuration of the specified virtual floppy drive. If a floppy image path is provided, the cmdlet sets the floppy drive to point to the image. Also, the cmdlet updates the StartConnected and Connected properties. If the value of the NoMedia parameter is $true, the cmdlet removes the floppy drive&#39;s media backing and disconnects it. The FloppyImagePath, HostDevice, and NoMedia parameters cannot be used together.  The Connected parameter can be specified only if the corresponding virtual machine is powered on.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-FloppyDrive</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Floppy</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual floppy drive you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >FloppyDrive[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>FloppyImagePath</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore path to the floppy image file that backs the virtual floppy drive. Do not use this parameter when the HostDevice and NoMedia parameters are specified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostDevice</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the floppy drive on the host that backs this virtual floppy drive. Do not use this parameter when the FloppyImagePath and NoMedia parameters are specified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoMedia</maml:name>
				<maml:description>
					<maml:para>Indicates that the floppy drive is to have no media (similar to removing the floppy from a physical drive). Do not use this parameter when the FloppyImagePath and HostDevice parameters are specified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartConnected</maml:name>
				<maml:description>
					<maml:para>If the value is $true, the virtual floppy drive starts connected when its associated virtual machine powers on. If the value is $false, it starts disconnected.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Connected</maml:name>
				<maml:description>
					<maml:para>If the value is $true, the virtual floppy drive is connected after its creation. If the value is $false, the floppy drive is disconnected. This parameter can be specified only if the corresponding virtual machine is powered on.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Floppy</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual floppy drive you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">FloppyDrive[]</command:parameterValue>
			<dev:type>
				<maml:name>FloppyDrive[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FloppyImagePath</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore path to the floppy image file that backs the virtual floppy drive. Do not use this parameter when the HostDevice and NoMedia parameters are specified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostDevice</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the floppy drive on the host that backs this virtual floppy drive. Do not use this parameter when the FloppyImagePath and NoMedia parameters are specified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoMedia</maml:name>
			<maml:description>
				<maml:para>Indicates that the floppy drive is to have no media (similar to removing the floppy from a physical drive). Do not use this parameter when the FloppyImagePath and HostDevice parameters are specified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StartConnected</maml:name>
			<maml:description>
				<maml:para>If the value is $true, the virtual floppy drive starts connected when its associated virtual machine powers on. If the value is $false, it starts disconnected.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connected</maml:name>
			<maml:description>
				<maml:para>If the value is $true, the virtual floppy drive is connected after its creation. If the value is $false, the floppy drive is disconnected. This parameter can be specified only if the corresponding virtual machine is powered on.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified FloppyDrive objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-FloppyDrive -Floppy $floppy -StartConnected:$true</dev:code>
  			<dev:remarks>
				<maml:para>Sets a floppy to start connected.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-FloppyDrive.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-FloppyDrive</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-Folder</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the properties of the specified folder.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Folder</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the properties of the specified folder.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Folder</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Folder</maml:name>
				<maml:description>
					<maml:para>Specifies the folder whose properties you want to change.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Folder[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the folder.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Folder</maml:name>
			<maml:description>
				<maml:para>Specifies the folder whose properties you want to change.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Folder[]</command:parameterValue>
			<dev:type>
				<maml:name>Folder[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the folder.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified Folder objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Folder -Name &quot;testFolder&quot; | Set-Folder -Name &quot;NewFolderName&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Renames the &quot;testFolder&quot; folder to &quot;NewFolderName&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-Folder.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Folder</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-HardDisk</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the properties of the specified virtual hard disk.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>HardDisk</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the properties of the specified virtual hard disk. You can change the size and the persistence type, and inflate or expand the specified virtual hard disk. Do not use the Inflate parameter at the same time with the Persistence and CapacityGB parameters. If a helper virtual machine is used, all virtual machines associated with the disk and the helper virtual machine should be powered off before expanding the disk.  When you resize more than one disks using a helper virtual machine, the disks are resized one by one causing the helper machine to power on and off for each virtual machine and this might slow the cmdlet performance. For a list of supported operating systems, see the PowerCLI User&#39;s Guide.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-HardDisk</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HardDisk</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual hard disk you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HardDisk[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>CapacityKB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use CapacityGB instead.
Specifies the updated capacity of the virtual disk in kilobytes (KB). If you are connected to a vCenter Server 2.0 or ESX 3.0 server, the size of the disk cannot be changed and the CapacityKB parameter is discarded. If you are connected to a vCenter Server 2.5 or ESX 3.5 server, the size of the disk can only be increased and the CapacityKB parameter is discarded if its value is less than the current disk size.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CapacityGB</maml:name>
				<maml:description>
					<maml:para>Specifies the updated capacity of the virtual disk in gigabytes (GB). If you are connected to a vCenter Server 2.0 or ESX 3.0 server, the size of the disk cannot be changed and the CapacityGB parameter is discarded. If you are connected to a vCenter Server 2.5 or ESX 3.5 server, the size of the disk can only be increased and the CapacityGB parameter is discarded if its value is less than the current disk size.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Persistence</maml:name>
				<maml:description>
					<maml:para>Specifies the disk persistence mode. The valid values are Persistent, NonPersistent, IndependentPersistent, IndependentNonPersistent, and Undoable. This parameter is supported only when the disk type is rawVirtual or flat. The NonPersistent and Undoable values are deprecated and scheduled for removal. Their usage is not recommended because they do not work with snapshots and are not supported on ESX 3.5 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "4" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore to which you want to move the specified hard disk. Moving a hard disk attached to a virtual machine to a different datastore is only supported on vCenter Server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Datastore</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the storage format of the relocated hard disk. This parameter is applicable only when moving a virtual machine disk to a different datastore, using the Datastore parameter. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Controller</maml:name>
				<maml:description>
					<maml:para>Specifies a SCSI controller to which you want to attach the hard disk.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScsiController</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-HardDisk</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HardDisk</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual hard disk you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HardDisk[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>CapacityKB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use CapacityGB instead.
Specifies the updated capacity of the virtual disk in kilobytes (KB). If you are connected to a vCenter Server 2.0 or ESX 3.0 server, the size of the disk cannot be changed and the CapacityKB parameter is discarded. If you are connected to a vCenter Server 2.5 or ESX 3.5 server, the size of the disk can only be increased and the CapacityKB parameter is discarded if its value is less than the current disk size.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CapacityGB</maml:name>
				<maml:description>
					<maml:para>Specifies the updated capacity of the virtual disk in gigabytes (GB). If you are connected to a vCenter Server 2.0 or ESX 3.0 server, the size of the disk cannot be changed and the CapacityGB parameter is discarded. If you are connected to a vCenter Server 2.5 or ESX 3.5 server, the size of the disk can only be increased and the CapacityGB parameter is discarded if its value is less than the current disk size.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Persistence</maml:name>
				<maml:description>
					<maml:para>Specifies the disk persistence mode. The valid values are Persistent, NonPersistent, IndependentPersistent, IndependentNonPersistent, and Undoable. This parameter is supported only when the disk type is rawVirtual or flat. The NonPersistent and Undoable values are deprecated and scheduled for removal. Their usage is not recommended because they do not work with snapshots and are not supported on ESX 3.5 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "4" >
				<maml:name>Datastore</maml:name>
				<maml:description>
					<maml:para>Specifies the datastore to which you want to move the specified hard disk. Moving a hard disk attached to a virtual machine to a different datastore is only supported on vCenter Server.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Datastore</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StorageFormat</maml:name>
				<maml:description>
					<maml:para>Specifies the storage format of the relocated hard disk. This parameter is applicable only when moving a virtual machine disk to a different datastore, using the Datastore parameter. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualDiskStorageFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Controller</maml:name>
				<maml:description>
					<maml:para>Specifies a SCSI controller to which you want to attach the hard disk.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScsiController</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies the PSCredential object that contains the credentials you want to use for authenticating with the host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies the username you want to use for authenticating with the host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the host.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestCredential</maml:name>
				<maml:description>
					<maml:para>Specifies the PSCredential object that contains the credentials you want to use for authenticating with the guest operating system.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestUser</maml:name>
				<maml:description>
					<maml:para>Specifies the username you want to use for authenticating with the guest operating system.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the guest operating system.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ToolsWaitSecs</maml:name>
				<maml:description>
					<maml:para>Specifies the time in seconds to wait for a response from VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HelperVM</maml:name>
				<maml:description>
					<maml:para>Specifies a helper virtual machine you want to use when expanding a Windows virtual machine system disk.
LVM (logical volume manager) for Linux is not supported and Linux guest system disks cannot be expanded. When a helper virtual machine is used, all virtual machines associated with the disk and the helper virtual machine must be powered off before expanding the disk. When you resize more than one disks using a helper virtual machine, the disks are resized one by one causing the helper machine to power on and off for each virtual machine, and this might slow down the cmdlet performance.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualMachine</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Specifies the partitions you want to resize. On Windows, you can specify which partition you want to resize by using the Partition parameter. If you do not specify a partition, the last partition of the disk is resized.
On Linux, only the last partition can be expanded.

Resizing guest partitions is supported only for Windows OS and for ext3 partitions on RHEL 5. It is achieved by scripts, provided with the vSphere PowerCLI installation. You can modify these scripts or add new ones to support operating systems different than Windows and RHEL 5, and more specific disk resizing scenarios. The scripts are located in the &quot;Scripts&quot; folder in the PowerCLI installation directory and their names have the following format:

GuestDiskExpansion_&lt;OS_Identifier&gt;

&lt;OS_Identifier&gt; is the guest family or the guest ID (as returned by Get-VMGuest).

If no partition is specified, the last partition of the hard disk is resized.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ResizeGuestPartition</maml:name>
				<maml:description>
					<maml:para>Note: This functionality is deprecated and is not functional on the currently supported guest operating systems. Resizing guest disks works only on Windows XP Service Pack 3 and Red Hat Enterprise Linux 5.

Indicates that you want to resize the guest partition of the disk. To use this feature, VMware Tools must be running on the virtual machine.
On Windows, you can specify which partition you want to resize by using the Partition parameter. If you don&#39;t specify a partition, the last partition of the disk is resized.
On Linux, only the last partition can be expanded.

Resizing guest partitions is supported only for Windows OS and for ext3 partitions on RHEL 5. It is achieved by scripts, provided with the vSphere PowerCLI installation. You can modify these scripts or add new ones to support operating systems different than Windows and RHEL 5, and more specific disk resizing scenarios. The scripts are located in the &quot;Scripts&quot; folder in the PowerCLI installation directory and their names have the following format:

GuestDiskExpansion_&lt;OS_Identifier&gt;

&lt;OS_Identifier&gt; is the guest family or the guest ID (as returned by Get-VMGuest).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-HardDisk</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HardDisk</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual hard disk you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HardDisk[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Inflate</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to inflate the hard disk.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-HardDisk</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HardDisk</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual hard disk you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HardDisk[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ZeroOut</maml:name>
				<maml:description>
					<maml:para>Specifies that you want to fill the hard disk with zeros. This parameter is supported only if you are directly connected to an ESX/ESXi host. The ZeroOut functionality is experimental.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HardDisk</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual hard disk you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HardDisk[]</command:parameterValue>
			<dev:type>
				<maml:name>HardDisk[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>CapacityKB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use CapacityGB instead.
Specifies the updated capacity of the virtual disk in kilobytes (KB). If you are connected to a vCenter Server 2.0 or ESX 3.0 server, the size of the disk cannot be changed and the CapacityKB parameter is discarded. If you are connected to a vCenter Server 2.5 or ESX 3.5 server, the size of the disk can only be increased and the CapacityKB parameter is discarded if its value is less than the current disk size.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CapacityGB</maml:name>
			<maml:description>
				<maml:para>Specifies the updated capacity of the virtual disk in gigabytes (GB). If you are connected to a vCenter Server 2.0 or ESX 3.0 server, the size of the disk cannot be changed and the CapacityGB parameter is discarded. If you are connected to a vCenter Server 2.5 or ESX 3.5 server, the size of the disk can only be increased and the CapacityGB parameter is discarded if its value is less than the current disk size.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Persistence</maml:name>
			<maml:description>
				<maml:para>Specifies the disk persistence mode. The valid values are Persistent, NonPersistent, IndependentPersistent, IndependentNonPersistent, and Undoable. This parameter is supported only when the disk type is rawVirtual or flat. The NonPersistent and Undoable values are deprecated and scheduled for removal. Their usage is not recommended because they do not work with snapshots and are not supported on ESX 3.5 and later.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="4">
			<maml:name>Datastore</maml:name>
			<maml:description>
				<maml:para>Specifies the datastore to which you want to move the specified hard disk. Moving a hard disk attached to a virtual machine to a different datastore is only supported on vCenter Server.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Datastore</command:parameterValue>
			<dev:type>
				<maml:name>Datastore</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StorageFormat</maml:name>
			<maml:description>
				<maml:para>Specifies the storage format of the relocated hard disk. This parameter is applicable only when moving a virtual machine disk to a different datastore, using the Datastore parameter. This parameter accepts Thin, Thick, and EagerZeroedThick values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualDiskStorageFormat</command:parameterValue>
			<dev:type>
				<maml:name>VirtualDiskStorageFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Controller</maml:name>
			<maml:description>
				<maml:para>Specifies a SCSI controller to which you want to attach the hard disk.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ScsiController</command:parameterValue>
			<dev:type>
				<maml:name>ScsiController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostCredential</maml:name>
			<maml:description>
				<maml:para>Specifies the PSCredential object that contains the credentials you want to use for authenticating with the host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostUser</maml:name>
			<maml:description>
				<maml:para>Specifies the username you want to use for authenticating with the host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the host.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestCredential</maml:name>
			<maml:description>
				<maml:para>Specifies the PSCredential object that contains the credentials you want to use for authenticating with the guest operating system.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestUser</maml:name>
			<maml:description>
				<maml:para>Specifies the username you want to use for authenticating with the guest operating system.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the guest operating system.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ToolsWaitSecs</maml:name>
			<maml:description>
				<maml:para>Specifies the time in seconds to wait for a response from VMware Tools. If a non-positive value is provided, the system waits infinitely long time.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HelperVM</maml:name>
			<maml:description>
				<maml:para>Specifies a helper virtual machine you want to use when expanding a Windows virtual machine system disk.
LVM (logical volume manager) for Linux is not supported and Linux guest system disks cannot be expanded. When a helper virtual machine is used, all virtual machines associated with the disk and the helper virtual machine must be powered off before expanding the disk. When you resize more than one disks using a helper virtual machine, the disks are resized one by one causing the helper machine to power on and off for each virtual machine, and this might slow down the cmdlet performance.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualMachine</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Specifies the partitions you want to resize. On Windows, you can specify which partition you want to resize by using the Partition parameter. If you do not specify a partition, the last partition of the disk is resized.
On Linux, only the last partition can be expanded.

Resizing guest partitions is supported only for Windows OS and for ext3 partitions on RHEL 5. It is achieved by scripts, provided with the vSphere PowerCLI installation. You can modify these scripts or add new ones to support operating systems different than Windows and RHEL 5, and more specific disk resizing scenarios. The scripts are located in the &quot;Scripts&quot; folder in the PowerCLI installation directory and their names have the following format:

GuestDiskExpansion_&lt;OS_Identifier&gt;

&lt;OS_Identifier&gt; is the guest family or the guest ID (as returned by Get-VMGuest).

If no partition is specified, the last partition of the hard disk is resized.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResizeGuestPartition</maml:name>
			<maml:description>
				<maml:para>Note: This functionality is deprecated and is not functional on the currently supported guest operating systems. Resizing guest disks works only on Windows XP Service Pack 3 and Red Hat Enterprise Linux 5.

Indicates that you want to resize the guest partition of the disk. To use this feature, VMware Tools must be running on the virtual machine.
On Windows, you can specify which partition you want to resize by using the Partition parameter. If you don&#39;t specify a partition, the last partition of the disk is resized.
On Linux, only the last partition can be expanded.

Resizing guest partitions is supported only for Windows OS and for ext3 partitions on RHEL 5. It is achieved by scripts, provided with the vSphere PowerCLI installation. You can modify these scripts or add new ones to support operating systems different than Windows and RHEL 5, and more specific disk resizing scenarios. The scripts are located in the &quot;Scripts&quot; folder in the PowerCLI installation directory and their names have the following format:

GuestDiskExpansion_&lt;OS_Identifier&gt;

&lt;OS_Identifier&gt; is the guest family or the guest ID (as returned by Get-VMGuest).</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Inflate</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to inflate the hard disk.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ZeroOut</maml:name>
			<maml:description>
				<maml:para>Specifies that you want to fill the hard disk with zeros. This parameter is supported only if you are directly connected to an ESX/ESXi host. The ZeroOut functionality is experimental.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified HardDisk objectsHardDisk</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Set-HardDisk cannot inflate a hard disk that has already been inflated.
Non-persistent and undoable disks are not supported.
Migrating a hard disk attached to a virtual machine to a different datastore is supported only on vCenter Server.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-HardDisk -VM $vm | Set-HardDisk -Persistence &quot;IndependentNonPersistent&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Changes the persistence of a hard disk to IndependentNonPersistent.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-HardDisk -HardDisk $harddisk -CapacityGB $extendedCapacity -GuestCredential $guestCred</dev:code>
  			<dev:remarks>
				<maml:para>Extends a hard disk with the specified capacity. The command also extends the disk on the guest OS.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-HardDisk -HardDisk $harddisk -Datastore $datastore</dev:code>
  			<dev:remarks>
				<maml:para>Moves the hard disk to the specified datastore.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-HardDisk.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Copy-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-HardDisk</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-IScsiHbaTarget</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the configuration of an iSCSI HBA target.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>IScsiHbaTarget</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the configuration of an iSCSI HBA target. The cmdlet modifies the CHAP and Digest properties of an iSCSI HBA target.  You must specify at least one of the CHAP-related (or Mutual CHAP) parameters. Otherwise, an error message is displayed.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-IScsiHbaTarget</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Target</maml:name>
				<maml:description>
					<maml:para>Specifies the iSCSI HBA target you want to configure. To identify the target, you can provide an IScsiTarget object or use an &lt;Address&gt;:&lt;Port&gt; string.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >IScsiHbaTarget[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChapType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the CHAP authorization. The valid values are Prohibited, Discouraged, Preferred, and Required. If you set ChapType to Discouraged, Preferred, or Required, then you must specify the ChapPassword parameter as well.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ChapType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChapName</maml:name>
				<maml:description>
					<maml:para>Specifies the CHAP initiator name if CHAP is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChapPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the CHAP password if CHAP is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MutualChapEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that mutual CHAP is enabled. In this case, you must specify the MutualChapPassword parameter as well.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MutualChapName</maml:name>
				<maml:description>
					<maml:para>Specifies the Mutual CHAP initiator name if CHAP is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MutualChapPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the Mutual CHAP password if CHAP is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritChap</maml:name>
				<maml:description>
					<maml:para>Indicates that the CHAP setting is inherited from the iSCSI HBA device.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritMutualChap</maml:name>
				<maml:description>
					<maml:para>Indicates that the Mutual CHAP setting is inherited from the iSCSI HBA device.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>Target</maml:name>
			<maml:description>
				<maml:para>Specifies the iSCSI HBA target you want to configure. To identify the target, you can provide an IScsiTarget object or use an &lt;Address&gt;:&lt;Port&gt; string.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IScsiHbaTarget[]</command:parameterValue>
			<dev:type>
				<maml:name>IScsiHbaTarget[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChapType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the CHAP authorization. The valid values are Prohibited, Discouraged, Preferred, and Required. If you set ChapType to Discouraged, Preferred, or Required, then you must specify the ChapPassword parameter as well.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ChapType</command:parameterValue>
			<dev:type>
				<maml:name>ChapType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChapName</maml:name>
			<maml:description>
				<maml:para>Specifies the CHAP initiator name if CHAP is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Use the old name if any. Otherwise, use the initiator name.</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChapPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the CHAP password if CHAP is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MutualChapEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that mutual CHAP is enabled. In this case, you must specify the MutualChapPassword parameter as well.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MutualChapName</maml:name>
			<maml:description>
				<maml:para>Specifies the Mutual CHAP initiator name if CHAP is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Use the old name if any. Otherwise, use the initiator name.</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MutualChapPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the Mutual CHAP password if CHAP is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritChap</maml:name>
			<maml:description>
				<maml:para>Indicates that the CHAP setting is inherited from the iSCSI HBA device.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritMutualChap</maml:name>
			<maml:description>
				<maml:para>Indicates that the Mutual CHAP setting is inherited from the iSCSI HBA device.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified IScsiHbaTarget objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>CHAP configuration is supported only on vCenter Server/ESX 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-IScsiHbaTarget -Address &quot;10.23.84.73&quot; -Type Static | Set-IScsiHbaTarget -ChapType Prohibited</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the targets of type Static on the specified address and sets their CHAP type to Prohibited.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$target = Get-IScsiHbaTarget -Address &quot;10.23.84.73&quot; -Type Send

Set-IScsiHbaTarget -Target $target -ChapType Required -ChapPassword pass1 -MutualChapEnabled -MutualChapPassword pass2</dev:code>
  			<dev:remarks>
				<maml:para>Modifies the CHAP and Mutual CHAP settings of the targets of type Send on the specified address.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-IScsiHbaTarget.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostHba</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostHba</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-NetworkAdapter</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the configuration of the virtual network adapter.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>NetworkAdapter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the configuration of the virtual network adapter. You can change the MAC address and the network name, and to configure the Connected, StartConnected, and WakeOnLan properties of the adapter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-NetworkAdapter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>NetworkAdapter</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual network adapter you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >NetworkAdapter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MacAddress</maml:name>
				<maml:description>
					<maml:para>Specifies an optional MAC address for the virtual network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NetworkName</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the network to which you want to connect the virtual network adapter. Specifying a distributed port group name is obsolete. Use the Portgroup parameter instead.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartConnected</maml:name>
				<maml:description>
					<maml:para>If the value is $true, the virtual network adapter starts connected when its associated virtual machine powers on. If the value is $false, it starts disconnected.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Connected</maml:name>
				<maml:description>
					<maml:para>If the value is $true, the virtual network adapter is connected after its creation. If the value is $false, it is disconnected.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WakeOnLan</maml:name>
				<maml:description>
					<maml:para>Indicates that wake-on-LAN is enabled on the virtual network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the network adapter. The valid types are e1000, Flexible, Vmxnet, EnhancedVmxnet, and Vmxnet3, and Unknown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualNetworkAdapterType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-NetworkAdapter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>NetworkAdapter</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual network adapter you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >NetworkAdapter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MacAddress</maml:name>
				<maml:description>
					<maml:para>Specifies an optional MAC address for the virtual network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartConnected</maml:name>
				<maml:description>
					<maml:para>If the value is $true, the virtual network adapter starts connected when its associated virtual machine powers on. If the value is $false, it starts disconnected.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Connected</maml:name>
				<maml:description>
					<maml:para>If the value is $true, the virtual network adapter is connected after its creation. If the value is $false, it is disconnected.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WakeOnLan</maml:name>
				<maml:description>
					<maml:para>Indicates that wake-on-LAN is enabled on the virtual network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the network adapter. The valid types are e1000, Flexible, Vmxnet, EnhancedVmxnet, and Vmxnet3, and Unknown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualNetworkAdapterType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PortId</maml:name>
				<maml:description>
					<maml:para>Specifies the port of the virtual switch to which you want to connect the network adapter. Use this parameter only if the DistributedSwitch parameter is specified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>DistributedSwitch</maml:name>
				<maml:description>
					<maml:para>Specifies a virtual switch to which you want to connect the network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DistributedSwitch</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-NetworkAdapter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>NetworkAdapter</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual network adapter you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >NetworkAdapter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Portgroup</maml:name>
				<maml:description>
					<maml:para>Specifies a standard or a distributed port group to which you want to connect the network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VirtualPortGroupBase</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>NetworkAdapter</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual network adapter you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">NetworkAdapter[]</command:parameterValue>
			<dev:type>
				<maml:name>NetworkAdapter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MacAddress</maml:name>
			<maml:description>
				<maml:para>Specifies an optional MAC address for the virtual network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NetworkName</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the network to which you want to connect the virtual network adapter. Specifying a distributed port group name is obsolete. Use the Portgroup parameter instead.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StartConnected</maml:name>
			<maml:description>
				<maml:para>If the value is $true, the virtual network adapter starts connected when its associated virtual machine powers on. If the value is $false, it starts disconnected.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connected</maml:name>
			<maml:description>
				<maml:para>If the value is $true, the virtual network adapter is connected after its creation. If the value is $false, it is disconnected.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WakeOnLan</maml:name>
			<maml:description>
				<maml:para>Indicates that wake-on-LAN is enabled on the virtual network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the network adapter. The valid types are e1000, Flexible, Vmxnet, EnhancedVmxnet, and Vmxnet3, and Unknown.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualNetworkAdapterType</command:parameterValue>
			<dev:type>
				<maml:name>VirtualNetworkAdapterType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PortId</maml:name>
			<maml:description>
				<maml:para>Specifies the port of the virtual switch to which you want to connect the network adapter. Use this parameter only if the DistributedSwitch parameter is specified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>DistributedSwitch</maml:name>
			<maml:description>
				<maml:para>Specifies a virtual switch to which you want to connect the network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DistributedSwitch</command:parameterValue>
			<dev:type>
				<maml:name>DistributedSwitch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Portgroup</maml:name>
			<maml:description>
				<maml:para>Specifies a standard or a distributed port group to which you want to connect the network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VirtualPortGroupBase</command:parameterValue>
			<dev:type>
				<maml:name>VirtualPortGroupBase</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified NetworkAdapter objcts</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM | Get-NetworkAdapter | Set-NetworkAdapter -MacAddress &#39;00:50:56:a1:00:00&#39; -WakeOnLan:$true</dev:code>
  			<dev:remarks>
				<maml:para>Configures the  Mac address and the WakeOnLan setting of a virtual network adapter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM | Get-NetworkAdapter | Set-NetworkAdapter -Type EnhancedVmxnet</dev:code>
  			<dev:remarks>
				<maml:para>Sets the type of the virtual network adapter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM | Get-NetworkAdapter | Set-NetworkAdapter -Connected:$true</dev:code>
  			<dev:remarks>
				<maml:para>Sets the connection state of the virtual network adapter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myNetworkAdapters = Get-VM | Get-NetworkAdapter -Name &quot;Network adapter 1&quot;
$myVDPortGroup = Get-VDPortgroup -Name MyVDPortGroup
Set-NetworkAdapter -NetworkAdapter $myNetworkAdapters -Portgroup $myVDPortGroup</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves all network adapters named &quot;Network adapter 1&quot; from all virtual machines and connects them to the specified distributed port group.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myNetworkAdapter = Get-VM -Name MyVM | Get-NetworkAdapter -Name &quot;Network adapter 1&quot;
$myVDSwitch = Get-VDSwitch -Name MyVDSwitch
Set-NetworkAdapter -NetworkAdapter $myNetworkAdapter -DistributedSwitch $MyVDSwitch -PortId 100</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the network adapter named &quot;Network adapter 1&quot; added to the specified virtual machine and connects it to the specified port on the specified distributed switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-NetworkAdapter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-NetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-NicTeamingPolicy</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the specified NIC teaming policy.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>NicTeamingPolicy</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the specified NIC teaming policy. You can change the load balancing and failover settings. Default NIC teaming policies are set for the entire virtual switch and can be overridden at port group level.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-NicTeamingPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualSwitchPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual switch policy to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >NicTeamingVirtualSwitchPolicy[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>BeaconInterval</maml:name>
				<maml:description>
					<maml:para>Specifies the interval at which the server sends out beacon probes on all NICs in the team. The value must be a positive integer. This parameter is used when the value of the NetworkFailoverDetectionPolicy parameter is BeaconProbing.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>LoadBalancingPolicy</maml:name>
				<maml:description>
					<maml:para>Determines how network traffic is distributed between the network adapters assigned to a switch. The following values are valid:

LoadBalanceIP - Route based on IP hash. Choose an uplink based on a hash of the source and destination IP addresses of each packet. For non-IP packets, whatever is at those offsets is used to compute the hash.

LoadBalanceSrcMac - Route based on source MAC hash. Choose an uplink based on a hash of the source Ethernet.


LoadBalanceSrcId - Route based on the originating port ID. Choose an uplink based on the virtual port where the traffic entered the virtual switch.

ExplicitFailover - Always use the highest order uplink from the list of Active adapters that passes failover detection criteria.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >LoadBalancingPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NetworkFailoverDetectionPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies how to reroute traffic in the event of an adapter failure. The following values are valid:

LinkStatus - Relies solely on the link status that the network adapter provides. This option detects failures, such as cable pulls and physical switch power failures, but not configuration errors, such as a physical switch port being blocked by spanning tree or misconfigured to the wrong VLAN or cable pulls on the other side of a physical switch.

BeaconProbing - Sends out and listens for beacon probes on all NICs in the team and uses this information, in addition to link status, to determine link failure. This option detects many of the failures mentioned above that are not detected by link status alone.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkFailoverDetectionPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NotifySwitches</maml:name>
				<maml:description>
					<maml:para>Indicates that whenever a virtual NIC is connected to the virtual switch or whenever that virtual NIC&#39;s traffic is routed over a different physical NIC in the team because of a failover event, a notification is sent over the network to update the lookup tables on the physical switches.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>FailbackEnabled</maml:name>
				<maml:description>
					<maml:para>Specifies how a physical adapter is returned to active duty after recovering from a failure. If the value is $true, the adapter is returned to active duty immediately on recovery, displacing the standby adapter that took over its slot, if any. If the value is $false, a failed adapter is left inactive even after recovery until another active adapter fails, requiring its replacement.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MakeNicActive</maml:name>
				<maml:description>
					<maml:para>Specifies the adapters you want to continue to use when the network adapter connectivity is available and active.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PhysicalNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MakeNicStandby</maml:name>
				<maml:description>
					<maml:para>Specifies the adapters you want to use if one of the active adapter&#39;s connectivity is unavailable.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PhysicalNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MakeNicUnused</maml:name>
				<maml:description>
					<maml:para>Specifies the adapters you do not want to use.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PhysicalNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-NicTeamingPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualPortGroupPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual port group policy to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >NicTeamingVirtualPortGroupPolicy[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritLoadBalancingPolicy</maml:name>
				<maml:description>
					<maml:para>Indicates that the value of the LoadBalancingPolicy parameter is inherited from the virtual switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritNetworkFailoverDetectionPolicy</maml:name>
				<maml:description>
					<maml:para>Indicates that the value of the NetworkFailoverDetectionPolicy parameter is inherited from the virtual switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritNotifySwitches</maml:name>
				<maml:description>
					<maml:para>Indicates that the value of the NotifySwitches parameter is inherited from the virtual switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritFailback</maml:name>
				<maml:description>
					<maml:para>Indicates that the value of the FailbackEnabled parameter is inherited from the virtual switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritFailoverOrder</maml:name>
				<maml:description>
					<maml:para>Indicates that the value of the MakeNicActive, MakeNicStandBy, and MakeNicUnused parameters are inherited from the virtual switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>LoadBalancingPolicy</maml:name>
				<maml:description>
					<maml:para>Determines how network traffic is distributed between the network adapters assigned to a switch. The following values are valid:

LoadBalanceIP - Route based on IP hash. Choose an uplink based on a hash of the source and destination IP addresses of each packet. For non-IP packets, whatever is at those offsets is used to compute the hash.

LoadBalanceSrcMac - Route based on source MAC hash. Choose an uplink based on a hash of the source Ethernet.


LoadBalanceSrcId - Route based on the originating port ID. Choose an uplink based on the virtual port where the traffic entered the virtual switch.

ExplicitFailover - Always use the highest order uplink from the list of Active adapters that passes failover detection criteria.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >LoadBalancingPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NetworkFailoverDetectionPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies how to reroute traffic in the event of an adapter failure. The following values are valid:

LinkStatus - Relies solely on the link status that the network adapter provides. This option detects failures, such as cable pulls and physical switch power failures, but not configuration errors, such as a physical switch port being blocked by spanning tree or misconfigured to the wrong VLAN or cable pulls on the other side of a physical switch.

BeaconProbing - Sends out and listens for beacon probes on all NICs in the team and uses this information, in addition to link status, to determine link failure. This option detects many of the failures mentioned above that are not detected by link status alone.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >NetworkFailoverDetectionPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NotifySwitches</maml:name>
				<maml:description>
					<maml:para>Indicates that whenever a virtual NIC is connected to the virtual switch or whenever that virtual NIC&#39;s traffic is routed over a different physical NIC in the team because of a failover event, a notification is sent over the network to update the lookup tables on the physical switches.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>FailbackEnabled</maml:name>
				<maml:description>
					<maml:para>Specifies how a physical adapter is returned to active duty after recovering from a failure. If the value is $true, the adapter is returned to active duty immediately on recovery, displacing the standby adapter that took over its slot, if any. If the value is $false, a failed adapter is left inactive even after recovery until another active adapter fails, requiring its replacement.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MakeNicActive</maml:name>
				<maml:description>
					<maml:para>Specifies the adapters you want to continue to use when the network adapter connectivity is available and active.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PhysicalNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MakeNicStandby</maml:name>
				<maml:description>
					<maml:para>Specifies the adapters you want to use if one of the active adapter&#39;s connectivity is unavailable.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PhysicalNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MakeNicUnused</maml:name>
				<maml:description>
					<maml:para>Specifies the adapters you do not want to use.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PhysicalNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualSwitchPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual switch policy to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">NicTeamingVirtualSwitchPolicy[]</command:parameterValue>
			<dev:type>
				<maml:name>NicTeamingVirtualSwitchPolicy[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BeaconInterval</maml:name>
			<maml:description>
				<maml:para>Specifies the interval at which the server sends out beacon probes on all NICs in the team. The value must be a positive integer. This parameter is used when the value of the NetworkFailoverDetectionPolicy parameter is BeaconProbing.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LoadBalancingPolicy</maml:name>
			<maml:description>
				<maml:para>Determines how network traffic is distributed between the network adapters assigned to a switch. The following values are valid:

LoadBalanceIP - Route based on IP hash. Choose an uplink based on a hash of the source and destination IP addresses of each packet. For non-IP packets, whatever is at those offsets is used to compute the hash.

LoadBalanceSrcMac - Route based on source MAC hash. Choose an uplink based on a hash of the source Ethernet.


LoadBalanceSrcId - Route based on the originating port ID. Choose an uplink based on the virtual port where the traffic entered the virtual switch.

ExplicitFailover - Always use the highest order uplink from the list of Active adapters that passes failover detection criteria.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">LoadBalancingPolicy</command:parameterValue>
			<dev:type>
				<maml:name>LoadBalancingPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NetworkFailoverDetectionPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies how to reroute traffic in the event of an adapter failure. The following values are valid:

LinkStatus - Relies solely on the link status that the network adapter provides. This option detects failures, such as cable pulls and physical switch power failures, but not configuration errors, such as a physical switch port being blocked by spanning tree or misconfigured to the wrong VLAN or cable pulls on the other side of a physical switch.

BeaconProbing - Sends out and listens for beacon probes on all NICs in the team and uses this information, in addition to link status, to determine link failure. This option detects many of the failures mentioned above that are not detected by link status alone.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">NetworkFailoverDetectionPolicy</command:parameterValue>
			<dev:type>
				<maml:name>NetworkFailoverDetectionPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotifySwitches</maml:name>
			<maml:description>
				<maml:para>Indicates that whenever a virtual NIC is connected to the virtual switch or whenever that virtual NIC&#39;s traffic is routed over a different physical NIC in the team because of a failover event, a notification is sent over the network to update the lookup tables on the physical switches.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FailbackEnabled</maml:name>
			<maml:description>
				<maml:para>Specifies how a physical adapter is returned to active duty after recovering from a failure. If the value is $true, the adapter is returned to active duty immediately on recovery, displacing the standby adapter that took over its slot, if any. If the value is $false, a failed adapter is left inactive even after recovery until another active adapter fails, requiring its replacement.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MakeNicActive</maml:name>
			<maml:description>
				<maml:para>Specifies the adapters you want to continue to use when the network adapter connectivity is available and active.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PhysicalNic[]</command:parameterValue>
			<dev:type>
				<maml:name>PhysicalNic[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MakeNicStandby</maml:name>
			<maml:description>
				<maml:para>Specifies the adapters you want to use if one of the active adapter&#39;s connectivity is unavailable.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PhysicalNic[]</command:parameterValue>
			<dev:type>
				<maml:name>PhysicalNic[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MakeNicUnused</maml:name>
			<maml:description>
				<maml:para>Specifies the adapters you do not want to use.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PhysicalNic[]</command:parameterValue>
			<dev:type>
				<maml:name>PhysicalNic[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualPortGroupPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual port group policy to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">NicTeamingVirtualPortGroupPolicy[]</command:parameterValue>
			<dev:type>
				<maml:name>NicTeamingVirtualPortGroupPolicy[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritLoadBalancingPolicy</maml:name>
			<maml:description>
				<maml:para>Indicates that the value of the LoadBalancingPolicy parameter is inherited from the virtual switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritNetworkFailoverDetectionPolicy</maml:name>
			<maml:description>
				<maml:para>Indicates that the value of the NetworkFailoverDetectionPolicy parameter is inherited from the virtual switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritNotifySwitches</maml:name>
			<maml:description>
				<maml:para>Indicates that the value of the NotifySwitches parameter is inherited from the virtual switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritFailback</maml:name>
			<maml:description>
				<maml:para>Indicates that the value of the FailbackEnabled parameter is inherited from the virtual switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritFailoverOrder</maml:name>
			<maml:description>
				<maml:para>Indicates that the value of the MakeNicActive, MakeNicStandBy, and MakeNicUnused parameters are inherited from the virtual switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified NicTeamingVirtualSwitchPolicy or NicTeamingVirtualPortGroupPolicy objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If the VirtualPortGroupPolicy parameter is specified, the cmdlet returns zero or more modified NicTeamingVirtualPortGroupPolicy objects. If the VirtualSwitchPolicy parameter is specified, the cmdlet returns zero or more modified NicTeamingVirtualSwitchPolicy objects.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$policy = Get-VirtualSwitch -VMHost (Get-VMHost *.128) -Name vSwitch1 | Get-NicTeamingPolicy

$policy | Set-NicTeamingPolicy -LoadBalancingPolicy LoadBalanceSrcMac</dev:code>
  			<dev:remarks>
				<maml:para>Configures the NicTeaming policy  of the vSwitch1 virtual switch.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-NicTeamingPolicy.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-NicTeamingPolicy</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-OSCustomizationNicMapping</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the provided OS customization NIC mappings.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OSCustomizationNicMapping</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the provided OS customization NIC mappings.  If the parent spec of the provided NIC mapping is a server-side spec, it is updated on the server. If the parent spec is client-side, the reference that is kept in the memory is updated, but the variable that is passed to the cmdlet is not modified.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-OSCustomizationNicMapping</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>OSCustomizationNicMapping</maml:name>
				<maml:description>
					<maml:para>Specifies the OS customization NIC mapping you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OSCustomizationNicMapping[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Position</maml:name>
				<maml:description>
					<maml:para>Specifies the position of the mapping you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IpMode</maml:name>
				<maml:description>
					<maml:para>Specifies the IP configuration mode. The valid values are UseDhcp, PromptUser, UseVCApplication, and UseStaticIP.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationIPMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VCApplicationArgument</maml:name>
				<maml:description>
					<maml:para>Specifies a new argument you want to pass to VCApplication in order to obtain an IP address.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>IpAddress</maml:name>
				<maml:description>
					<maml:para>Specifies an IP address. Using this parameter automatically sets the IpMode parameter to UseStaticIp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>SubnetMask</maml:name>
				<maml:description>
					<maml:para>Specifies a subnet mask.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>DefaultGateway</maml:name>
				<maml:description>
					<maml:para>Specifies a default gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AlternateGateway</maml:name>
				<maml:description>
					<maml:para>Specifies an alternate gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>Dns</maml:name>
				<maml:description>
					<maml:para>Specifies a DNS address. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Wins</maml:name>
				<maml:description>
					<maml:para>Specifies WINS servers. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-OSCustomizationNicMapping</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>OSCustomizationNicMapping</maml:name>
				<maml:description>
					<maml:para>Specifies the OS customization NIC mapping you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OSCustomizationNicMapping[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NetworkAdapterMac</maml:name>
				<maml:description>
					<maml:para>Specifies the MAC address of the network adapter to which you want to map the OS customization specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IpMode</maml:name>
				<maml:description>
					<maml:para>Specifies the IP configuration mode. The valid values are UseDhcp, PromptUser, UseVCApplication, and UseStaticIP.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationIPMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VCApplicationArgument</maml:name>
				<maml:description>
					<maml:para>Specifies a new argument you want to pass to VCApplication in order to obtain an IP address.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>IpAddress</maml:name>
				<maml:description>
					<maml:para>Specifies an IP address. Using this parameter automatically sets the IpMode parameter to UseStaticIp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>SubnetMask</maml:name>
				<maml:description>
					<maml:para>Specifies a subnet mask.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>DefaultGateway</maml:name>
				<maml:description>
					<maml:para>Specifies a default gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AlternateGateway</maml:name>
				<maml:description>
					<maml:para>Specifies an alternate gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>Dns</maml:name>
				<maml:description>
					<maml:para>Specifies a DNS address. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Wins</maml:name>
				<maml:description>
					<maml:para>Specifies WINS servers. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>OSCustomizationNicMapping</maml:name>
			<maml:description>
				<maml:para>Specifies the OS customization NIC mapping you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OSCustomizationNicMapping[]</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationNicMapping[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Position</maml:name>
			<maml:description>
				<maml:para>Specifies the position of the mapping you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>last</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IpMode</maml:name>
			<maml:description>
				<maml:para>Specifies the IP configuration mode. The valid values are UseDhcp, PromptUser, UseVCApplication, and UseStaticIP.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">OSCustomizationIPMode</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationIPMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>UseDhcp</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VCApplicationArgument</maml:name>
			<maml:description>
				<maml:para>Specifies a new argument you want to pass to VCApplication in order to obtain an IP address.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>IpAddress</maml:name>
			<maml:description>
				<maml:para>Specifies an IP address. Using this parameter automatically sets the IpMode parameter to UseStaticIp.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>SubnetMask</maml:name>
			<maml:description>
				<maml:para>Specifies a subnet mask.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>DefaultGateway</maml:name>
			<maml:description>
				<maml:para>Specifies a default gateway.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AlternateGateway</maml:name>
			<maml:description>
				<maml:para>Specifies an alternate gateway.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="4">
			<maml:name>Dns</maml:name>
			<maml:description>
				<maml:para>Specifies a DNS address. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Wins</maml:name>
			<maml:description>
				<maml:para>Specifies WINS servers. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NetworkAdapterMac</maml:name>
			<maml:description>
				<maml:para>Specifies the MAC address of the network adapter to which you want to map the OS customization specification.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified OSCustomizationNicMapping objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-OSCustomizationSpec Spec | Get-OSCustomizationNicMapping | Set-OSCustomizationNicMapping -IpAddress 10.0.0.2</dev:code>
  			<dev:remarks>
				<maml:para>Modifies the IP address of the specified NIC mapping that uses static IP mode.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-OSCustomizationSpec Spec | Get-OSCustomizationNicMapping | Set-OSCustomizationNicMapping -VcApplicationArgument &quot;subnet2&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Modifies the VCApplication argument of the specified NIC mapping.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-OSCustomizationSpec Spec | Get-OSCustomizationNicMapping | Set-OSCustomizationNicMapping -IpMode UseStaticIp -IpAddress 10.10.0.1 -SubnetMask 255.255.255.0 -DefaultGateway 10.10.0.1 -AlternateGateway 10.10.0.1 -Dns 10.10.150.1 -PrimaryWins 10.10.150.2</dev:code>
  			<dev:remarks>
				<maml:para>Modifies the attributes of a NIC mapping.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-OSCustomizationNicMapping -OSCustomizationNicMapping $nicMapping1, $nicMapping2 -IPMode UseVCApplication -VcApplicationArgument &quot;subnet2&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Modifies the specified NIC mapping using VCApplication.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-OSCustomizationNicMapping.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-OSCustomizationNicMapping</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-OSCustomizationNicMapping</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-OSCustomizationNicMapping</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-OSCustomizationSpec</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the specified OS customization specification.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>OSCustomizationSpec</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the specified OS customization specification. The specification to be updated is identified by one or both of the Name and Spec parameters. If a Windows specification is to be updated, one of the  Domain and Workgroup parameters must be provided. If a Linux specification is to be updated, the Domain parameter must be provided.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-OSCustomizationSpec</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies the specification you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OSCustomizationSpec[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>NewSpec</maml:name>
				<maml:description>
					<maml:para>If no other parameters are provided, this parameter specifies a specification from which to retrieve information for the updated specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpec</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Sets the type of the OS customization specification. The valid values are Persistent and NonPersistent.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpecType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the OS customization specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsServer</maml:name>
				<maml:description>
					<maml:para>Specifies the DNS server. This parameter applies only to Linux operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsSuffix</maml:name>
				<maml:description>
					<maml:para>Specifies the DNS suffix. This parameter applies only to Linux operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Domain</maml:name>
				<maml:description>
					<maml:para>Specifies the domain name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NamingScheme</maml:name>
				<maml:description>
					<maml:para>Specifies the naming scheme for the virtual machine. The valid values are Custom, Fixed, Prefix, and Vm.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NamingPrefix</maml:name>
				<maml:description>
					<maml:para>The behavior of this parameter is related to the customization scheme. If a Custom customization scheme is specified, NamingPrefix is an optional argument that is passed to the utility for this IP address. The value of this field is defined by the user in the script. If a Fixed customization scheme is specified, NamingPrefix should indicate the name of the virtual machine. If a Prefix customization scheme is set, NamingPrefix indicates the prefix to which a unique number is appended.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Provides a new description for the specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-OSCustomizationSpec</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>FullName</maml:name>
				<maml:description>
					<maml:para>Specifies the administrator&#39;s full name. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>OrgName</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the organization to which the administrator belongs.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChangeSID</maml:name>
				<maml:description>
					<maml:para>Indicates that the customization should modify the system security identifier (SID). This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DeleteAccounts</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to delete all user accounts. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies the specification you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >OSCustomizationSpec[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>NewSpec</maml:name>
				<maml:description>
					<maml:para>If no other parameters are provided, this parameter specifies a specification from which to retrieve information for the updated specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpec</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Sets the type of the OS customization specification. The valid values are Persistent and NonPersistent.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpecType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the OS customization specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsServer</maml:name>
				<maml:description>
					<maml:para>Specifies the DNS server. This parameter applies only to Linux operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsSuffix</maml:name>
				<maml:description>
					<maml:para>Specifies the DNS suffix. This parameter applies only to Linux operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuiRunOnce</maml:name>
				<maml:description>
					<maml:para>Provides a list of commands to run after first user login. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AdminPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the new OS administrator&#39;s password. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>TimeZone</maml:name>
				<maml:description>
					<maml:para>Specifies the name or ID of the time zone for a Windows guest OS only. Using wildcards is supported. The following time zones are available:


000 Int&#39;l Dateline
001 Samoa
002 Hawaii
003 Alaskan
004 Pacific
010 Mountain (U.S. and Canada)
015 U.S. Mountain: Arizona
020 Central (U.S. and Canada)
025 Canada Central
030 Mexico
033 Central America
035 Eastern (U.S. and Canada)
040 U.S. Eastern: Indiana (East)
045 S.A. Pacific
050 Atlantic (Canada)
055 S.A. Western
056 Pacific S.A.
060 Newfoundland
065 E. South America
070 S.A. Eastern
073 Greenland
075 Mid-Atlantic
080 Azores
083 Cape Verde Islands
085 GMT (Greenwich Mean Time)
090 GMT Greenwich
095 Central Europe
100 Central European
105 Romance
110 W. Europe
113 W. Central Africa
115 E. Europe
120 Egypt
125 EET (Helsinki, Riga, Tallinn)
130 EET (Athens, Istanbul, Minsk)
135 Israel: Jerusalem
140 S. Africa: Harare, Pretoria
145 Russian
150 Arab
155 E. Africa
160 Iran
165 Arabian
170 Caucasus Pacific (U.S. and Canada)
175 Afghanistan
180 Russia Yekaterinburg
185 W. Asia
190 India
193 Nepal
195 Central Asia
200 Sri Lanka
201 N. Central Asia
203 Myanmar: Rangoon
205 S.E. Asia
207 N. Asia
210 China
215 Singapore
220 Taipei
225 W. Australia
227 N. Asia East
230 Korea: Seoul
235 Tokyo
240 Sakha Yakutsk
245 A.U.S. Central: Darwin
250 Central Australia
255 A.U.S. Eastern
260 E. Australia
265 Tasmania
270 Vladivostok
275 W. Pacific
280 Central Pacific
285 Fiji
290 New Zealand
300 Tonga</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AutoLogonCount</maml:name>
				<maml:description>
					<maml:para>Specifies the number of times the virtual machine should automatically login as an administrator. The valid values are in the range between 0 and Int32.MaxValue. Specifying 0 disables auto log-on. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Domain</maml:name>
				<maml:description>
					<maml:para>Specifies the domain name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Workgroup</maml:name>
				<maml:description>
					<maml:para>Specifies the workgroup. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DomainCredentials</maml:name>
				<maml:description>
					<maml:para>Specifies credentials for authentication with the specified domain. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DomainUsername</maml:name>
				<maml:description>
					<maml:para>Specifies a username for authentication with the specified domain. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DomainPassword</maml:name>
				<maml:description>
					<maml:para>Specifies a password for authentication with the specified domain. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ProductKey</maml:name>
				<maml:description>
					<maml:para>Specifies the MS product key. If the guest OS version is earlier than Vista, this parameter is required in order to make the customization unattended. For Windows Vista and later, the OS customization is unattended no matter if the ProductKey parameter is set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NamingScheme</maml:name>
				<maml:description>
					<maml:para>Specifies the naming scheme for the virtual machine. The valid values are Custom, Fixed, Prefix, and Vm.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NamingPrefix</maml:name>
				<maml:description>
					<maml:para>The behavior of this parameter is related to the customization scheme. If a Custom customization scheme is specified, NamingPrefix is an optional argument that is passed to the utility for this IP address. The value of this field is defined by the user in the script. If a Fixed customization scheme is specified, NamingPrefix should indicate the name of the virtual machine. If a Prefix customization scheme is set, NamingPrefix indicates the prefix to which a unique number is appended.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Provides a new description for the specification.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>LicenseMode</maml:name>
				<maml:description>
					<maml:para>Specifies the license mode of the Windows 2000/2003 guest operating system. The valid values are Perseat, Perserver, and NotSpecified. If Perserver is set, use the LicenseMaxConnection parameter to define the maximum number of connections. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >LicenseMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>LicenseMaxConnections</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum connections for server license mode. Use this parameter only if the LicenseMode parameter is set to Perserver. This parameter applies only to Windows operating systems.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>OSCustomizationSpec</maml:name>
			<maml:description>
				<maml:para>Specifies the specification you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OSCustomizationSpec[]</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationSpec[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>NewSpec</maml:name>
			<maml:description>
				<maml:para>If no other parameters are provided, this parameter specifies a specification from which to retrieve information for the updated specification.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">OSCustomizationSpec</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Sets the type of the OS customization specification. The valid values are Persistent and NonPersistent.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">OSCustomizationSpecType</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationSpecType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the OS customization specification.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DnsServer</maml:name>
			<maml:description>
				<maml:para>Specifies the DNS server. This parameter applies only to Linux operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DnsSuffix</maml:name>
			<maml:description>
				<maml:para>Specifies the DNS suffix. This parameter applies only to Linux operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Domain</maml:name>
			<maml:description>
				<maml:para>Specifies the domain name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>empty string</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NamingScheme</maml:name>
			<maml:description>
				<maml:para>Specifies the naming scheme for the virtual machine. The valid values are Custom, Fixed, Prefix, and Vm.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Vm</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NamingPrefix</maml:name>
			<maml:description>
				<maml:para>The behavior of this parameter is related to the customization scheme. If a Custom customization scheme is specified, NamingPrefix is an optional argument that is passed to the utility for this IP address. The value of this field is defined by the user in the script. If a Fixed customization scheme is specified, NamingPrefix should indicate the name of the virtual machine. If a Prefix customization scheme is set, NamingPrefix indicates the prefix to which a unique number is appended.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>empty string</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Provides a new description for the specification.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>empty string</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FullName</maml:name>
			<maml:description>
				<maml:para>Specifies the administrator&#39;s full name. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OrgName</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the organization to which the administrator belongs.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChangeSID</maml:name>
			<maml:description>
				<maml:para>Indicates that the customization should modify the system security identifier (SID). This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeleteAccounts</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to delete all user accounts. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuiRunOnce</maml:name>
			<maml:description>
				<maml:para>Provides a list of commands to run after first user login. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the new OS administrator&#39;s password. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeZone</maml:name>
			<maml:description>
				<maml:para>Specifies the name or ID of the time zone for a Windows guest OS only. Using wildcards is supported. The following time zones are available:


000 Int&#39;l Dateline
001 Samoa
002 Hawaii
003 Alaskan
004 Pacific
010 Mountain (U.S. and Canada)
015 U.S. Mountain: Arizona
020 Central (U.S. and Canada)
025 Canada Central
030 Mexico
033 Central America
035 Eastern (U.S. and Canada)
040 U.S. Eastern: Indiana (East)
045 S.A. Pacific
050 Atlantic (Canada)
055 S.A. Western
056 Pacific S.A.
060 Newfoundland
065 E. South America
070 S.A. Eastern
073 Greenland
075 Mid-Atlantic
080 Azores
083 Cape Verde Islands
085 GMT (Greenwich Mean Time)
090 GMT Greenwich
095 Central Europe
100 Central European
105 Romance
110 W. Europe
113 W. Central Africa
115 E. Europe
120 Egypt
125 EET (Helsinki, Riga, Tallinn)
130 EET (Athens, Istanbul, Minsk)
135 Israel: Jerusalem
140 S. Africa: Harare, Pretoria
145 Russian
150 Arab
155 E. Africa
160 Iran
165 Arabian
170 Caucasus Pacific (U.S. and Canada)
175 Afghanistan
180 Russia Yekaterinburg
185 W. Asia
190 India
193 Nepal
195 Central Asia
200 Sri Lanka
201 N. Central Asia
203 Myanmar: Rangoon
205 S.E. Asia
207 N. Asia
210 China
215 Singapore
220 Taipei
225 W. Australia
227 N. Asia East
230 Korea: Seoul
235 Tokyo
240 Sakha Yakutsk
245 A.U.S. Central: Darwin
250 Central Australia
255 A.U.S. Eastern
260 E. Australia
265 Tasmania
270 Vladivostok
275 W. Pacific
280 Central Pacific
285 Fiji
290 New Zealand
300 Tonga</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AutoLogonCount</maml:name>
			<maml:description>
				<maml:para>Specifies the number of times the virtual machine should automatically login as an administrator. The valid values are in the range between 0 and Int32.MaxValue. Specifying 0 disables auto log-on. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Workgroup</maml:name>
			<maml:description>
				<maml:para>Specifies the workgroup. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>empty string</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainCredentials</maml:name>
			<maml:description>
				<maml:para>Specifies credentials for authentication with the specified domain. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainUsername</maml:name>
			<maml:description>
				<maml:para>Specifies a username for authentication with the specified domain. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainPassword</maml:name>
			<maml:description>
				<maml:para>Specifies a password for authentication with the specified domain. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProductKey</maml:name>
			<maml:description>
				<maml:para>Specifies the MS product key. If the guest OS version is earlier than Vista, this parameter is required in order to make the customization unattended. For Windows Vista and later, the OS customization is unattended no matter if the ProductKey parameter is set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>empty string</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LicenseMode</maml:name>
			<maml:description>
				<maml:para>Specifies the license mode of the Windows 2000/2003 guest operating system. The valid values are Perseat, Perserver, and NotSpecified. If Perserver is set, use the LicenseMaxConnection parameter to define the maximum number of connections. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">LicenseMode</command:parameterValue>
			<dev:type>
				<maml:name>LicenseMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>NotSpecified</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LicenseMaxConnections</maml:name>
			<maml:description>
				<maml:para>Specifies the maximum connections for server license mode. Use this parameter only if the LicenseMode parameter is set to Perserver. This parameter applies only to Windows operating systems.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$null</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified OSCustomizationSpec objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>When the ProductKey parameter is not specified, the OS customization is unattended only if the Windows guest operating system version is Vista or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-OSCustomizationSpec Spec -Description &#39;This is a test OS customization specification.&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Updates the description of the Spec OS customization specification.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-OSCustomizationSpec.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-OSCustomizationSpec</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-PowerCLIConfiguration</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the vSphere PowerCLI configuration.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>PowerCLIConfiguration</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the vSphere PowerCLI configuration.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-PowerCLIConfiguration</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>ProxyPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies whether vSphere PowerCLI uses a system proxy server to connect to the vCenter Server system. The valid values are NoProxy and UseSystemProxy.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ProxyPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DefaultVIServerMode</maml:name>
				<maml:description>
					<maml:para>Specifies the server connection mode. The new configuration takes effect immediately after you run the cmdlet. The following values are valid:

- Single - Switching to &quot;single&quot; removes all server connections except the last established one. If no target servers are specified, cmdlets run only on the last connected server.

- Multiple - All servers connected after switching to &quot;multiple&quot; mode are stored together with the current server connection in an array variable. If no target servers are specified, cmdlets run on the servers in the variable.

For more information on default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DefaultVIServerMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InvalidCertificateAction</maml:name>
				<maml:description>
					<maml:para>Define the action to take when an attempted connection to a server fails due to a certificate error. The following values are valid:

Unset - this is the default value and it acts as a “Warn” value for Connect-VIServer and as “Prompt” for “Connect-CloudServer”.

Prompt - if the server certificate is not trusted the cmdlet will prompt you for a course of action before it continues. There are several options:
            Deny - no connection will be established.
            Accept for once - accept the connection only for the current PowerCLI session. You will be prompted again if you attempt to connect to the same server from other processes.
            Accept Permanently - the action will add this certificate as an exception in the “SSL Certificate Exceptions” user list. The Connect-VIServer and Connect-CIServer cmdlets will never prompt again what action to take for this particulate certificate and server.
            Accept For All Users - same as above, however the exception will be added to all user lists, which is common for all Windows accounts on the current machine.

Fail - the cmdlet will not establish connection if the certificate is not valid.

Ignore - the cmdlet will establish the connection without taking into account that the certificate is invalid.

Warn - the cmdlet will display a warning saying that the certificate is not valid, the reason why it is not considered valid and then will print additional information about the certificate.

For more information about invalid certificates, run &#39;Get-Help about_invalid_certificates&#39;.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >BadCertificateAction</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ParticipateInCeip</maml:name>
				<maml:description>
					<maml:para>Specifies if PowerCLI should send anonymous usage information to VMware. For more information about the Customer Experience Improvement Program (CEIP), see the PowerCLI User&#39;s Guide. Setting this option is valid only for the AllUsers and User configuration scopes. Changing this setting requires a restart of PowerCLI before it takes effect.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CEIPDataTransferProxyPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the proxy policy for the connection through which Customer Experience Improvement Program (CEIP) data is sent to VMware. Setting this option is valid only when ParticipateInCEIP option is set to $true. Changing this setting requires a restart of PowerCLI before it takes effect.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ProxyPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DisplayDeprecationWarnings</maml:name>
				<maml:description>
					<maml:para>Indicates whether you want to see warnings about deprecated elements.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WebOperationTimeoutSeconds</maml:name>
				<maml:description>
					<maml:para>Defines the timeout for Web operations. The default value is 300 sec. To specify an infinite operation timeout, pass a negative integer to this parameter. Changing this setting requires a restart of PowerCLI before it takes effect.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMConsoleWindowBrowser</maml:name>
				<maml:description>
					<maml:para>Specifies the Web browser to be used for opening virtual machine console windows (by using the Open-VMConsoleWindow cmdlet). The browser must be 32-bit.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Scope</maml:name>
				<maml:description>
					<maml:para>Specifies the scope of the setting that you want to modify. The parameter accepts Sesstion, User and All Users values.
     *Session - the setting is valid for the current vSphere PowerCLI session only and overrides any User and All Users settings.
     *User - the setting is valid for the current Windows user only, overrides All Users settings, and is applied only if a Session setting cannot be detected.
     *All Users - the setting is valid for all users and is applied only if Session and User settings cannot be detected.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ConfigurationScope</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>ProxyPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies whether vSphere PowerCLI uses a system proxy server to connect to the vCenter Server system. The valid values are NoProxy and UseSystemProxy.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ProxyPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ProxyPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultVIServerMode</maml:name>
			<maml:description>
				<maml:para>Specifies the server connection mode. The new configuration takes effect immediately after you run the cmdlet. The following values are valid:

- Single - Switching to &quot;single&quot; removes all server connections except the last established one. If no target servers are specified, cmdlets run only on the last connected server.

- Multiple - All servers connected after switching to &quot;multiple&quot; mode are stored together with the current server connection in an array variable. If no target servers are specified, cmdlets run on the servers in the variable.

For more information on default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DefaultVIServerMode</command:parameterValue>
			<dev:type>
				<maml:name>DefaultVIServerMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InvalidCertificateAction</maml:name>
			<maml:description>
				<maml:para>Define the action to take when an attempted connection to a server fails due to a certificate error. The following values are valid:

Unset - this is the default value and it acts as a “Warn” value for Connect-VIServer and as “Prompt” for “Connect-CloudServer”.

Prompt - if the server certificate is not trusted the cmdlet will prompt you for a course of action before it continues. There are several options:
            Deny - no connection will be established.
            Accept for once - accept the connection only for the current PowerCLI session. You will be prompted again if you attempt to connect to the same server from other processes.
            Accept Permanently - the action will add this certificate as an exception in the “SSL Certificate Exceptions” user list. The Connect-VIServer and Connect-CIServer cmdlets will never prompt again what action to take for this particulate certificate and server.
            Accept For All Users - same as above, however the exception will be added to all user lists, which is common for all Windows accounts on the current machine.

Fail - the cmdlet will not establish connection if the certificate is not valid.

Ignore - the cmdlet will establish the connection without taking into account that the certificate is invalid.

Warn - the cmdlet will display a warning saying that the certificate is not valid, the reason why it is not considered valid and then will print additional information about the certificate.

For more information about invalid certificates, run &#39;Get-Help about_invalid_certificates&#39;.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">BadCertificateAction</command:parameterValue>
			<dev:type>
				<maml:name>BadCertificateAction</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Unset</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ParticipateInCeip</maml:name>
			<maml:description>
				<maml:para>Specifies if PowerCLI should send anonymous usage information to VMware. For more information about the Customer Experience Improvement Program (CEIP), see the PowerCLI User&#39;s Guide. Setting this option is valid only for the AllUsers and User configuration scopes. Changing this setting requires a restart of PowerCLI before it takes effect.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CEIPDataTransferProxyPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the proxy policy for the connection through which Customer Experience Improvement Program (CEIP) data is sent to VMware. Setting this option is valid only when ParticipateInCEIP option is set to $true. Changing this setting requires a restart of PowerCLI before it takes effect.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ProxyPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ProxyPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayDeprecationWarnings</maml:name>
			<maml:description>
				<maml:para>Indicates whether you want to see warnings about deprecated elements.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WebOperationTimeoutSeconds</maml:name>
			<maml:description>
				<maml:para>Defines the timeout for Web operations. The default value is 300 sec. To specify an infinite operation timeout, pass a negative integer to this parameter. Changing this setting requires a restart of PowerCLI before it takes effect.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>300</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMConsoleWindowBrowser</maml:name>
			<maml:description>
				<maml:para>Specifies the Web browser to be used for opening virtual machine console windows (by using the Open-VMConsoleWindow cmdlet). The browser must be 32-bit.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Scope</maml:name>
			<maml:description>
				<maml:para>Specifies the scope of the setting that you want to modify. The parameter accepts Sesstion, User and All Users values.
     *Session - the setting is valid for the current vSphere PowerCLI session only and overrides any User and All Users settings.
     *User - the setting is valid for the current Windows user only, overrides All Users settings, and is applied only if a Session setting cannot be detected.
     *All Users - the setting is valid for all users and is applied only if Session and User settings cannot be detected.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ConfigurationScope</command:parameterValue>
			<dev:type>
				<maml:name>ConfigurationScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>One or more modified PowerCLIConfiguration objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-PowerCLIConfiguration -ProxyPolicy NoProxy -Scope Session</dev:code>
  			<dev:remarks>
				<maml:para>Modifies the proxy policy of vSphere PowerCLI for the Session scope.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-PowerCLIConfiguration -ProxyPolicy NoProxy -DefaultVIServerMode Single</dev:code>
  			<dev:remarks>
				<maml:para>Changes the default server connection mode and the proxy policy of vSphere PowerCLI for the AllUsers scope.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-PowerCLIConfiguration -DefaultVIServerMode &#39;Single&#39; -Scope ([VMware.VimAutomation.ViCore.Types.V1.ConfigurationScope]::User -bor [VMware.VimAutomation.ViCore.Types.V1.ConfigurationScope]::AllUsers)</dev:code>
  			<dev:remarks>
				<maml:para>Changes the default server connection mode of vSphere PowerCLI for the User and AllUsers scopes.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-PowerCLIConfiguration.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-PowerCLIConfiguration</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-ResourcePool</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the properties of the specified resource pool.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ResourcePool</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the properties of the specified resource pool.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ResourcePool</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>ResourcePool</maml:name>
				<maml:description>
					<maml:para>Specifies the resource pool you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ResourcePool[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the resource pool.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuExpandableReservation</maml:name>
				<maml:description>
					<maml:para>Indicates that the CPU reservation can grow beyond the specified value if the parent resource pool has unreserved resources.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuLimitMhz</maml:name>
				<maml:description>
					<maml:para>Specifies a CPU usage limit in MHz. If this parameter is set, utilization will not exceed this limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuReservationMhz</maml:name>
				<maml:description>
					<maml:para>Specifies the guaranteed available CPU in MHz.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuSharesLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU allocation level for this pool. This property is used in relative allocation between resource consumers. This parameter accepts Custom, High, Low, and Normal values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SharesLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemExpandableReservation</maml:name>
				<maml:description>
					<maml:para>Indicates that the memory reservation can grow beyond the specified value if the parent resource pool has unreserved resources.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemLimitMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemLimitGB instead.
Specifies a memory usage limit in megabytes (MB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemLimitGB</maml:name>
				<maml:description>
					<maml:para>Specifies a memory usage limit in gigabytes (GB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemReservationMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemReservationGB instead.
Specifies the guaranteed available memory in megabytes (MB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemReservationGB</maml:name>
				<maml:description>
					<maml:para>Specifies the guaranteed available memory in gigabytes (GB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemSharesLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the memory allocation level for the resource pool. This property is used in relative allocation between resource consumers. This parameter accepts Custom, High, Low, and Normal values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SharesLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumCpuShares</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU allocation level for the resource pool. This property is used in relative allocation between resource consumers. This parameter is ignored unless CpuSharesLevel is set to Custom.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumMemShares</maml:name>
				<maml:description>
					<maml:para>Specifies the memory allocation level for the resource pool. This property is used in relative allocation between resource consumers. This parameter is ignored unless MemSharesLevel is set to Custom.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>ResourcePool</maml:name>
			<maml:description>
				<maml:para>Specifies the resource pool you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ResourcePool[]</command:parameterValue>
			<dev:type>
				<maml:name>ResourcePool[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the resource pool.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuExpandableReservation</maml:name>
			<maml:description>
				<maml:para>Indicates that the CPU reservation can grow beyond the specified value if the parent resource pool has unreserved resources.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuLimitMhz</maml:name>
			<maml:description>
				<maml:para>Specifies a CPU usage limit in MHz. If this parameter is set, utilization will not exceed this limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuReservationMhz</maml:name>
			<maml:description>
				<maml:para>Specifies the guaranteed available CPU in MHz.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuSharesLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU allocation level for this pool. This property is used in relative allocation between resource consumers. This parameter accepts Custom, High, Low, and Normal values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SharesLevel</command:parameterValue>
			<dev:type>
				<maml:name>SharesLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemExpandableReservation</maml:name>
			<maml:description>
				<maml:para>Indicates that the memory reservation can grow beyond the specified value if the parent resource pool has unreserved resources.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemLimitMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemLimitGB instead.
Specifies a memory usage limit in megabytes (MB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemLimitGB</maml:name>
			<maml:description>
				<maml:para>Specifies a memory usage limit in gigabytes (GB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemReservationMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemReservationGB instead.
Specifies the guaranteed available memory in megabytes (MB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemReservationGB</maml:name>
			<maml:description>
				<maml:para>Specifies the guaranteed available memory in gigabytes (GB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemSharesLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the memory allocation level for the resource pool. This property is used in relative allocation between resource consumers. This parameter accepts Custom, High, Low, and Normal values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SharesLevel</command:parameterValue>
			<dev:type>
				<maml:name>SharesLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumCpuShares</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU allocation level for the resource pool. This property is used in relative allocation between resource consumers. This parameter is ignored unless CpuSharesLevel is set to Custom.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumMemShares</maml:name>
			<maml:description>
				<maml:para>Specifies the memory allocation level for the resource pool. This property is used in relative allocation between resource consumers. This parameter is ignored unless MemSharesLevel is set to Custom.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified ResourcePool objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-ResourcePool -Resourcepool Resourcepool -NumCpuShares  512 -MemLimitGB 4</dev:code>
  			<dev:remarks>
				<maml:para>Sets the CPU allocation level and the limit on memory usage in GB for the resource pool named Resourcepool.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-ResourcePool.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ResourcePool</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-ScsiController</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the specified SCSI controllers.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ScsiController</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the specified SCSI controllers. Set-ScsiController cannot set both the Type and BusSharing parameters at the same time. First run the cmdlet to set the type and then run it again to configure the bus sharing mode.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ScsiController</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>ScsiController</maml:name>
				<maml:description>
					<maml:para>Specifies the SCSI controller you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ScsiController[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>BusSharingMode</maml:name>
				<maml:description>
					<maml:para>Specifies the bus sharing mode of the SCSI controller. The valid values are NoSharing, Physical, and Virtual.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScsiBusSharingMode</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the SCSI controller. The valid values are ParaVirtual, VirtualBusLogic, VirtualLsiLogic, and VirtualLsiLogicSAS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScsiControllerType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>ScsiController</maml:name>
			<maml:description>
				<maml:para>Specifies the SCSI controller you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ScsiController[]</command:parameterValue>
			<dev:type>
				<maml:name>ScsiController[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BusSharingMode</maml:name>
			<maml:description>
				<maml:para>Specifies the bus sharing mode of the SCSI controller. The valid values are NoSharing, Physical, and Virtual.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ScsiBusSharingMode</command:parameterValue>
			<dev:type>
				<maml:name>ScsiBusSharingMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the SCSI controller. The valid values are ParaVirtual, VirtualBusLogic, VirtualLsiLogic, and VirtualLsiLogicSAS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ScsiControllerType</command:parameterValue>
			<dev:type>
				<maml:name>ScsiControllerType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified ScsiController objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-ScsiController -VM VM | Set-ScsiController -BusSharingMode Physical</dev:code>
  			<dev:remarks>
				<maml:para>Configures the bus sharing mode of the SCSI controllers of a virtual machine to Physical mode.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$scsiController = Get-HardDisk -VM VM | Select -First 1 | Get-ScsiController

Set-ScsiController -ScsiController $scsiController -Type VirtualLsiLogic</dev:code>
  			<dev:remarks>
				<maml:para>Changes the type of the SCSI controller of the first hard disk of the VM virtual machine to VirtualLsiLogic.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-ScsiController.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ScsiController</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ScsiController</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-ScsiLun</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the configuration of a SCSI device.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ScsiLun</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the configuration of a SCSI device.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ScsiLun</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>MultipathPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the policy that the logical unit must use when choosing a path. The following values are valid:

Fixed - uses the preferred path whenever possible.
RoundRobin - load balance.
MostRecentlyUsed - uses the most recently used path.
Unknown - supported only when connected to vCenter Server 4.1/ESX 4.1.

Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScsiLunMultipathPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>PreferredPath</maml:name>
				<maml:description>
					<maml:para>Specifies the preferred path to access the SCSI logical unit. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ScsiLunPath</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>ScsiLun</maml:name>
				<maml:description>
					<maml:para>Specifies the SCSI device you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ScsiLun[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CommandsToSwitchPath</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum number of I/O requests to be issued on a given path before the system tries to select a different path. Modifying this setting affects all ScsiLun devices that are connected to the same ESX host. The default value is 50. Setting this parameter to zero (0) disables switching based on commands. This parameter is not supported on vCenter Server 4.x.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>BlocksToSwitchPath</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum number of I/O blocks to be issued on a given path before the system tries to select a different path. Modifying this setting affects all ScsiLun devices that are connected to the same ESX/ESXi host. The default value is 2048. Setting this parameter to zero (0) disables switching based on blocks.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoCommandsSwitch</maml:name>
				<maml:description>
					<maml:para>Indicates that switching based on commands is disabled. Not supported on vCenter Server 4.x.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoBlocksSwitch</maml:name>
				<maml:description>
					<maml:para>Indicates that switching based on blocks is disabled. Not supported on vCenter Server 4.x.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>MultipathPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the policy that the logical unit must use when choosing a path. The following values are valid:

Fixed - uses the preferred path whenever possible.
RoundRobin - load balance.
MostRecentlyUsed - uses the most recently used path.
Unknown - supported only when connected to vCenter Server 4.1/ESX 4.1.

Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ScsiLunMultipathPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ScsiLunMultipathPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>PreferredPath</maml:name>
			<maml:description>
				<maml:para>Specifies the preferred path to access the SCSI logical unit. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ScsiLunPath</command:parameterValue>
			<dev:type>
				<maml:name>ScsiLunPath</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>ScsiLun</maml:name>
			<maml:description>
				<maml:para>Specifies the SCSI device you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ScsiLun[]</command:parameterValue>
			<dev:type>
				<maml:name>ScsiLun[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CommandsToSwitchPath</maml:name>
			<maml:description>
				<maml:para>Specifies the maximum number of I/O requests to be issued on a given path before the system tries to select a different path. Modifying this setting affects all ScsiLun devices that are connected to the same ESX host. The default value is 50. Setting this parameter to zero (0) disables switching based on commands. This parameter is not supported on vCenter Server 4.x.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>50</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BlocksToSwitchPath</maml:name>
			<maml:description>
				<maml:para>Specifies the maximum number of I/O blocks to be issued on a given path before the system tries to select a different path. Modifying this setting affects all ScsiLun devices that are connected to the same ESX/ESXi host. The default value is 2048. Setting this parameter to zero (0) disables switching based on blocks.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>2048</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoCommandsSwitch</maml:name>
			<maml:description>
				<maml:para>Indicates that switching based on commands is disabled. Not supported on vCenter Server 4.x.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoBlocksSwitch</maml:name>
			<maml:description>
				<maml:para>Indicates that switching based on blocks is disabled. Not supported on vCenter Server 4.x.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified ScsiLun objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$scsilun = Get-ScsiLun -VMHost 10.23.123.100 -LunType disk

Set-ScsiLun -ScsiLun $scsilun -CommandsToSwitchPath 100</dev:code>
  			<dev:remarks>
				<maml:para>Configures the SCSI Lun device of the virtual machine host, so that the maximum number of I/O requests to be issued before the system tries to select a different path is 100.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-ScsiLun.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ScsiLun</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ScsiLunPath</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ScsiLunPath</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-ScsiLunPath</command:name>
		<maml:description>
			<maml:para>This cmdlet configures a vmhba path to a SCSI device.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ScsiLunPath</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet configures a vmhba path to a SCSI device.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ScsiLunPath</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Active</maml:name>
				<maml:description>
					<maml:para>Indicates that the specified path is active.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>ScsiLunPath</maml:name>
				<maml:description>
					<maml:para>Specifies a path to the SCSI logical unit you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >ScsiLunPath[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Preferred</maml:name>
				<maml:description>
					<maml:para>Indicates that the specified path is preferred. Only one path can be preferred, so when a path is made preferred, the preference is removed from the previously preferred path.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Active</maml:name>
			<maml:description>
				<maml:para>Indicates that the specified path is active.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>ScsiLunPath</maml:name>
			<maml:description>
				<maml:para>Specifies a path to the SCSI logical unit you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ScsiLunPath[]</command:parameterValue>
			<dev:type>
				<maml:name>ScsiLunPath[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Preferred</maml:name>
			<maml:description>
				<maml:para>Indicates that the specified path is preferred. Only one path can be preferred, so when a path is made preferred, the preference is removed from the previously preferred path.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified ScsiLunPath objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$scsilun = Get-ScsiLun -VMHost 10.23.123.100 -LunType disk

$scsipath = Get-ScsiLunPath -ScsiLun $scsilun

Set-ScsiLunPath -ScsiLunPath $scsipath -Preferred $true</dev:code>
  			<dev:remarks>
				<maml:para>Sets the specified SCSI Lun path as preferred.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-ScsiLunPath.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ScsiLunPath</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ScsiLun</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ScsiLun</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-SecurityPolicy</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the security policy for virtual port groups or the default port security policy for virtual switches.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>SecurityPolicy</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the security policy for virtual port groups or the default port security policy for virtual switches. Specifying a parameter automatically changes the parameter&#39;s Inherited setting to &#39;false&#39;.  Specifying the parameter&#39;s Inherited setting as &#39;true&#39; automatically applies the switch level security policy to the parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-SecurityPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualSwitchPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual switch security policy that you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualSwitchSecurityPolicy[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AllowPromiscuous</maml:name>
				<maml:description>
					<maml:para>Specifies whether promiscuous mode is enabled for the corresponding virtual port group or switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ForgedTransmits</maml:name>
				<maml:description>
					<maml:para>Specifies whether forged transmits are enabled for the corresponding virtual port group or switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MacChanges</maml:name>
				<maml:description>
					<maml:para>Specifies whether MAC address changes are enabled for the corresponding virtual port group or switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-SecurityPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualPortGroupPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual port group security policy that you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualPortgroupSecurityPolicy[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AllowPromiscuousInherited</maml:name>
				<maml:description>
					<maml:para>Specifies whether the AllowPromiscuous setting is inherited from the parent virtual switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ForgedTransmitsInherited</maml:name>
				<maml:description>
					<maml:para>Specifies whether the ForgedTransmits setting is inherited from the parent virtual switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MacChangesInherited</maml:name>
				<maml:description>
					<maml:para>Specifies whether the MacChanges setting is inherited from the parent virtual switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AllowPromiscuous</maml:name>
				<maml:description>
					<maml:para>Specifies whether promiscuous mode is enabled for the corresponding virtual port group or switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ForgedTransmits</maml:name>
				<maml:description>
					<maml:para>Specifies whether forged transmits are enabled for the corresponding virtual port group or switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MacChanges</maml:name>
				<maml:description>
					<maml:para>Specifies whether MAC address changes are enabled for the corresponding virtual port group or switch.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualSwitchPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual switch security policy that you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualSwitchSecurityPolicy[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitchSecurityPolicy[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowPromiscuous</maml:name>
			<maml:description>
				<maml:para>Specifies whether promiscuous mode is enabled for the corresponding virtual port group or switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ForgedTransmits</maml:name>
			<maml:description>
				<maml:para>Specifies whether forged transmits are enabled for the corresponding virtual port group or switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MacChanges</maml:name>
			<maml:description>
				<maml:para>Specifies whether MAC address changes are enabled for the corresponding virtual port group or switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualPortGroupPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual port group security policy that you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualPortgroupSecurityPolicy[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualPortgroupSecurityPolicy[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowPromiscuousInherited</maml:name>
			<maml:description>
				<maml:para>Specifies whether the AllowPromiscuous setting is inherited from the parent virtual switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ForgedTransmitsInherited</maml:name>
			<maml:description>
				<maml:para>Specifies whether the ForgedTransmits setting is inherited from the parent virtual switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MacChangesInherited</maml:name>
			<maml:description>
				<maml:para>Specifies whether the MacChanges setting is inherited from the parent virtual switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The modified VirtualSwitchSecurityPolicy or VirtualPortgroupSecurityPolicy objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VirtualSwitch -Name &quot;MyVirtualSwitch&quot; | Get-SecurityPolicy | Set-SecurityPolicy -MacChanges $false</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a virtual switch named &quot;MyVirtualSwitch&quot; and updates its security policy to forbid MAC address changes.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VirtualPortgroup -Name &quot;MyVirtualPortGroup&quot; | Get-SecurityPolicy | Set-SecurityPolicy -ForgedTransmitsInherited $true</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a virtual port group named &quot;MyVirtualPortGroup&quot; and updates the security policy to inherit the setting value for controlling outbound frames filtering by MAC address from its parent.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-SecurityPolicy.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-SecurityPolicy</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-Snapshot</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the specified virtual machine snapshot.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Snapshot</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the name and the description of the specified virtual machine snapshot.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Snapshot</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Snapshot</maml:name>
				<maml:description>
					<maml:para>Specifies the snapshot whose properties you want to change.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Snapshot[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the snapshot.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Provides a new description for the snapshot.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Snapshot</maml:name>
			<maml:description>
				<maml:para>Specifies the snapshot whose properties you want to change.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Snapshot[]</command:parameterValue>
			<dev:type>
				<maml:name>Snapshot[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the snapshot.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Provides a new description for the snapshot.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified Snapshot objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-Snapshot -Snapshot $snapshot -Name BeforePatch -Description &quot;Before windows update&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Sets the name and the description of the snapshot in the $snapshot variable.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM | Get-Snapshot -Name &quot;InitialState&quot; | Set-Snapshot -Description &quot;This snapshot is created right after the OS installation.&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Updates the description of all snapshots with name InitialState, from all virtual machines.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-Snapshot.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Snapshot</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-StatInterval</command:name>
		<maml:description>
			<maml:para>This cmdlet changes the statistics interval that is specified by the provided parameters.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>StatInterval</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet changes the statistics interval that is specified by the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-StatInterval</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>SamplingPeriodSecs</maml:name>
				<maml:description>
					<maml:para>Specifies a new sampling period in seconds.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>StorageTimeSecs</maml:name>
				<maml:description>
					<maml:para>Specifies a new time period in seconds, for which the statistics information is kept.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Interval</maml:name>
				<maml:description>
					<maml:para>Specifies the statistics interval you want to change.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >StatInterval[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "4" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>SamplingPeriodSecs</maml:name>
			<maml:description>
				<maml:para>Specifies a new sampling period in seconds.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>StorageTimeSecs</maml:name>
			<maml:description>
				<maml:para>Specifies a new time period in seconds, for which the statistics information is kept.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>Interval</maml:name>
			<maml:description>
				<maml:para>Specifies the statistics interval you want to change.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">StatInterval[]</command:parameterValue>
			<dev:type>
				<maml:name>StatInterval[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="4">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified StatInterval objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-StatInterval -Interval &quot;past day&quot; -StorageTimeSecs 700000</dev:code>
  			<dev:remarks>
				<maml:para>Changes the storage time of the &quot;past day&quot; statistics interval.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-StatInterval.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Stat</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-StatType</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-StatInterval</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-Tag</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the specified tags.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Tag</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the specified tags.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Tag</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Tag</maml:name>
				<maml:description>
					<maml:para>Specifies the tags that you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Tag[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name to which the specified tags will be renamed.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Specifies the new description to set to the specified tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Tag</maml:name>
			<maml:description>
				<maml:para>Specifies the tags that you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Tag[]</command:parameterValue>
			<dev:type>
				<maml:name>Tag[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the name to which the specified tags will be renamed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Specifies the new description to set to the specified tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>One or more modified Tag objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only with vCenter Server 5.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-Tag -Name &quot;MyTag&quot; | Set-Tag -Name &quot;MyNewTag&quot; -Description &quot;MyNewDescription&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a tag named &quot;MyTag&quot; and updates its name and description.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-Tag.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Tag</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-TagCategory</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the specified tag categories.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>TagCategory</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the specified tag categories. The cardinality of a tag category can only be changed from &quot;Single&quot; to &quot;Multiple&quot;.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-TagCategory</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Category</maml:name>
				<maml:description>
					<maml:para>Specifies the tag categories that you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >TagCategory[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name to which the specified tag categories will be renamed.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Specifies the new description to set to the tag categories.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Cardinality</maml:name>
				<maml:description>
					<maml:para>Specifies the cardinality of the tag category. If not specified, the default value is &quot;Single&quot;.

&quot;Single&quot; means that only a single tag from this category can be assigned to a specific object at a time. &quot;Multiple&quot; means that more than one tag from this category can be assigned to a specific object at a time.

The only value that is accepted for this parameter is &quot;Multiple&quot;.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Cardinality</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AddEntityType</maml:name>
				<maml:description>
					<maml:para>Adds the specified entity types to the list of types that tags in this category are applicable to. If you specify &quot;All&quot; as a value, the tags will be applicable to all entity types.

This parameter accepts both PowerCLI type names and vSphere API type names. The valid PowerCLI type names are: Cluster, Datacenter, Datastore, DatastoreCluster, DistributedPortGroup, DistributedSwitch, Folder, ResourcePool, VApp, VirtualPortGroup, VirtualMachine, VM, VMHost.

For vSphere type names that are not vCenter Server API type names, a namespace prefix is used.
The format is: &lt;namespace&gt;/&lt;type&gt;
Example: &#39;vco/WorkflowItem&#39;</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Category</maml:name>
			<maml:description>
				<maml:para>Specifies the tag categories that you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">TagCategory[]</command:parameterValue>
			<dev:type>
				<maml:name>TagCategory[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the name to which the specified tag categories will be renamed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Specifies the new description to set to the tag categories.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cardinality</maml:name>
			<maml:description>
				<maml:para>Specifies the cardinality of the tag category. If not specified, the default value is &quot;Single&quot;.

&quot;Single&quot; means that only a single tag from this category can be assigned to a specific object at a time. &quot;Multiple&quot; means that more than one tag from this category can be assigned to a specific object at a time.

The only value that is accepted for this parameter is &quot;Multiple&quot;.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Cardinality</command:parameterValue>
			<dev:type>
				<maml:name>Cardinality</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AddEntityType</maml:name>
			<maml:description>
				<maml:para>Adds the specified entity types to the list of types that tags in this category are applicable to. If you specify &quot;All&quot; as a value, the tags will be applicable to all entity types.

This parameter accepts both PowerCLI type names and vSphere API type names. The valid PowerCLI type names are: Cluster, Datacenter, Datastore, DatastoreCluster, DistributedPortGroup, DistributedSwitch, Folder, ResourcePool, VApp, VirtualPortGroup, VirtualMachine, VM, VMHost.

For vSphere type names that are not vCenter Server API type names, a namespace prefix is used.
The format is: &lt;namespace&gt;/&lt;type&gt;
Example: &#39;vco/WorkflowItem&#39;</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>One or more modified TagCategory objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only with vCenter Server 5.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-TagCategory &quot;MyTagCategory&quot; | Set-TagCategory -Name &quot;MyNewCategoryName&quot; -Description &quot;Update MyTagCategory description&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a tag category named &quot;MyTagCategory&quot; and updates its name and description.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myTagCategory = Get-TagCategory &quot;MyTagCategory&quot;
Set-TagCategory -Category $myTagCategory -Cardinality Multiple -AddEntityType &quot;VirtualMachine&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves a tag category named &quot;MyTagCategory&quot; and updates it by allowing more than one of its tags to be assigned to a specific object at a time, as well as adding &quot;VirtualMachine&quot; to the set of applicable entity types.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-TagCategory.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-TagCategory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-Template</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the specified virtual machine template.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Template</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet changes the name and the description of a virtual machine template according to the provided parameters. The cmdlet can convert the template to a virtual machine if the value of the ToVM parameter is $true.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Template</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Specifies the template whose properties you want to change.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Template[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the template.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ToVM</maml:name>
				<maml:description>
					<maml:para>Indicates that the template is to be converted to a virtual machine.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Specifies the template whose properties you want to change.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Template[]</command:parameterValue>
			<dev:type>
				<maml:name>Template[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the template.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ToVM</maml:name>
			<maml:description>
				<maml:para>Indicates that the template is to be converted to a virtual machine.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified Template objects or zero or more VirtualMachine objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If the ToVM parameter is specified, the cmdlet returns zero or more VirtualMachine objects. Otherwise, the cmdlet returns the zero or more modified Template objects.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-Template -Template $template -Name Template2</dev:code>
  			<dev:remarks>
				<maml:para>Renames the template saved in the $template variable to Template2.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Set-Template -Template $template -ToVM</dev:code>
  			<dev:remarks>
				<maml:para>Converts a template to a virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-Template.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Template</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VApp</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the specified vApp.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VApp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the specified vApp.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VApp</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VApp</maml:name>
				<maml:description>
					<maml:para>Specifies the vApp that you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VApp[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Modifies the name of the vApp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuExpandableReservation</maml:name>
				<maml:description>
					<maml:para>Indicates that the CPU reservation can grow beyond the specified value if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuLimitMhz</maml:name>
				<maml:description>
					<maml:para>Specifies a CPU usage limit in MHz. If this parameter is set, utilization will not exceed this limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuReservationMhz</maml:name>
				<maml:description>
					<maml:para>Specifies the guaranteed available CPU in MHz.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuSharesLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU allocation level for this vApp. This property is used in relative allocation between resource consumers. This parameter accepts Custom, High, Low, and Normal values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SharesLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemExpandableReservation</maml:name>
				<maml:description>
					<maml:para>Indicates that the memory reservation can grow beyond the specified value if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemLimitMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemLimitGB instead.
Specifies a memory usage limit in megabytes (MB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemLimitGB</maml:name>
				<maml:description>
					<maml:para>Specifies a memory usage limit in gigabytes (GB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemReservationMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemReservationGB instead.
Specifies the guaranteed available memory in megabytes (MB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemReservationGB</maml:name>
				<maml:description>
					<maml:para>Specifies the guaranteed available memory in gigabytes (GB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemSharesLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the memory allocation level for the vApp. This property is used in relative allocation between resource consumers. This cmdlet accepts Custom, High, Low, and Normal values.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SharesLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumCpuShares</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU allocation level for the vApp. This property is used in relative allocation between resource consumers. This parameter is ignored unless the CpuSharesLevel parameter is set to Custom.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumMemShares</maml:name>
				<maml:description>
					<maml:para>Specifies the memory allocation level for the resource pool. This property is used in relative allocation between resource consumers. This parameter is ignored unless the MemSharesLevel parameter is set to Custom.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VApp</maml:name>
			<maml:description>
				<maml:para>Specifies the vApp that you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VApp[]</command:parameterValue>
			<dev:type>
				<maml:name>VApp[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Modifies the name of the vApp.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuExpandableReservation</maml:name>
			<maml:description>
				<maml:para>Indicates that the CPU reservation can grow beyond the specified value if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuLimitMhz</maml:name>
			<maml:description>
				<maml:para>Specifies a CPU usage limit in MHz. If this parameter is set, utilization will not exceed this limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuReservationMhz</maml:name>
			<maml:description>
				<maml:para>Specifies the guaranteed available CPU in MHz.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuSharesLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU allocation level for this vApp. This property is used in relative allocation between resource consumers. This parameter accepts Custom, High, Low, and Normal values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SharesLevel</command:parameterValue>
			<dev:type>
				<maml:name>SharesLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemExpandableReservation</maml:name>
			<maml:description>
				<maml:para>Indicates that the memory reservation can grow beyond the specified value if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemLimitMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemLimitGB instead.
Specifies a memory usage limit in megabytes (MB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemLimitGB</maml:name>
			<maml:description>
				<maml:para>Specifies a memory usage limit in gigabytes (GB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemReservationMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemReservationGB instead.
Specifies the guaranteed available memory in megabytes (MB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemReservationGB</maml:name>
			<maml:description>
				<maml:para>Specifies the guaranteed available memory in gigabytes (GB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemSharesLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the memory allocation level for the vApp. This property is used in relative allocation between resource consumers. This cmdlet accepts Custom, High, Low, and Normal values.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SharesLevel</command:parameterValue>
			<dev:type>
				<maml:name>SharesLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumCpuShares</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU allocation level for the vApp. This property is used in relative allocation between resource consumers. This parameter is ignored unless the CpuSharesLevel parameter is set to Custom.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumMemShares</maml:name>
			<maml:description>
				<maml:para>Specifies the memory allocation level for the resource pool. This property is used in relative allocation between resource consumers. This parameter is ignored unless the MemSharesLevel parameter is set to Custom.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VApp objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VApp -Name MyTestVApp1 | Set-VApp -CpuSharesLevel Low -MemSharesLevel Normal</dev:code>
  			<dev:remarks>
				<maml:para>Modifies the CpuSharesLevel and MemSharesLevel properties of the MyTestVApp1 virtual appliance.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myvApp = Get-VApp -Location MyDatacenter1
Set-VApp -VApp $myvApp -CpuExpandableReservation:$true -CpuLimitMhz 4000 -MemExpandableReservation:$true -MemLimitGB 2</dev:code>
  			<dev:remarks>
				<maml:para>Modifies the properties of the vApps available on the MyDatacenter1 datacenter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VApp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VIPermission</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the properties of the specified permissions.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VIPermission</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the properties of the specified permissions. The cmdlet can change the role and define whether the permission propagates down the hierarchy to child inventory objects.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VIPermission</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Permission</maml:name>
				<maml:description>
					<maml:para>Specifies the permissions you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Permission[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Role</maml:name>
				<maml:description>
					<maml:para>Specifies a new role for the permissions.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Role</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Propagate</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to propagate the new permissions to the child inventory objects.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Permission</maml:name>
			<maml:description>
				<maml:para>Specifies the permissions you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Permission[]</command:parameterValue>
			<dev:type>
				<maml:name>Permission[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Role</maml:name>
			<maml:description>
				<maml:para>Specifies a new role for the permissions.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Role</command:parameterValue>
			<dev:type>
				<maml:name>Role</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Propagate</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to propagate the new permissions to the child inventory objects.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified Permission objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VIPermission -Permission $permission -Role Role -Propagate:$false</dev:code>
  			<dev:remarks>
				<maml:para>Changes the Propagate property of the $permission permission to $false.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VIPermission.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPrivilege</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VIRole</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the privileges of the provided roles.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VIRole</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the privileges of the provided roles.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VIRole</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Role</maml:name>
				<maml:description>
					<maml:para>Specifies the roles you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Role[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Provides a new name for the provided role.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>AddPrivilege</maml:name>
				<maml:description>
					<maml:para>Specifies privileges and privilege groups you want to add to the provided roles.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Privilege[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VIRole</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Role</maml:name>
				<maml:description>
					<maml:para>Specifies the roles you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Role[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Provides a new name for the provided role.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>RemovePrivilege</maml:name>
				<maml:description>
					<maml:para>Specifies privileges or privilege groups you want to remove from the provided roles.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Privilege[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>Role</maml:name>
			<maml:description>
				<maml:para>Specifies the roles you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Role[]</command:parameterValue>
			<dev:type>
				<maml:name>Role[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Provides a new name for the provided role.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>AddPrivilege</maml:name>
			<maml:description>
				<maml:para>Specifies privileges and privilege groups you want to add to the provided roles.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Privilege[]</command:parameterValue>
			<dev:type>
				<maml:name>Privilege[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>RemovePrivilege</maml:name>
			<maml:description>
				<maml:para>Specifies privileges or privilege groups you want to remove from the provided roles.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Privilege[]</command:parameterValue>
			<dev:type>
				<maml:name>Privilege[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified Role objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VIRole -Role Role -AddPrivilege (Get-VIPrivilege -Name &#39;Create Datacenter&#39;)</dev:code>
  			<dev:remarks>
				<maml:para>Adds the &quot;Create Datacenter&quot; privilege to the Role role.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VIRole.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIRole</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPrivilege</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VIPermission</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VirtualPortGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the properties of the specified virtual port group.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VirtualPortGroup</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the properties of the specified virtual port group.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VirtualPortGroup</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the virtual port group.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VLanId</maml:name>
				<maml:description>
					<maml:para>Specifies the VLAN ID for ports using this port group. The following values are valid:

0 - specifies that you do not want to associate the port group with a VLAN.

1 to 4094 - specifies a VLAN ID for the port group.

4095 - specifies that the port group should use trunk mode, which allows the guest operating system to manage its own VLAN tags.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualPortGroup</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual port group whose properties you want to change.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualPortGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the virtual port group.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VLanId</maml:name>
			<maml:description>
				<maml:para>Specifies the VLAN ID for ports using this port group. The following values are valid:

0 - specifies that you do not want to associate the port group with a VLAN.

1 to 4094 - specifies a VLAN ID for the port group.

4095 - specifies that the port group should use trunk mode, which allows the guest operating system to manage its own VLAN tags.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualPortGroup</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual port group whose properties you want to change.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualPortGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualPortGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VirtualPortGroup objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vswitch =  New-VirtualSwitch -VMHost 10.23.112.36 -Name VSwitch

$vportgroup1 =  New-VirtualPortGroup -VirtualSwitch $vswitch -Name VPortGroup1

$vportgroup2 = Set-VirtualPortGroup -VirtualPortGroup $vportgroup1 -VLanId 1</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new virtual switch named VSwitch on the virtual machine host with IP address 10.23.112.36. Creates a new virtual port group for the new switch named VPortGroup1. Sets the VLAN ID for the ports using the VPortGroup1 group.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VirtualPortGroup.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VirtualPortGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VirtualSwitch</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the properties of the specified virtual switch.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VirtualSwitch</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the properties of the specified virtual switch. The server rounds the value of the NumPorts parameter up to the closest exact power of two, greater than the provided number. When updating NumPorts, the user needs to restart the ESX/ESXi host for the change to take effect.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VirtualSwitch</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VirtualSwitch</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual switch you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualSwitch[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>NumPorts</maml:name>
				<maml:description>
					<maml:para>Specifies the VirtualSwitch port number. The value is rounded to the closest exact power of two, greater than the provided number (for example, if the user specifies 67, this number is rounded to 128). The ESX host to which the virtual switch belongs, must be restarted for the change to take effect. Note that the port number displayed in the vSphere Client might differ from the value that you specified for the NumPorts parameter.

Note: In ESX 5.5 or later, standard virtual switches are always elastic, so the NumPorts parameter is no longer applicable and its value is ignored.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Nic</maml:name>
				<maml:description>
					<maml:para>Specifies new network interface cards for the virtual switch. The old NICs are replaced by the specified ones.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "4" >
				<maml:name>Mtu</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum transmission unit (MTU) associated with the specified virtual switch (in bytes). The MTU value must be greater than 0.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VirtualSwitch</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual switch you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualSwitch[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualSwitch[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>NumPorts</maml:name>
			<maml:description>
				<maml:para>Specifies the VirtualSwitch port number. The value is rounded to the closest exact power of two, greater than the provided number (for example, if the user specifies 67, this number is rounded to 128). The ESX host to which the virtual switch belongs, must be restarted for the change to take effect. Note that the port number displayed in the vSphere Client might differ from the value that you specified for the NumPorts parameter.

Note: In ESX 5.5 or later, standard virtual switches are always elastic, so the NumPorts parameter is no longer applicable and its value is ignored.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="3">
			<maml:name>Nic</maml:name>
			<maml:description>
				<maml:para>Specifies new network interface cards for the virtual switch. The old NICs are replaced by the specified ones.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Mtu</maml:name>
			<maml:description>
				<maml:para>Specifies the maximum transmission unit (MTU) associated with the specified virtual switch (in bytes). The MTU value must be greater than 0.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VirtualSwitch objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>The MTU field is only available on VPX 2.5  and ESX 3.5. For older VPX versions, this field is expected to be $null.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vswitch = New-VirtualSwitch -Host 10.23.115.67 -Name VSwitch

Set-VirtualSwitch -VirtualSwitch $vswitch -MTU 500</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new virtual switch named VSwitch on the virtual machine host on IP address 10.23.115.67. Then sets the virtual switch MTU to 500.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vswitch = New-VirtualSwitch -VMHost 10.23.115.67

$networkAdapters = Get-VMHostNetworkAdapter -VMHost 10.23.115.67 -Physical

$phNic = $networkAdapters[0]

$vSwitch | Set-VirtualSwitch -Nic $phNic</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new virtual switch named VSwitch on the virtual machine host on IP address 10.23.115.67. Then assigns to it a network adapter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost *.128 | Get-VirtualSwitch | Select-Object -First 1 | Set-VirtualSwitch -Nic vmnic5</dev:code>
  			<dev:remarks>
				<maml:para>Add a physical network adapter named &#39;vmnic5&#39; to the first switch of the host. Note that the &#39;vmnic5&#39; adapter must not be assigned to other virtual switches.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VirtualSwitch.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VirtualSwitch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VirtualSwitch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VirtualSwitch</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VM</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the configuration of the virtual machine.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VM</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the configuration of the virtual machine. If the OSCustomizationSpec parameter is used, the cmdlet customizes the virtual machine according to the specification. In addition, the cmdlet allows you to revert a virtual machine to a snapshot and convert a virtual machine to a template.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VM</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Specifies the version to which you want to upgrade the virtual machine. The valid values are v4, v7, v8, v9, v10, and v11. You cannot downgrade to an earlier version.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMVersion</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemoryMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemoryGB instead.
Specifies the memory size in megabytes (MB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemoryGB</maml:name>
				<maml:description>
					<maml:para>Specifies the memory size in gigabytes (GB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumCpu</maml:name>
				<maml:description>
					<maml:para>Specifies the number of virtual CPUs.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestId</maml:name>
				<maml:description>
					<maml:para>Specifies the guest operating system of the virtual machine. The valid values for specific ESX versions are listed in the description of the VirtualMachineGuestOsIdentifier enumeration type in the vSphere API Reference available at http://www.vmware.com/support/developer/vc-sdk/. Depending on the hardware configuration of the host, some of the guest operating systems might be inapplicable.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AlternateGuestName</maml:name>
				<maml:description>
					<maml:para>Specifies the full name of the guest OS for the virtual machine if the value of the GuestID parameter is set to otherGuest or otherGuest64.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies a customization specification you want to apply to the virtual machine. This works only in 32-bit mode.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpec</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HARestartPriority</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine HA restart priority. The valid values are Disabled, Low, Medium, High, and ClusterRestartPriority. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HARestartPriority</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAIsolationResponse</maml:name>
				<maml:description>
					<maml:para>Indicates whether the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The valid values are AsSpecifiedByCluster, PowerOff, and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HAIsolationResponse</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:description>
					<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, PartiallyAutomated, AsSpecifiedByCluster, and Disabled. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsAutomationLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMSwapFilePolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the swapfile placement policy. The following values are valid:

InHostDataStore - Stores the swapfile in the datastore specified by the VMSwapfileDatastoreID property of the virtual machine host. If the VMSwapfileDatastoreID property is not set or indicates a datastore with insufficient free space, the swapfile is stored in the same directory as the virtual machine. This setting might degrade the VMotion performance.

WithVM - Stores the swapfile in the same directory as the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMSwapfilePolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Notes</maml:name>
				<maml:description>
					<maml:para>Provide a description for the virtual machine. The alias of this parameter is Description.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VM</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>Snapshot</maml:name>
				<maml:description>
					<maml:para>Specifies a snapshot whose state you want to apply to the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Snapshot</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:description>
					<maml:para>Specifies a customization specification you want to apply to the virtual machine. This works only in 32-bit mode.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >OSCustomizationSpec</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HARestartPriority</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine HA restart priority. The valid values are Disabled, Low, Medium, High, and ClusterRestartPriority. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HARestartPriority</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HAIsolationResponse</maml:name>
				<maml:description>
					<maml:para>Indicates whether the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The valid values are AsSpecifiedByCluster, PowerOff, and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HAIsolationResponse</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:description>
					<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, PartiallyAutomated, AsSpecifiedByCluster, and Disabled. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DrsAutomationLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMSwapFilePolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the swapfile placement policy. The following values are valid:

InHostDataStore - Stores the swapfile in the datastore specified by the VMSwapfileDatastoreID property of the virtual machine host. If the VMSwapfileDatastoreID property is not set or indicates a datastore with insufficient free space, the swapfile is stored in the same directory as the virtual machine. This setting might degrade the VMotion performance.

WithVM - Stores the swapfile in the same directory as the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMSwapfilePolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VM</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ToTemplate</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to convert the virtual machine to a template.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Version</maml:name>
			<maml:description>
				<maml:para>Specifies the version to which you want to upgrade the virtual machine. The valid values are v4, v7, v8, v9, v10, and v11. You cannot downgrade to an earlier version.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMVersion</command:parameterValue>
			<dev:type>
				<maml:name>VMVersion</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemoryMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemoryGB instead.
Specifies the memory size in megabytes (MB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemoryGB</maml:name>
			<maml:description>
				<maml:para>Specifies the memory size in gigabytes (GB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumCpu</maml:name>
			<maml:description>
				<maml:para>Specifies the number of virtual CPUs.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestId</maml:name>
			<maml:description>
				<maml:para>Specifies the guest operating system of the virtual machine. The valid values for specific ESX versions are listed in the description of the VirtualMachineGuestOsIdentifier enumeration type in the vSphere API Reference available at http://www.vmware.com/support/developer/vc-sdk/. Depending on the hardware configuration of the host, some of the guest operating systems might be inapplicable.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AlternateGuestName</maml:name>
			<maml:description>
				<maml:para>Specifies the full name of the guest OS for the virtual machine if the value of the GuestID parameter is set to otherGuest or otherGuest64.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>OSCustomizationSpec</maml:name>
			<maml:description>
				<maml:para>Specifies a customization specification you want to apply to the virtual machine. This works only in 32-bit mode.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">OSCustomizationSpec</command:parameterValue>
			<dev:type>
				<maml:name>OSCustomizationSpec</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HARestartPriority</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine HA restart priority. The valid values are Disabled, Low, Medium, High, and ClusterRestartPriority. VMware HA is a feature that detects failed virtual machines and automatically restarts them on alternative ESX hosts. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HARestartPriority</command:parameterValue>
			<dev:type>
				<maml:name>HARestartPriority</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HAIsolationResponse</maml:name>
			<maml:description>
				<maml:para>Indicates whether the virtual machine should be powered off if a host determines that it is isolated from the rest of the compute resource. The valid values are AsSpecifiedByCluster, PowerOff, and DoNothing. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HAIsolationResponse</command:parameterValue>
			<dev:type>
				<maml:name>HAIsolationResponse</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DrsAutomationLevel</maml:name>
			<maml:description>
				<maml:para>Specifies a DRS (Distributed Resource Scheduler) automation level. The valid values are FullyAutomated, Manual, PartiallyAutomated, AsSpecifiedByCluster, and Disabled. Passing values to this parameter through a pipeline is deprecated and will be disabled in a future release. Specifying this parameter is only supported when the virtual machine is inside a cluster. Otherwise, an error is generated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DrsAutomationLevel</command:parameterValue>
			<dev:type>
				<maml:name>DrsAutomationLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMSwapFilePolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the swapfile placement policy. The following values are valid:

InHostDataStore - Stores the swapfile in the datastore specified by the VMSwapfileDatastoreID property of the virtual machine host. If the VMSwapfileDatastoreID property is not set or indicates a datastore with insufficient free space, the swapfile is stored in the same directory as the virtual machine. This setting might degrade the VMotion performance.

WithVM - Stores the swapfile in the same directory as the virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMSwapfilePolicy</command:parameterValue>
			<dev:type>
				<maml:name>VMSwapfilePolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Notes</maml:name>
			<maml:description>
				<maml:para>Provide a description for the virtual machine. The alias of this parameter is Description.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>Snapshot</maml:name>
			<maml:description>
				<maml:para>Specifies a snapshot whose state you want to apply to the virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Snapshot</command:parameterValue>
			<dev:type>
				<maml:name>Snapshot</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ToTemplate</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to convert the virtual machine to a template.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VirtualMachine objects or the newly created Template objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If the ToTemplate parameter is specified, the cmdlet returns the newly created Template objects. Otherwise, the cmdlet returns zero or more modified VirtualMachine objects.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Applying customization specs works only in 32-bit mode.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$template = Get-VM VM | Set-VM -ToTemplate -Name VMTemplate</dev:code>
  			<dev:remarks>
				<maml:para>Converts the VM virtual machine to a template and stores the template in the $template variable.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM -Location ResourcePool01 | Set-VM -MemoryGB 2 -NumCPU 2</dev:code>
  			<dev:remarks>
				<maml:para>Upgrades the memory and CPU count of the virtual machines in ResourcePool01.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VM -VM VM -Version v7</dev:code>
  			<dev:remarks>
				<maml:para>Upgrades the virtual hardware version  of the VM machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$snapshot = Get-Snapshot -VM $vm -Name &quot;Initial state&quot;

Set-VM -VM $vm -Snapshot $snapshot</dev:code>
  			<dev:remarks>
				<maml:para>Revert the VM virtual machine to the &quot;Initial state&quot; snapshot.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$spec = Get-OSCustomizationSpec -Name FinanceDepartmentSpec;

Set-VM -VM $vm -OSCustomizationSpec $spec</dev:code>
  			<dev:remarks>
				<maml:para>Apply a customization specification on the specified virtual machines.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 6 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VM $vm -Name &quot;Web Server&quot; -GuestID winNetStandardGuest -Description &quot;Company&#39;s web server&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Changes the name, description, and guest ID of the specified virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VM.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMGuestNetworkInterface</command:name>
		<maml:description>
			<maml:para>This cmdlet configures the network settings of a virtual machine using VMware Tools.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMGuestNetworkInterface</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet is deprecated. Use Invoke-VMScript instead.

This cmdlet configures the network settings of a virtual machine using VMware Tools. The cmdlet allows IP and routing configuration. You can modify Wins settings only for Windows virtual machines. The cmdlet sends a remote script which executes inside the virtual machine in the context of the specified user account. For a list of supported operating systems, see the PowerCLI User&#39;s Guide.

To run this cmdlet against vCenter Server/ESX/ESXi versions earlier than 5.0, you need to meet the following requirements:
*You must run the cmdlet on the 32-bit version of Windows PowerShell.
*You must have access to the ESX that hosts the virtual machine over TCP port 902.
*For vCenter Server/ESX/ESXi versions earlier than 4.1, you need VirtualMachine.Interact.ConsoleInteract privilege. For vCenter Server/ESX/ESXi 4.1 and later, you need VirtualMachine.Interact.GuestControl privilege.

To run this cmdlet against vCenter Server/ESXi 5.0 and later, you need VirtualMachine.GuestOperations.Execute and VirtualMachine.GuestOperations.Modify privileges.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMGuestNetworkInterface</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VmGuestNetworkInterface</maml:name>
				<maml:description>
					<maml:para>Specifies the guest network interface you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuestNetworkInterface[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WinsPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the Wins policy. The valid values are Static and Dhcp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DhcpPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Wins</maml:name>
				<maml:description>
					<maml:para>Specifies WINS servers. Use this parameter only if the WinsPolicy parameter is set to Static.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the DNS policy. The valid values are Static and Dhcp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DhcpPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Dns</maml:name>
				<maml:description>
					<maml:para>Specifies DNS addresses. Use this parameter only if The DnsPolicy parameter is set to Static.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IPPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the IP policy. The valid values are Static and Dhcp.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DhcpPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Gateway</maml:name>
				<maml:description>
					<maml:para>Specifies a gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Object</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Netmask</maml:name>
				<maml:description>
					<maml:para>Specifies a network mask.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Ip</maml:name>
				<maml:description>
					<maml:para>Specifies an IP address. Use this parameter only if The IpPolicy parameter is set to Static.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >IPAddress</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ToolsWaitSecs</maml:name>
				<maml:description>
					<maml:para>Specifies the time in seconds to wait for a response from VMware Tools. If a non-positive value is provided, the system waits indefinitely.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the guest OS.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GuestCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS. Do not use this parameter if the GuestUser and GuestPassword parameters are used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>VmGuestNetworkInterface</maml:name>
			<maml:description>
				<maml:para>Specifies the guest network interface you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuestNetworkInterface[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuestNetworkInterface[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WinsPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the Wins policy. The valid values are Static and Dhcp.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DhcpPolicy</command:parameterValue>
			<dev:type>
				<maml:name>DhcpPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Wins</maml:name>
			<maml:description>
				<maml:para>Specifies WINS servers. Use this parameter only if the WinsPolicy parameter is set to Static.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DnsPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the DNS policy. The valid values are Static and Dhcp.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DhcpPolicy</command:parameterValue>
			<dev:type>
				<maml:name>DhcpPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Dns</maml:name>
			<maml:description>
				<maml:para>Specifies DNS addresses. Use this parameter only if The DnsPolicy parameter is set to Static.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IPPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the IP policy. The valid values are Static and Dhcp.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DhcpPolicy</command:parameterValue>
			<dev:type>
				<maml:name>DhcpPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Gateway</maml:name>
			<maml:description>
				<maml:para>Specifies a gateway.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Netmask</maml:name>
			<maml:description>
				<maml:para>Specifies a network mask.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Ip</maml:name>
			<maml:description>
				<maml:para>Specifies an IP address. Use this parameter only if The IpPolicy parameter is set to Static.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IPAddress</command:parameterValue>
			<dev:type>
				<maml:name>IPAddress</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ToolsWaitSecs</maml:name>
			<maml:description>
				<maml:para>Specifies the time in seconds to wait for a response from VMware Tools. If a non-positive value is provided, the system waits indefinitely.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the guest OS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GuestCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the guest OS. Do not use this parameter if the GuestUser and GuestPassword parameters are used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the password you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostUser</maml:name>
			<maml:description>
				<maml:para>Specifies the user name you want to use for authenticating with the host. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostCredential</maml:name>
			<maml:description>
				<maml:para>Specifies a PSCredential object that contains credentials for authenticating with the host. Do not use this parameter if the HostUser and HostPassword parameters are used. You need to specify host credentials only if the version of the vCenter Server or ESX you are authenticating with is earlier than 4.0, or the VIX version you have installed is earlier than 1.10.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VMGuestNetworkInterface objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This cmdlet is not compatible with IPv6 environments.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMGuestNetworkInterface -VMGuestNetworkInterface $vmGuestNetworkInterface -GuestUser User -GuestPassword Pass02 -Netmask 255.255.255.255 -Gateway 10.23.112.58</dev:code>
  			<dev:remarks>
				<maml:para>Changes the net mask and the gateway of the specified guest network interface.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMGuestNetworkInterface.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMGuestNetworkInterface</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHost</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the configuration of the host.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHost</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the configuration of the host.

The State parameter is set to Connected.
- If the host is currently connected and is not in a maintenance mode, it does nothing.
- If the host is in a maintenance mode, it exits the maintenance mode.
- If the host is not connected or is not responding, it tries to reconnect.

The State parameter is set to Disconnected.
- If the host is currently connected, it attempts to disconnect.
- If the host is not connected or not responding, it does nothing.

The State parameter is set to Maintenance.
- If the host is currently connected and not in a maintenance mode, it enters a maintenance mode.
- If the host is currently connected and in a maintenance mode, it does nothing.
- If the host is not connected or not responding, it attempts to reconnect and enter maintenance mode.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHost</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>Specifies the state of the host. The valid values are Connected, Disconnected, and Maintenance. If there are powered on virtual machines on the host, you can set the host into a maintenance mode, only if it is  part of a DRS-enabled cluster. Before entering maintenance mode, if the host is fully automated, the cmdlet first relocates all powered on virtual machines. If the host is not automated or partially automated, you must first generate a DRS recommendation and wait until all powered on virtual machines are relocated or powered off. In this case, you must specify the RunAsync parameter, otherwise an error is thrown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHostState</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMSwapfilePolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the swapfile placement policy. The following values are valid:

InHostDataStore - Stores the swapfile in the datastore specified by the VMSwapfileDatastoreID property of the virtual machine host. If the VMSwapfileDatastoreID property is not set or indicates a datastore with insufficient free space, the swapfile is stored in the same directory as the virtual machine. This setting might degrade the VMotion performance.

WithVM - Stores the swapfile in the same directory as the virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMSwapfilePolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>VMSwapfileDatastore</maml:name>
				<maml:description>
					<maml:para>Specifies a datastore that is visible to the host and can be used for storing swapfiles for the virtual machines that run on this host. Using a host-specific swap location might degrade the VMotion performance.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Datastore</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Profile</maml:name>
				<maml:description>
					<maml:para>Specifies a host profile you want to associate with the host. If the value of this parameter is $null, the current profile association is removed.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHostProfile</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Evacuate</maml:name>
				<maml:description>
					<maml:para>If the value is $true, vCenter automatically reregisters the virtual machines that are compatible for reregistration. If they are not compatible, they remain on the host. If there are powered-on virtual machines that cannot be reregistered the operation waits until they are powered off manually. The Evacuate parameter is valid only when connected to a vCenter Server system and the State parameter is set to Maintenance. Also, the virtual machine host must be in a DRS-enabled cluster.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>TimeZone</maml:name>
				<maml:description>
					<maml:para>Specifies the time zone for the host by using its name or by providing the corresponding time zone object. Time zone names support wildcards. If the wildcards match more than one time zones, an error is reported. Time zone objects can only be applied to the hosts they originate from.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHostTimeZone</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>LicenseKey</maml:name>
				<maml:description>
					<maml:para>Specifies the license key to be used by the host. You can set the host to evaluation mode by passing the 00000-00000-00000-00000-00000 evaluation key.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>Specifies the state of the host. The valid values are Connected, Disconnected, and Maintenance. If there are powered on virtual machines on the host, you can set the host into a maintenance mode, only if it is  part of a DRS-enabled cluster. Before entering maintenance mode, if the host is fully automated, the cmdlet first relocates all powered on virtual machines. If the host is not automated or partially automated, you must first generate a DRS recommendation and wait until all powered on virtual machines are relocated or powered off. In this case, you must specify the RunAsync parameter, otherwise an error is thrown.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHostState</command:parameterValue>
			<dev:type>
				<maml:name>VMHostState</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMSwapfilePolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the swapfile placement policy. The following values are valid:

InHostDataStore - Stores the swapfile in the datastore specified by the VMSwapfileDatastoreID property of the virtual machine host. If the VMSwapfileDatastoreID property is not set or indicates a datastore with insufficient free space, the swapfile is stored in the same directory as the virtual machine. This setting might degrade the VMotion performance.

WithVM - Stores the swapfile in the same directory as the virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMSwapfilePolicy</command:parameterValue>
			<dev:type>
				<maml:name>VMSwapfilePolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>VMSwapfileDatastore</maml:name>
			<maml:description>
				<maml:para>Specifies a datastore that is visible to the host and can be used for storing swapfiles for the virtual machines that run on this host. Using a host-specific swap location might degrade the VMotion performance.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Datastore</command:parameterValue>
			<dev:type>
				<maml:name>Datastore</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>Profile</maml:name>
			<maml:description>
				<maml:para>Specifies a host profile you want to associate with the host. If the value of this parameter is $null, the current profile association is removed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHostProfile</command:parameterValue>
			<dev:type>
				<maml:name>VMHostProfile</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Evacuate</maml:name>
			<maml:description>
				<maml:para>If the value is $true, vCenter automatically reregisters the virtual machines that are compatible for reregistration. If they are not compatible, they remain on the host. If there are powered-on virtual machines that cannot be reregistered the operation waits until they are powered off manually. The Evacuate parameter is valid only when connected to a vCenter Server system and the State parameter is set to Maintenance. Also, the virtual machine host must be in a DRS-enabled cluster.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>TimeZone</maml:name>
			<maml:description>
				<maml:para>Specifies the time zone for the host by using its name or by providing the corresponding time zone object. Time zone names support wildcards. If the wildcards match more than one time zones, an error is reported. Time zone objects can only be applied to the hosts they originate from.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHostTimeZone</command:parameterValue>
			<dev:type>
				<maml:name>VMHostTimeZone</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LicenseKey</maml:name>
			<maml:description>
				<maml:para>Specifies the license key to be used by the host. You can set the host to evaluation mode by passing the 00000-00000-00000-00000-00000 evaluation key.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VMHost objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>The TimeZone parameter is supported only on ESX 4.1/vCenter Server 4.1, and later.
The Evacuate parameter is valid only when connected to a vCenter Server host and the host is a part of a DRS-enabled cluster.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMHost -VMHost Host -State &quot;Disconnected&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Resets the state of the Host virtual host to disconnected.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$cluster = Get-Cluster -VMHost Host

$task = Set-VMHost -VMHost Host -State &quot;Maintenance&quot; -RunAsync

Get-DrsRecommendation -Cluster $cluster | where {$_.Reason -eq &quot;Host is entering maintenance mode&quot;} | Apply-DrsRecommendation

$vmhost = Wait-Task $task</dev:code>
  			<dev:remarks>
				<maml:para>Activate a maintenance mode for a not automated host that is part of a DRS-enabled cluster and has powered on virtual machines on it.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHost.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unknown</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostAccount</command:name>
		<maml:description>
			<maml:para>This cmdlet configures a host account.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostAccount</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet configures a host account. When configuring a host user account, you can include or exclude the user from the specified groups.
When configuring a host group account, you can include or exclude the specified users from this group.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostAccount</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>GroupAccount</maml:name>
				<maml:description>
					<maml:para>Specifies the host group account you want to configure. Starting with ESXi 5.1, you cannot configure group host accounts.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HostGroupAccount[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AssignUsers</maml:name>
				<maml:description>
					<maml:para>If a group host account is configured, specify the users you want to add to the account. Starting with ESXi 5.1, you cannot configure group host accounts.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>UnassignUsers</maml:name>
				<maml:description>
					<maml:para>If a group host account is to be configured, specifies the users you want to remove from the account.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VMHostAccount</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>UserAccount</maml:name>
				<maml:description>
					<maml:para>Specifies the host user account you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HostUserAccount[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Specifies a new password for the account.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Provides a description of the specified account. The maximum length of the text is 255 symbols.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AssignGroups</maml:name>
				<maml:description>
					<maml:para>If a user host account is to be configured, specifies the group to which you want to add the account. Starting with ESXi 5.1, you cannot configure group host accounts.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>UnassignGroups</maml:name>
				<maml:description>
					<maml:para>If a user host account is to be configured, specifies a group from which you want to remove the account. Starting with ESXi 5.1, you cannot configure group host accounts.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>GrantShellAccess</maml:name>
				<maml:description>
					<maml:para>Indicates that the account is allowed to access the ESX shell.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>GroupAccount</maml:name>
			<maml:description>
				<maml:para>Specifies the host group account you want to configure. Starting with ESXi 5.1, you cannot configure group host accounts.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HostGroupAccount[]</command:parameterValue>
			<dev:type>
				<maml:name>HostGroupAccount[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AssignUsers</maml:name>
			<maml:description>
				<maml:para>If a group host account is configured, specify the users you want to add to the account. Starting with ESXi 5.1, you cannot configure group host accounts.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UnassignUsers</maml:name>
			<maml:description>
				<maml:para>If a group host account is to be configured, specifies the users you want to remove from the account.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>UserAccount</maml:name>
			<maml:description>
				<maml:para>Specifies the host user account you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HostUserAccount[]</command:parameterValue>
			<dev:type>
				<maml:name>HostUserAccount[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Specifies a new password for the account.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Provides a description of the specified account. The maximum length of the text is 255 symbols.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AssignGroups</maml:name>
			<maml:description>
				<maml:para>If a user host account is to be configured, specifies the group to which you want to add the account. Starting with ESXi 5.1, you cannot configure group host accounts.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UnassignGroups</maml:name>
			<maml:description>
				<maml:para>If a user host account is to be configured, specifies a group from which you want to remove the account. Starting with ESXi 5.1, you cannot configure group host accounts.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GrantShellAccess</maml:name>
			<maml:description>
				<maml:para>Indicates that the account is allowed to access the ESX shell.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified HostUserAccount or HostGroupAccount objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If the GroupAccount parameter is specified, the cmdlet returns the zero or more modified HostGroupAccount object. If the UserAccount parameter is specified, the cmdlet returns the zero or more modified HostUserAccount object.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>If both of the AssignUsers (AssignGroup) and UnassignUsers (UnassignGroup) parameters are specified, the Assign* parameter is applied first. If the same user and group are specified for Assign* and Unassign*, a terminating error is thrown.
Starting with ESXi 5.1, you cannot configure group host accounts.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$myUserAccount = New-VMHostAccount -ID MyUser1 -Password MyPassword1 -UserAccount
$myGroupAccount = New-VMHostAccount -ID MyGroup1 -GroupAccount -AssignUsers $myUserAccount
Set-VMHostAccount -UserAccount $myUserAccount -UnassignGroups $myGroupAccount</dev:code>
  			<dev:remarks>
				<maml:para>Creates a user account with an ID MyUser1. Then creates a group account with an ID MyGroup1 and assigns the user account MyUser1 to the group account MyGroup1. Finally, excludes the MyUser1 account from the MyGroup1 account.
Starting with ESXi 5.1, you cannot configure group host accounts.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostAccount.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VIAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostAccount</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostAdvancedConfiguration</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the advanced configuration settings of a host.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostAdvancedConfiguration</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet is deprecated. Use New-AdvancedSetting, Set-AdvancedSetting, or Remove-AdvancedSetting instead.

This cmdlet modifies the advanced configuration settings of a host.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostAdvancedConfiguration</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the host configuration setting you want to change.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>Specifies a new value of the host configuration setting that you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Object</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host whose advanced configuration settings you want to change.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VMHostAdvancedConfiguration</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>NameValue</maml:name>
				<maml:description>
					<maml:para>Provides a hash table that maps values to settings.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host whose advanced configuration settings you want to change.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies the name of the host configuration setting you want to change.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>Specifies a new value of the host configuration setting that you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="3">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host whose advanced configuration settings you want to change.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>NameValue</maml:name>
			<maml:description>
				<maml:para>Provides a hash table that maps values to settings.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Hashtable</command:parameterValue>
			<dev:type>
				<maml:name>Hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The modified System.Collections.Hashtable object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost 10.23.123.144 | Set-VmHostAdvancedConfiguration -Name Migrate.NetTimeout -Value ( [system.int32] 10 )</dev:code>
  			<dev:remarks>
				<maml:para>Change the migration timeout for the virtual machine host with an IP address 10.23.123.144.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$migrationSettings = Get-VMHost 10.23.123.144| Get-VmHostAdvancedConfiguration -Name Migrate.*

Set-VmHostAdvancedConfiguration -VMHost 10.23.123.122  -NameValue $migrationSettings</dev:code>
  			<dev:remarks>
				<maml:para>Gets the advanced settings concerning migration from the host with an IP address 10.23.123.144 and applies them to the virtual machine host with an IP address 10.23.123.122.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMHostAdvancedConfiguration -VMHost 10.23.112.120 -Name Migrate.Enabled -Value 1</dev:code>
  			<dev:remarks>
				<maml:para>Enable VMotion on a host using Set-VMHostAdvancedConfiguration.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostAdvancedConfiguration.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostAdvancedConfiguration</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostAuthentication</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the host authentication information.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostAuthentication</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the host authentication information.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostAuthentication</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Domain</maml:name>
				<maml:description>
					<maml:para>Specifies a domain you want to join.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Username</maml:name>
				<maml:description>
					<maml:para>Specifies a user name for authentication.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "3" >
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Specifies a password for authentication.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Specifies a credential object for authentication.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>JoinDomain</maml:name>
				<maml:description>
					<maml:para>Indicates whether you want to join the specified domain.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHostAuthentication</maml:name>
				<maml:description>
					<maml:para>Specifies the VMHostAuthentication object you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostAuthentication[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VMHostAuthentication</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>If the value is $true, any existing permissions on the managed objects for Active Directory users are deleted and the cmdlet completes. If the value is $false, the cmdlet cannot run if there are any existing permissions on managed objects for Active Directory users.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>LeaveDomain</maml:name>
				<maml:description>
					<maml:para>Indicates whether you want to leave the currently joined domain.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHostAuthentication</maml:name>
				<maml:description>
					<maml:para>Specifies the VMHostAuthentication object you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostAuthentication[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Domain</maml:name>
			<maml:description>
				<maml:para>Specifies a domain you want to join.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Username</maml:name>
			<maml:description>
				<maml:para>Specifies a user name for authentication.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Specifies a password for authentication.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Specifies a credential object for authentication.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>JoinDomain</maml:name>
			<maml:description>
				<maml:para>Indicates whether you want to join the specified domain.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHostAuthentication</maml:name>
			<maml:description>
				<maml:para>Specifies the VMHostAuthentication object you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostAuthentication[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostAuthentication[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>If the value is $true, any existing permissions on the managed objects for Active Directory users are deleted and the cmdlet completes. If the value is $false, the cmdlet cannot run if there are any existing permissions on managed objects for Active Directory users.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LeaveDomain</maml:name>
			<maml:description>
				<maml:para>Indicates whether you want to leave the currently joined domain.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VMHostAuthentication objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost | Get-VMHostAuthentication | Set-VMHostAuthentication -JoinDomain -Domain &quot;DomainName.com&quot; -User &quot;Username1&quot; -Password &quot;Password1&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Include an ESX host in a domain.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost | Get-VMHostAuthentication | Set-VMHostAuthentication -LeaveDomain</dev:code>
  			<dev:remarks>
				<maml:para>Exclude an ESX host  from a domain.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhost | Get-VMHostAuthentication | Set-VMHostAuthentication -LeaveDomain -Force</dev:code>
  			<dev:remarks>
				<maml:para>Exclude an ESX host from a domain.  If AD account permissions are defined on the host, they will be removed.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostAuthentication.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostAuthentication</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostDiagnosticPartition</command:name>
		<maml:description>
			<maml:para>This cmdlet activates or deactivates the diagnostic partitions of  hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostDiagnosticPartition</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet activates or deactivates the diagnostic partitions of hosts.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostDiagnosticPartition</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Active</maml:name>
				<maml:description>
					<maml:para>If the value of this parameter is $true, the partition state is changed to active. If the value is $false, the partition state is set to inactive.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHostDiagnosticPartition</maml:name>
				<maml:description>
					<maml:para>Specifies the host diagnostic partition you want to set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostDiagnosticPartition[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Active</maml:name>
			<maml:description>
				<maml:para>If the value of this parameter is $true, the partition state is changed to active. If the value is $false, the partition state is set to inactive.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHostDiagnosticPartition</maml:name>
			<maml:description>
				<maml:para>Specifies the host diagnostic partition you want to set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostDiagnosticPartition[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostDiagnosticPartition[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VMHostDiagnosticPartition objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$diagPartition = Get-VMHostDiagnosticPartition -VMHost $vmhost

$diagPartition | Set-VMHostDiagnosticPartition -Active $false -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Deactivates the active diagnostic partition of the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostDiagnosticPartition.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostDiagnosticPartition</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostFirewallDefaultPolicy</command:name>
		<maml:description>
			<maml:para>This cmdlet sets the default policy for the specified host firewall.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostFirewallDefaultPolicy</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet sets the default policy for the specified host firewall. This policy specifies whether outgoing or incoming connections are allowed. At least one of the AllowIncoming and AllowOutgoing parameters must be set. When you configure the default firewall policy of an ESX/ESXi host version 5.0, you must provide the same value for the AllowIncoming and AllowOutgoing parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostFirewallDefaultPolicy</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>AllowIncoming</maml:name>
				<maml:description>
					<maml:para>If the value of this parameter is $true, all incoming connections are allowed. If the value is $false, all incoming connections are disallowed.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>AllowOutgoing</maml:name>
				<maml:description>
					<maml:para>If the value of this parameter is $true, all outcoming connections are allowed. If the value is $false, all outcoming connections are disallowed.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Policy</maml:name>
				<maml:description>
					<maml:para>Specifies the host firewall default policy you want to apply.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostFirewallDefaultPolicy[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>AllowIncoming</maml:name>
			<maml:description>
				<maml:para>If the value of this parameter is $true, all incoming connections are allowed. If the value is $false, all incoming connections are disallowed.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>AllowOutgoing</maml:name>
			<maml:description>
				<maml:para>If the value of this parameter is $true, all outcoming connections are allowed. If the value is $false, all outcoming connections are disallowed.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="3">
			<maml:name>Policy</maml:name>
			<maml:description>
				<maml:para>Specifies the host firewall default policy you want to apply.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostFirewallDefaultPolicy[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostFirewallDefaultPolicy[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostFirewallDefaultPolicy objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Firewall management functionality is not supported on ESX 3i.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$firewallpolicy = Get-VMHostFirewallDefaultPolicy -VMHost 10.23.123.100

Set-VMHostFirewallDefaultPolicy -Policy $firewallpolicy -AllowOutGoing $true | fl</dev:code>
  			<dev:remarks>
				<maml:para>Changes the default firewall policy of the virtual machine host with IP address 10.23.123.100, so that the outgoing connections are allowed.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>VMHostId        : HostSystem-host-8
IncomingEnabled : False
OutgoingEnabled : True
Client          : VMware.VimAutomation.Client20.VimClient
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostFirewallDefaultPolicy.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostFirewallDefaultPolicy</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostFirewallException</command:name>
		<maml:description>
			<maml:para>This cmdlet enables or disables host firewall exceptions.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostFirewallException</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet enables or disables host firewall exceptions.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostFirewallException</maml:name>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>If the value is $true, the specified firewall exceptions are enabled. If the value is $false, the firewall exceptions are disabled.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Exception</maml:name>
				<maml:description>
					<maml:para>Specifies the firewall exceptions you want to enable or disable.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostFirewallException[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>If the value is $true, the specified firewall exceptions are enabled. If the value is $false, the firewall exceptions are disabled.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Exception</maml:name>
			<maml:description>
				<maml:para>Specifies the firewall exceptions you want to enable or disable.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostFirewallException[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostFirewallException[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VMHostFirewallException objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Firewall management functionality is not supported on ESX 3i.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$ftpFirewallExceptions = Get-VMHostFirewallException -VMHost $vmhost | where {$_.Name.StartsWith(&#39;FTP&#39;)}

$ftpFirewallExceptions | Set-VMHostFirewallException -Enabled $true</dev:code>
  			<dev:remarks>
				<maml:para>Enables the firewall exceptions for the FTP services on the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostFirewallException.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostFirewallException</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostFirmware</command:name>
		<maml:description>
			<maml:para>This cmdlet configures hosts firmware settings.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostFirmware</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet configures hosts firmware settings.
If the BackupConfiguration parameter is set, backups the host configuration and downloads the bundle to the specified DestinationPath. In order to use the Restore and ResetToDefaults parameters, the host needs to be in maintenance mode. The Backup functionality of Set-VMHostFirmware is deprecated and scheduled for removal. For making backups, use the Get-VMHostFirmware cmdlet instead.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostFirmware</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host whose firmware you want to configure (it must be an ESX visor).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>BackupConfiguration</maml:name>
				<maml:description>
					<maml:para>The Backup functionality of Set-VMHostFirmware is deprecated and scheduled for removal. For making backups, use the Get-VMHostFirmware cmdlet instead. 

Indicates that you want to backup the host firmware configuration and download the bundle to the path specified by the DestinationPath parameter.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DestinationPath</maml:name>
				<maml:description>
					<maml:para>Specifies a destination path where to download the host configuration backup bundle if the BackupConfiguration parameter is set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VMHostFirmware</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host whose firmware you want to configure (it must be an ESX visor).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ResetToDefaults</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to reset all configuration settings, including the &quot;admin&quot; password, to the factory defaults. The host is rebooted immediately. The host needs to be in a maintenance in order to perform this operation.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VMHostFirmware</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host whose firmware you want to configure (it must be an ESX visor).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Restore</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to restore the configuration of the host to the one that is specified in the provided bundle. The bundle is uploaded to the URL retrieved via Get-VMHostFirmware. This method resets all configuration options, including the &quot;admin&quot; password, to the values in the bundle. The host is rebooted immediately. The host needs to be in maintenance mode in order to perform this operation.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SourcePath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the host configuration backup bundle you want to restore. The bundle is uploaded to an URL address which you can retrieve by using the Get-VMHostFirmware cmdlet.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to apply the configuration even if the bundle is mismatched. Use this parameter in combination with the Restore parameter.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies the credential object you want to use for authenticating with the host when uploading a firmware configuration bundle. Do not use this parameter if the HostUser and HostPassword parameters are specified.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies a username for authenticating with the host when uploading a firmware configuration bundle.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies a password for the authenticating with the host when uploading a firmware configuration bundle.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host whose firmware you want to configure (it must be an ESX visor).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BackupConfiguration</maml:name>
			<maml:description>
				<maml:para>The Backup functionality of Set-VMHostFirmware is deprecated and scheduled for removal. For making backups, use the Get-VMHostFirmware cmdlet instead. 

Indicates that you want to backup the host firmware configuration and download the bundle to the path specified by the DestinationPath parameter.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DestinationPath</maml:name>
			<maml:description>
				<maml:para>Specifies a destination path where to download the host configuration backup bundle if the BackupConfiguration parameter is set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResetToDefaults</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to reset all configuration settings, including the &quot;admin&quot; password, to the factory defaults. The host is rebooted immediately. The host needs to be in a maintenance in order to perform this operation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Restore</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to restore the configuration of the host to the one that is specified in the provided bundle. The bundle is uploaded to the URL retrieved via Get-VMHostFirmware. This method resets all configuration options, including the &quot;admin&quot; password, to the values in the bundle. The host is rebooted immediately. The host needs to be in maintenance mode in order to perform this operation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SourcePath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the host configuration backup bundle you want to restore. The bundle is uploaded to an URL address which you can retrieve by using the Get-VMHostFirmware cmdlet.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to apply the configuration even if the bundle is mismatched. Use this parameter in combination with the Restore parameter.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostCredential</maml:name>
			<maml:description>
				<maml:para>Specifies the credential object you want to use for authenticating with the host when uploading a firmware configuration bundle. Do not use this parameter if the HostUser and HostPassword parameters are specified.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostUser</maml:name>
			<maml:description>
				<maml:para>Specifies a username for authenticating with the host when uploading a firmware configuration bundle.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPassword</maml:name>
			<maml:description>
				<maml:para>Specifies a password for the authenticating with the host when uploading a firmware configuration bundle.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified HostFirmware or HostFirmwareBundle objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If the BackupConfiguration parameter is specified, the cmdlet returns zero or more modified HostFirmwareBundle. Otherwise, the cmdlet returns zero or more HostFirmware objects.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This functionality is available on ESXi Embedded only.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMHost -VMHost Host -State &#39;Maintenance&#39;

Set-VMHostFirmware -VMHost Host -Restore</dev:code>
  			<dev:remarks>
				<maml:para>Restore the host firmware by using the default path for the firmware bundle. You can store the bundle to the default path through HTTP by using the upload URL specified in the firmware bundle object:

$bundle = Get-VMHostFirmware

$uploadUrl = $bundle.UploadUrl</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMHost -VMHost Host -State &#39;Maintenance&#39;

Set-VMHostFirmware -VMHost Host -Restore -SourcePath c:\bundleToRestore.tgz -HostUser user -HostPassword pass</dev:code>
  			<dev:remarks>
				<maml:para>Restore the host firmware by specifying a firmware bundle as a source path.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMHost -VMHost Host -State &#39;Maintenance&#39;

Set-VMHostFirmware -VMHost Host -ResetToDefaults</dev:code>
  			<dev:remarks>
				<maml:para>Reset the host configuration to the factory default settings.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostFirmware -VMHost Host1, Host2 -BackupConfiguration -DestinationPath c:\StoredBundles

Set-VMHost -VMHost Host1, Host2 -State &#39;Maintenance&#39;

Get-VMHost -Name Host1, Host2 | Set-VMHostFirmware -Restore -SourcePath c:\StoredBundles -HostUser user -HostPassword pass</dev:code>
  			<dev:remarks>
				<maml:para>Restore multiple hosts firmware by specifying the firmware bundle as a source path directory. The command determines which bundle is needed for each host by the bundle name.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostFirmware.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostFirmware</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostHba</command:name>
		<maml:description>
			<maml:para>This cmdlet configures the CHAP properties of the specified iSCSI HBAs.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostHba</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet configures the CHAP properties of the specified iSCSI HBAs.
If (Mutual)ChapType is set to a value different than “Prohibited”, (Mutual)ChapPassword must be set.
ChapType, MutualChapType, MutualChapName, MutualChapPassword - these are only available on 4.1 or later.
Note: Run Set-VmHostHba directly against ESX.  When Set-VmHostHba is run against vCenter Server, changing the iScsiName property of an iSCSI adapter modifies its AuthenticationCapabilities property.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostHba</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>IScsiHba</maml:name>
				<maml:description>
					<maml:para>Specifies the iSCSI HBA device you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >IScsiHba[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IScsiName</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the host HBA device.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChapType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of the CHAP authorization. The valid values are Prohibited, Discouraged, Preferred, and Required.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >ChapType</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChapName</maml:name>
				<maml:description>
					<maml:para>Specifies the CHAP initiator name if CHAP is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ChapPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the CHAP password if CHAP is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MutualChapEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that Mutual CHAP authorization is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MutualChapName</maml:name>
				<maml:description>
					<maml:para>Specifies the Mutual CHAP initiator name if Mutual CHAP is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MutualChapPassword</maml:name>
				<maml:description>
					<maml:para>Specifies the Mutual CHAP password if Mutual CHAP is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="named">
			<maml:name>IScsiHba</maml:name>
			<maml:description>
				<maml:para>Specifies the iSCSI HBA device you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IScsiHba[]</command:parameterValue>
			<dev:type>
				<maml:name>IScsiHba[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IScsiName</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the host HBA device.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChapType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of the CHAP authorization. The valid values are Prohibited, Discouraged, Preferred, and Required.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ChapType</command:parameterValue>
			<dev:type>
				<maml:name>ChapType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChapName</maml:name>
			<maml:description>
				<maml:para>Specifies the CHAP initiator name if CHAP is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Use the old name if any. Otherwise, use the initiator name.</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChapPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the CHAP password if CHAP is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MutualChapEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that Mutual CHAP authorization is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MutualChapName</maml:name>
			<maml:description>
				<maml:para>Specifies the Mutual CHAP initiator name if Mutual CHAP is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Use the old name if any. Otherwise, use the initiator name.</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MutualChapPassword</maml:name>
			<maml:description>
				<maml:para>Specifies the Mutual CHAP password if Mutual CHAP is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified IScsiHba objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>The ChapType, MutualChapType, MutualChapName, and MutualChapPassword parameters are supported only on vCenter Server/ESX 4.1 or later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostHba -Type iScsi | Set-VMHostHba -ChapType Required -ChapName Admin -ChapPassword pass</dev:code>
  			<dev:remarks>
				<maml:para>Changes the CHAP type of the available iScsi to Required.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMHostHba -IScsiHba $iscsi -MutualChapEnabled $true -ChapType Required -ChapName Admin -ChapPassword pass -MutualChapName Administrator -MutualChapPassword Pass</dev:code>
  			<dev:remarks>
				<maml:para>Enables Mutual CHAP for the iScsi devices stored in the $iscsi variable and changes the CHAP type to Required.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostHba.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostHba</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-IScsiHbaTarget</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostModule</command:name>
		<maml:description>
			<maml:para>This cmdlet overrides the host module options with the given ones.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostModule</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet overrides the host module options with the given ones.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostModule</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HostModule</maml:name>
				<maml:description>
					<maml:para>Specifies the host module you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VmHostModule[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Options</maml:name>
				<maml:description>
					<maml:para>Specifies the new options of the host module.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HostModule</maml:name>
			<maml:description>
				<maml:para>Specifies the host module you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VmHostModule[]</command:parameterValue>
			<dev:type>
				<maml:name>VmHostModule[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Options</maml:name>
			<maml:description>
				<maml:para>Specifies the new options of the host module.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VmHostModule objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Supported only on ESX 4.1, ESX 4i, and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$module = Get-VMHostModule -Name Shaper

Set-VMHostModule -HostModule $module -Options &quot;New options text&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Overrides the options of the Shaper host module with the provided ones.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostModule Shaper | Set-VMHostModule -Options &quot;New options text&quot; -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Overrides the options of the Shaper host module with the provided ones.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostModule.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostModule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostNetwork</command:name>
		<maml:description>
			<maml:para>This cmdlet updates the specified virtual network.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostNetwork</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet updates the specified virtual network. The service console and the VMkernel are often not connected to the same network, and therefore each needs its own gateway information. A gateway is needed for connectivity to machines not on the same IP subnet as the service console or VMkernel.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostNetwork</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Network</maml:name>
				<maml:description>
					<maml:para>Specifies the host network you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostNetworkInfo[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ConsoleGateway</maml:name>
				<maml:description>
					<maml:para>Specifies a new console gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMKernelGateway</maml:name>
				<maml:description>
					<maml:para>Specifies a new kernel gateway.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMKernelGatewayDevice</maml:name>
				<maml:description>
					<maml:para>Specifies a new kernel gateway device.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ConsoleGatewayDevice</maml:name>
				<maml:description>
					<maml:para>Specifies a new console gateway device.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DomainName</maml:name>
				<maml:description>
					<maml:para>Specifies a new domain name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostName</maml:name>
				<maml:description>
					<maml:para>Specifies a new host name.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsFromDhcp</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to obtain the network settings from a Dhcp server.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsDhcpDevice</maml:name>
				<maml:description>
					<maml:para>This parameter is mandatory if the value of the DnsFromDhcp parameter is &#39;true&#39;. Otherwise, it is disregarded. If the DnsDhcpDevice parameter is set, the Dhcp DNS of the service console or VMKernel network adapter will override the system DNS. The parameter takes a ServiceConsoleNIC object, a VMKernelNIC object in case of an ESX visor, or the NIC name as a string.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Object</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DnsAddress</maml:name>
				<maml:description>
					<maml:para>Specifies a new DNS address.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SearchDomain</maml:name>
				<maml:description>
					<maml:para>Specifies a new search domain.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IPv6Enabled</maml:name>
				<maml:description>
					<maml:para>Indicates that IPv6 configuration is enabled. Setting this parameter to $false disables the ConsoleV6Gateway, ConsoleV6GatewayDevice, and VMKernelV6Gateway parameters. IPv6 is supported only on vCenter 4.1 and ESX 4.1 or later. To use IPv6 on ESX, you must restart the host after enabling IPv6.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ConsoleV6Gateway</maml:name>
				<maml:description>
					<maml:para>Specifies a console V6 gateway address.  Not supported on ESXi.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ConsoleV6GatewayDevice</maml:name>
				<maml:description>
					<maml:para>Specifies a console V6 gateway device. Not supported on ESXi.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMKernelV6Gateway</maml:name>
				<maml:description>
					<maml:para>Specifies a VMKernel V6 gateway address. This parameter is supported only on ESX hosts.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMKernelV6GatewayDevice</maml:name>
				<maml:description>
					<maml:para>Specifies a VMKernel V6 gateway device. This parameter is supported only on ESX hosts.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Network</maml:name>
			<maml:description>
				<maml:para>Specifies the host network you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostNetworkInfo[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostNetworkInfo[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConsoleGateway</maml:name>
			<maml:description>
				<maml:para>Specifies a new console gateway.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMKernelGateway</maml:name>
			<maml:description>
				<maml:para>Specifies a new kernel gateway.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMKernelGatewayDevice</maml:name>
			<maml:description>
				<maml:para>Specifies a new kernel gateway device.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConsoleGatewayDevice</maml:name>
			<maml:description>
				<maml:para>Specifies a new console gateway device.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainName</maml:name>
			<maml:description>
				<maml:para>Specifies a new domain name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostName</maml:name>
			<maml:description>
				<maml:para>Specifies a new host name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DnsFromDhcp</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to obtain the network settings from a Dhcp server.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DnsDhcpDevice</maml:name>
			<maml:description>
				<maml:para>This parameter is mandatory if the value of the DnsFromDhcp parameter is &#39;true&#39;. Otherwise, it is disregarded. If the DnsDhcpDevice parameter is set, the Dhcp DNS of the service console or VMKernel network adapter will override the system DNS. The parameter takes a ServiceConsoleNIC object, a VMKernelNIC object in case of an ESX visor, or the NIC name as a string.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DnsAddress</maml:name>
			<maml:description>
				<maml:para>Specifies a new DNS address.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchDomain</maml:name>
			<maml:description>
				<maml:para>Specifies a new search domain.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IPv6Enabled</maml:name>
			<maml:description>
				<maml:para>Indicates that IPv6 configuration is enabled. Setting this parameter to $false disables the ConsoleV6Gateway, ConsoleV6GatewayDevice, and VMKernelV6Gateway parameters. IPv6 is supported only on vCenter 4.1 and ESX 4.1 or later. To use IPv6 on ESX, you must restart the host after enabling IPv6.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConsoleV6Gateway</maml:name>
			<maml:description>
				<maml:para>Specifies a console V6 gateway address.  Not supported on ESXi.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConsoleV6GatewayDevice</maml:name>
			<maml:description>
				<maml:para>Specifies a console V6 gateway device. Not supported on ESXi.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMKernelV6Gateway</maml:name>
			<maml:description>
				<maml:para>Specifies a VMKernel V6 gateway address. This parameter is supported only on ESX hosts.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMKernelV6GatewayDevice</maml:name>
			<maml:description>
				<maml:para>Specifies a VMKernel V6 gateway device. This parameter is supported only on ESX hosts.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VMHostNetworkInfo objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>If &quot;DnsFromDhcp&quot; is enabled “DomainName” and “HostName” cannot be explicitly set.
To configure IPv6 settings, you must be working on ESX 4.1 or later, and IPv6 must be enabled on the host system. The new IPv6 settings take effect after the host is restarted.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmHostNetworkInfo = Get-VmHostNetwork -Host Host

Set-VmHostNetwork -Network $vmHostNetworkInfo -VMKernelGateway 10.23.11.11 -DomainName eng.vmware.com -HostName Host1 -DnsFromDhcp $false</dev:code>
  			<dev:remarks>
				<maml:para>Gets the network configuration of the virtual machine host named Host. Sets the virtual machine kernel gateway, the domain name, the host name, and the Dhcp of the network.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost Host | Get-VMHostNetwork | Set-VMHostNetwork -IPv6Enabled $true

Get-VMHost Host | Restart-VMHost -Force -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Enables IPv6 support on the Host host and restarts the host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost Host | Get-VMHostNetwork | Set-VMHostNetwork -ConsoleV6Gateway $ipv6GatewayAddress -ConsoleV6GatewayDevice &quot;vswif0&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Configures the IPv6 console default gateway on the Host host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost Host | Get-VMHostNetwork | Set-VMHostNetwork -VMKernelV6Gateway $ipv6GatewayAddress</dev:code>
  			<dev:remarks>
				<maml:para>Configures the IPv6 VMKernel default gateway on the Host host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostNetwork.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostNetwork</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostNetworkAdapter</command:name>
		<maml:description>
			<maml:para>This cmdlet configures the specified host network adapter.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostNetworkAdapter</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet configures the specified host network adapter. For a physical NIC, you can change the duplex and the bit rate settings (10, 100, 1000, 10000). For a regular virtual NIC, you can change the IP address and the subnet mask. For a console virtual NIC, you can modify the IP and the subnet mask, or choose DHCP mode.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostNetworkAdapter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>PhysicalNic</maml:name>
				<maml:description>
					<maml:para>Specifies the PhysicalNIC objects you want to update.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >PhysicalNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Duplex</maml:name>
				<maml:description>
					<maml:para>Indicates whether the link is capable of full-duplex. The valid values are Full and Half. You can set this parameter only when updating a PhysicalNIC. Use this parameter only if the AutoNegotiate parameter is not set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>BitRatePerSecMb</maml:name>
				<maml:description>
					<maml:para>Specifies the bit rate of the link. Only valid when configuring a physical NIC. Use this parameter only if the AutoNegotiate parameter is not set. Note that updating the speed (BitRatePerSec) of a physical NIC might take some time due to the hardware configuration being performed, and the returned object might still contain the current configuration instead of the updated one.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AutoNegotiate</maml:name>
				<maml:description>
					<maml:para>Indicates that the host network adapter speed/duplex settings are configured automatically. Use this parameter only if the Duplex and BitRatePerSecMb parameters are not set.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VMHostNetworkAdapter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VirtualNic</maml:name>
				<maml:description>
					<maml:para>Provide a list of the host network adapters you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HostVirtualNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Dhcp</maml:name>
				<maml:description>
					<maml:para>Indicates whether the host network adapter uses a Dhcp server. This parameter works only on ESXi hosts. For VMKernel adapters, Dhcp is supported only on ESX 4.1 and later.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IP</maml:name>
				<maml:description>
					<maml:para>Specifies an IP address for the network adapter using an IPv4 dot notation. If the NIC has no subnet mask previously defined, you must also set the SubnetMask parameter. If the IP parameter is not specified, DHCP mode is enabled. Only valid when configuring a virtual NIC.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SubnetMask</maml:name>
				<maml:description>
					<maml:para>Specifies a subnet mask for the NIC. If the NIC has a subnet mask previously defined, specifying the SubnetMask parameter when configuring the IP address is not mandatory unless you want to modify the mask. Only valid when configuring a virtual NIC.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Mac</maml:name>
				<maml:description>
					<maml:para>Specifies the media access control (MAC) address of the virtual network adapter. Only valid when configuring a virtual NIC.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Mtu</maml:name>
				<maml:description>
					<maml:para>Specifies the MTU size.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VMotionEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to use the virtual host/VMKernel network adapter for VMotion.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>FaultToleranceLoggingEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that the network adapter is enabled for Fault Tolerance (FT) logging. This parameter is supported only on ESX/vCenter Server 4.1 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ManagementTrafficEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to enable the network adapter for management traffic. This parameter is supported only on ESX/ESXi/vCenter Server 4.1 and later.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>VsanTrafficEnabled</maml:name>
				<maml:description>
					<maml:para>Specifies whether Virtual SAN traffic is enabled on this network adapter.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IPv6ThroughDhcp</maml:name>
				<maml:description>
					<maml:para>Indicates that the IPv6 address is obtained through DHCP.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AutomaticIPv6</maml:name>
				<maml:description>
					<maml:para>Indicates that the IPv6 address is obtained through a router advertisement.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IPv6</maml:name>
				<maml:description>
					<maml:para>Specifies static addresses using the following format: &lt;IPv6&gt;/&lt;subnet_prefix_length&gt; or &lt;IPv6&gt;. If you skip &lt;subnet_prefix_length&gt;, the default value of 64 is used. Specifying a value for IPv6 parameter overrides the current configuration. To clear all configured static IP addresses, pass an empty array to the IPv6 parameter.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>IPv6Enabled</maml:name>
				<maml:description>
					<maml:para>Indicates that IPv6 configuration is enabled. Setting this parameter to $false disables all IPv6-related parameters. If the value is $true&quot;, you need to provide values for at least one of the IPv6ThroughDhcp, AutomaticIPv6, and IPv6 parameters.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VMHostNetworkAdapter</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VirtualNic</maml:name>
				<maml:description>
					<maml:para>Provide a list of the host network adapters you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HostVirtualNic[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PortGroup</maml:name>
				<maml:description>
					<maml:para>Specifies a distributed port group to which you want to connect the host network adapter. You can use this parameter only to migrate a virtual network adapter from a standard port group to a distributed port group.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >DistributedPortGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>PhysicalNic</maml:name>
			<maml:description>
				<maml:para>Specifies the PhysicalNIC objects you want to update.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PhysicalNic[]</command:parameterValue>
			<dev:type>
				<maml:name>PhysicalNic[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Duplex</maml:name>
			<maml:description>
				<maml:para>Indicates whether the link is capable of full-duplex. The valid values are Full and Half. You can set this parameter only when updating a PhysicalNIC. Use this parameter only if the AutoNegotiate parameter is not set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BitRatePerSecMb</maml:name>
			<maml:description>
				<maml:para>Specifies the bit rate of the link. Only valid when configuring a physical NIC. Use this parameter only if the AutoNegotiate parameter is not set. Note that updating the speed (BitRatePerSec) of a physical NIC might take some time due to the hardware configuration being performed, and the returned object might still contain the current configuration instead of the updated one.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AutoNegotiate</maml:name>
			<maml:description>
				<maml:para>Indicates that the host network adapter speed/duplex settings are configured automatically. Use this parameter only if the Duplex and BitRatePerSecMb parameters are not set.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VirtualNic</maml:name>
			<maml:description>
				<maml:para>Provide a list of the host network adapters you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HostVirtualNic[]</command:parameterValue>
			<dev:type>
				<maml:name>HostVirtualNic[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Dhcp</maml:name>
			<maml:description>
				<maml:para>Indicates whether the host network adapter uses a Dhcp server. This parameter works only on ESXi hosts. For VMKernel adapters, Dhcp is supported only on ESX 4.1 and later.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IP</maml:name>
			<maml:description>
				<maml:para>Specifies an IP address for the network adapter using an IPv4 dot notation. If the NIC has no subnet mask previously defined, you must also set the SubnetMask parameter. If the IP parameter is not specified, DHCP mode is enabled. Only valid when configuring a virtual NIC.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SubnetMask</maml:name>
			<maml:description>
				<maml:para>Specifies a subnet mask for the NIC. If the NIC has a subnet mask previously defined, specifying the SubnetMask parameter when configuring the IP address is not mandatory unless you want to modify the mask. Only valid when configuring a virtual NIC.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Mac</maml:name>
			<maml:description>
				<maml:para>Specifies the media access control (MAC) address of the virtual network adapter. Only valid when configuring a virtual NIC.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Mtu</maml:name>
			<maml:description>
				<maml:para>Specifies the MTU size.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMotionEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to use the virtual host/VMKernel network adapter for VMotion.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FaultToleranceLoggingEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that the network adapter is enabled for Fault Tolerance (FT) logging. This parameter is supported only on ESX/vCenter Server 4.1 and later.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagementTrafficEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to enable the network adapter for management traffic. This parameter is supported only on ESX/ESXi/vCenter Server 4.1 and later.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VsanTrafficEnabled</maml:name>
			<maml:description>
				<maml:para>Specifies whether Virtual SAN traffic is enabled on this network adapter.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IPv6ThroughDhcp</maml:name>
			<maml:description>
				<maml:para>Indicates that the IPv6 address is obtained through DHCP.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AutomaticIPv6</maml:name>
			<maml:description>
				<maml:para>Indicates that the IPv6 address is obtained through a router advertisement.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IPv6</maml:name>
			<maml:description>
				<maml:para>Specifies static addresses using the following format: &lt;IPv6&gt;/&lt;subnet_prefix_length&gt; or &lt;IPv6&gt;. If you skip &lt;subnet_prefix_length&gt;, the default value of 64 is used. Specifying a value for IPv6 parameter overrides the current configuration. To clear all configured static IP addresses, pass an empty array to the IPv6 parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IPv6Enabled</maml:name>
			<maml:description>
				<maml:para>Indicates that IPv6 configuration is enabled. Setting this parameter to $false disables all IPv6-related parameters. If the value is $true&quot;, you need to provide values for at least one of the IPv6ThroughDhcp, AutomaticIPv6, and IPv6 parameters.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PortGroup</maml:name>
			<maml:description>
				<maml:para>Specifies a distributed port group to which you want to connect the host network adapter. You can use this parameter only to migrate a virtual network adapter from a standard port group to a distributed port group.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DistributedPortGroup</command:parameterValue>
			<dev:type>
				<maml:name>DistributedPortGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified HostNic objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>If the VirtualNic parameter is specified, the cmdlet returns the zero or more modified HostVirtualNic objects. If the PhysicalNic parameter is specified, the cmdlet returns the zero or more modified PhysicalNic objects.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>To configure IPv6 settings, you must be working on ESX 4.1 or later and IPv6 must be enabled on the ESX system.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vswitch =  New-VirtualSwitch -VMHost 10.23.112.234  -Name VSwitch

$nic =  New-VMHostNetworkAdapter -VMHost 10.23.112.234 -PortGroup PortGroup -VirtualSwitch $vswitch -IP 10.23.123.234 -SubnetMask 255.255.254.0

Set-VMHostNetworkAdapter -VirtualNIC $nic -IP 10.23.112.245 -SubnetMask 255.255.255.0 -Mtu 4000</dev:code>
  			<dev:remarks>
				<maml:para>Updates the network adapter IP address, Subnet mask, and MTU size.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost Host | Get-VMHostNetworkAdapter -VMKernel | Set-VMHostNetworkAdapter -VMotionEnabled $true</dev:code>
  			<dev:remarks>
				<maml:para>Enable VMotion on all VMKernel network adapters on the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostNetworkAdapter | where { $_.PortGroupName -eq &quot;Service Console 1&quot; } | Set-VMHostNetworkAdapter -IPv6Enabled $false</dev:code>
  			<dev:remarks>
				<maml:para>Disables the IPv6 support on a network adapter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostNetworkAdapter | where { $_.PortGroupName -eq &quot;Service Console 1&quot; } | Set-VMHostNetworkAdapter -IPv6ThroughDhcp $true</dev:code>
  			<dev:remarks>
				<maml:para>Configures a network adapter to obtain IPv6 through DHCP.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 5 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostNetworkAdapter | where { $_.PortGroupName -eq &quot;Service Console 1&quot; } | Set-VMHostNetworkAdapter -AutomaticIPv6 $true</dev:code>
  			<dev:remarks>
				<maml:para>Configures a network adapter to obtain IPv6 by a router advertisement.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 6 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostNetworkAdapter | where { $_.PortGroupName -eq &quot;Service Console 1&quot; } | Set-VMHostNetworkAdapter -IPv6 $ipv6Address</dev:code>
  			<dev:remarks>
				<maml:para>Changes the IPv6 address of a network adapter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostNetworkAdapter.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostNetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostNetworkAdapter</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostProfile</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the specified host profile.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostProfile</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the specified host profile.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostProfile</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies a new name for the host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>ReferenceHost</maml:name>
				<maml:description>
					<maml:para>Specifies a reference host for the host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VMHost</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "3" >
				<maml:name>Profile</maml:name>
				<maml:description>
					<maml:para>Specifies the host profile you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostProfile[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Specifies a new description for the host profile.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specifies a new name for the host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="2">
			<maml:name>ReferenceHost</maml:name>
			<maml:description>
				<maml:para>Specifies a reference host for the host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VMHost</command:parameterValue>
			<dev:type>
				<maml:name>VMHost</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="3">
			<maml:name>Profile</maml:name>
			<maml:description>
				<maml:para>Specifies the host profile you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostProfile[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostProfile[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Specifies a new description for the host profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostProfile objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$profile = ( Get-VMHostProfile -Name Profile )[0]

Set-VMHostProfile -Profile $profile -Description &quot;New description.&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Changes the description of the Profile host profile.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostProfile.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Invoke-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Test-VMHostProfileCompliance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostRoute</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies a route in the host routing table.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostRoute</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies a route in the host routing table.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostRoute</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHostRoute</maml:name>
				<maml:description>
					<maml:para>Specifies the route you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostRoute[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Changes the destination IP address of the route.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >IPAddress</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Gateway</maml:name>
				<maml:description>
					<maml:para>Changes the gateway IP address of the route.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >IPAddress</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>PrefixLength</maml:name>
				<maml:description>
					<maml:para>Modifies the prefix length of the destination IP address. For IPv4, the valid values are from 0 to 32, and for IPv6 - from 0 to 128.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHostRoute</maml:name>
			<maml:description>
				<maml:para>Specifies the route you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostRoute[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostRoute[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Changes the destination IP address of the route.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IPAddress</command:parameterValue>
			<dev:type>
				<maml:name>IPAddress</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Gateway</maml:name>
			<maml:description>
				<maml:para>Changes the gateway IP address of the route.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IPAddress</command:parameterValue>
			<dev:type>
				<maml:name>IPAddress</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrefixLength</maml:name>
			<maml:description>
				<maml:para>Modifies the prefix length of the destination IP address. For IPv4, the valid values are from 0 to 32, and for IPv6 - from 0 to 128.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VMHostRoute objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Supported only on ESX 4.1/ vCenter Server 4.1 and later.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhostroute = New-VMHostRoute -VMHost 10.23.114.189 -Destination 192.168.104.101 -Gateway 10.23.84.69 -PrefixLength 32

$vmhostroute | Set-VMHostRoute -Gateway 10.23.84.70</dev:code>
  			<dev:remarks>
				<maml:para>Creates a new host route and modifies its gateway.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhostroute1 = New-VMHostRoute -VMHost 10.23.114.189 -Destination 192.168.104.101 -Gateway 10.23.84.69 -PrefixLength 32

$vmhostroute2 = New-VMHostRoute -VMHost 10.23.114.190 -Destination 192.168.104.101 -Gateway 10.23.84.70 -PrefixLength 32

Set-VMHostRoute -VMHostRoute ($vmhostroute1, $vmhostroute2) -Destination 192.168.104.0 -PrefixLength 24</dev:code>
  			<dev:remarks>
				<maml:para>Modifies the destination and the prefix length of two host routes.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostRoute.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostRoute</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostService</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies a host service.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostService</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies a host service.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostService</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HostService</maml:name>
				<maml:description>
					<maml:para>Specifies the host service you want to update.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HostService[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "2" >
				<maml:name>Policy</maml:name>
				<maml:description>
					<maml:para>Specifies an activation policy for the host service.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HostServicePolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HostService</maml:name>
			<maml:description>
				<maml:para>Specifies the host service you want to update.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HostService[]</command:parameterValue>
			<dev:type>
				<maml:name>HostService[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Policy</maml:name>
			<maml:description>
				<maml:para>Specifies an activation policy for the host service.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HostServicePolicy</command:parameterValue>
			<dev:type>
				<maml:name>HostServicePolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified HostService objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostService -VMHost Host | Set-VMHostService -Policy &quot;Automatic&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Sets the policy of all services the Host virtual machine host to &quot;Automatic&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostService.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostSnmp</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the host SNMP configuration.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostSnmp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the host SNMP configuration. If specified, adds or removes a trap target (removing can be specified by either TrapTargetToRemove parameter or by any of the following parameters (or combination of them): TargetCommunity, TargetHost, TargetPort). If the user passes $null, an empty array or string to the ReadOnlyCommunities parameter,  the old values of this property are erased. This results in a NULL value of this property of the output object.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostSnmp</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HostSnmp</maml:name>
				<maml:description>
					<maml:para>Specifies the host Snmp object you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VmHostSnmp[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Indicates that the SNMP feature is enabled on the specified host.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>Specifies the port on which the host listens to SNMP messages.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ReadOnlyCommunity</maml:name>
				<maml:description>
					<maml:para>Provide a list of communities, identifying who is able to send SNMP requests to that host. If $null, an empty array or string are passed to this parameter, its old values are erased and the output object for the ReadOnlyCommunity property is an empty array. In PowerShell an empty array is defined by @().</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VMHostSnmp</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HostSnmp</maml:name>
				<maml:description>
					<maml:para>Specifies the host Snmp object you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VmHostSnmp[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Indicates that the SNMP feature is enabled on the specified host.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>Specifies the port on which the host listens to SNMP messages.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ReadOnlyCommunity</maml:name>
				<maml:description>
					<maml:para>Provide a list of communities, identifying who is able to send SNMP requests to that host. If $null, an empty array or string are passed to this parameter, its old values are erased and the output object for the ReadOnlyCommunity property is an empty array. In PowerShell an empty array is defined by @().</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>TargetCommunity</maml:name>
				<maml:description>
					<maml:para>Specifies the community identifier of the trap target.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>TargetPort</maml:name>
				<maml:description>
					<maml:para>Specifies the port on which the target host listens to SNMP messages.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>TargetHost</maml:name>
				<maml:description>
					<maml:para>Specifies the identifier of the target host - a host name or an IP address.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>AddTarget</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to add a new trap target to the host SNMP configuration. A trap target consists of three elements - Community (mandatory), HostName (mandatory), Port (optional - defaults to 162), specified by the TargetCommunity, TargetHost, and TargetPort parameters.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VMHostSnmp</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HostSnmp</maml:name>
				<maml:description>
					<maml:para>Specifies the host Snmp object you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VmHostSnmp[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Indicates that the SNMP feature is enabled on the specified host.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>Specifies the port on which the host listens to SNMP messages.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ReadOnlyCommunity</maml:name>
				<maml:description>
					<maml:para>Provide a list of communities, identifying who is able to send SNMP requests to that host. If $null, an empty array or string are passed to this parameter, its old values are erased and the output object for the ReadOnlyCommunity property is an empty array. In PowerShell an empty array is defined by @().</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>TargetCommunity</maml:name>
				<maml:description>
					<maml:para>Specifies the community identifier of the trap target.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>TargetPort</maml:name>
				<maml:description>
					<maml:para>Specifies the port on which the target host listens to SNMP messages.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>TargetHost</maml:name>
				<maml:description>
					<maml:para>Specifies the identifier of the target host - a host name or an IP address.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveTarget</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to remove a trap target from the host SNMP configuration. There are two ways to specify a trap target:
* Pass the trap target to the TrapTargetToRemove parameter.
* Use a combination of the TargetCommunity, TargetHost, and TargetPort parameters to specify a criteria (for example, remove all trap targets that are using port 162).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VMHostSnmp</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HostSnmp</maml:name>
				<maml:description>
					<maml:para>Specifies the host Snmp object you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VmHostSnmp[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Indicates that the SNMP feature is enabled on the specified host.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>Specifies the port on which the host listens to SNMP messages.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>ReadOnlyCommunity</maml:name>
				<maml:description>
					<maml:para>Provide a list of communities, identifying who is able to send SNMP requests to that host. If $null, an empty array or string are passed to this parameter, its old values are erased and the output object for the ReadOnlyCommunity property is an empty array. In PowerShell an empty array is defined by @().</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RemoveTarget</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to remove a trap target from the host SNMP configuration. There are two ways to specify a trap target:
* Pass the trap target to the TrapTargetToRemove parameter.
* Use a combination of the TargetCommunity, TargetHost, and TargetPort parameters to specify a criteria (for example, remove all trap targets that are using port 162).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>TrapTargetToRemove</maml:name>
				<maml:description>
					<maml:para>Specifies the trap target you want to remove. The trap target can be obtained from the “TrapTargets” property of the HostSNMP object (an array of TrapTarget objects).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >TrapTarget</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HostSnmp</maml:name>
			<maml:description>
				<maml:para>Specifies the host Snmp object you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VmHostSnmp[]</command:parameterValue>
			<dev:type>
				<maml:name>VmHostSnmp[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Indicates that the SNMP feature is enabled on the specified host.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Port</maml:name>
			<maml:description>
				<maml:para>Specifies the port on which the host listens to SNMP messages.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReadOnlyCommunity</maml:name>
			<maml:description>
				<maml:para>Provide a list of communities, identifying who is able to send SNMP requests to that host. If $null, an empty array or string are passed to this parameter, its old values are erased and the output object for the ReadOnlyCommunity property is an empty array. In PowerShell an empty array is defined by @().</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TargetCommunity</maml:name>
			<maml:description>
				<maml:para>Specifies the community identifier of the trap target.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TargetPort</maml:name>
			<maml:description>
				<maml:para>Specifies the port on which the target host listens to SNMP messages.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TargetHost</maml:name>
			<maml:description>
				<maml:para>Specifies the identifier of the target host - a host name or an IP address.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AddTarget</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to add a new trap target to the host SNMP configuration. A trap target consists of three elements - Community (mandatory), HostName (mandatory), Port (optional - defaults to 162), specified by the TargetCommunity, TargetHost, and TargetPort parameters.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveTarget</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to remove a trap target from the host SNMP configuration. There are two ways to specify a trap target:
* Pass the trap target to the TrapTargetToRemove parameter.
* Use a combination of the TargetCommunity, TargetHost, and TargetPort parameters to specify a criteria (for example, remove all trap targets that are using port 162).</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrapTargetToRemove</maml:name>
			<maml:description>
				<maml:para>Specifies the trap target you want to remove. The trap target can be obtained from the “TrapTargets” property of the HostSNMP object (an array of TrapTarget objects).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TrapTarget</command:parameterValue>
			<dev:type>
				<maml:name>TrapTarget</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VmHostSnmp objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>You must be connected to the ESX/ESXi host directly.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmhostSNMP = Get-VMHostSNMP

Set-VMHostSNMP $vmhostSNMP -Enabled:$true -ReadOnlyCommunity &#39;example-community&#39;</dev:code>
  			<dev:remarks>
				<maml:para>Enables SNMP on a virtual machine host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostSnmp | Set-VMHostSnmp -ReadonlyCommunity @()</dev:code>
  			<dev:remarks>
				<maml:para>Sets the virtual machine host SNMP by erasing the old value of the ReadOnlyCommunity parameter.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostSnmp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostSNMP</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Test-VMHostSNMP</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostStartPolicy</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the host default start policy.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostStartPolicy</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the host default start policy. Start policy defines what happens to virtual machines when the server starts up or stops.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostStartPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHostStartPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the host start policy you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostStartPolicy[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Indicates that the service that controls the host start policies is enabled. If it is enabled, the default start policies and the start policies of the specified hosts are applied. If disabled, no start policy is applied.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartDelay</maml:name>
				<maml:description>
					<maml:para>Specifies a default start delay of the virtual machines in seconds.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StopAction</maml:name>
				<maml:description>
					<maml:para>Specifies the default action that is applied to the virtual machines when the server stops. The valid values are None, Suspend, PowerOff, or GuestShutDown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VmStopAction</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StopDelay</maml:name>
				<maml:description>
					<maml:para>Specifies a default stop delay of the virtual machines in seconds.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WaitForHeartBeat</maml:name>
				<maml:description>
					<maml:para>Specifies whether the virtual machines should start after receiving a heartbeat from the host, ignore heartbeats, and start after the StartDelay has elapsed ($true), or follow the system default before powering on ($false). When a virtual machine is next in the start order, the system either waits a specified period of time for a host to power on or it waits until it receives a successful heartbeat from a powered-on host.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHostStartPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the host start policy you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostStartPolicy[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostStartPolicy[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Indicates that the service that controls the host start policies is enabled. If it is enabled, the default start policies and the start policies of the specified hosts are applied. If disabled, no start policy is applied.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StartDelay</maml:name>
			<maml:description>
				<maml:para>Specifies a default start delay of the virtual machines in seconds.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StopAction</maml:name>
			<maml:description>
				<maml:para>Specifies the default action that is applied to the virtual machines when the server stops. The valid values are None, Suspend, PowerOff, or GuestShutDown.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VmStopAction</command:parameterValue>
			<dev:type>
				<maml:name>VmStopAction</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StopDelay</maml:name>
			<maml:description>
				<maml:para>Specifies a default stop delay of the virtual machines in seconds.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WaitForHeartBeat</maml:name>
			<maml:description>
				<maml:para>Specifies whether the virtual machines should start after receiving a heartbeat from the host, ignore heartbeats, and start after the StartDelay has elapsed ($true), or follow the system default before powering on ($false). When a virtual machine is next in the start order, the system either waits a specified period of time for a host to power on or it waits until it receives a successful heartbeat from a powered-on host.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VMHostStartPolicy objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost&#160;Host | Get-VMHostStartPolicy | Set-VMHostStartPolicy -Enabled:$true -StartOrder 2 -StartDelay 300 -StopAction GuestShutDown -StopDelay 300</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the start policy of the Host host and modifies its configuration settings.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost&#160;Host | Get-VMHostStartPolicy | Set-VMHostStartPolicy&#160;-WaitForHeartbeat</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the start policy of the Host host and modifies its configuration settings, so that virtual machines on the specified host wait for the host heartbeat.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostStartPolicy.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostStartPolicy</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostStorage</command:name>
		<maml:description>
			<maml:para>This cmdlet configures a host storage.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostStorage</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet configures a host storage. The cmdlet enables or disables the software iSCSI support for the specified VMHostStorage objects.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostStorage</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMHostStorage</maml:name>
				<maml:description>
					<maml:para>Specifies the host storage you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostStorageInfo[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SoftwareIScsiEnabled</maml:name>
				<maml:description>
					<maml:para>Indicates that on this storage, software iSCSI is enabled.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMHostStorage</maml:name>
			<maml:description>
				<maml:para>Specifies the host storage you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostStorageInfo[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostStorageInfo[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SoftwareIScsiEnabled</maml:name>
			<maml:description>
				<maml:para>Indicates that on this storage, software iSCSI is enabled.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VMHostStorageInfo objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHostStorage 10.23.112.234 | Set-VMHostStorage -SoftwareIScsiEnabled $true</dev:code>
  			<dev:remarks>
				<maml:para>Enables the iSCSI on the specified storage.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostStorage.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostStorage</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMHostSysLogServer</command:name>
		<maml:description>
			<maml:para>This cmdlet configures the remote syslog server of the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMHostSysLogServer</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet configures the remote syslog server of the specified hosts.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMHostSysLogServer</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>SysLogServer</maml:name>
				<maml:description>
					<maml:para>Specifies the sys log servers you want to configure. The parameter accepts objects of the NamedIPEndPoint, IPEndPoint, IPAddress, and String types.
The accepted formats, if string is used, are DNS names and the standard IPv6/IPv4 format: FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:192.168.0.1:80, where the FFFF:FFFF:FFFF:FFFF:FFFF:FFFF can be replaced by any hex value with the same structure (both upper or lower case). It is only meaningful in case of IPv6 address and is omitted for IPv4. The 192.168.0.1 part is mandatory and can be any address in the IPv4 format. The :80 part is optional. If omitted, the port must be specified through the SysLogServerPort parameter. If Syslog is set to $null, the configured syslog server, if any, is removed.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >NamedIPEndPoint[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host whose syslog servers you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>SysLogServerPort</maml:name>
				<maml:description>
					<maml:para>Specifies the sys log server port. Must be specified if the string that is passed to the SysLogServer parameter does not contain the port value, or the argument of the SysLogServer is an IP address.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>SysLogServer</maml:name>
			<maml:description>
				<maml:para>Specifies the sys log servers you want to configure. The parameter accepts objects of the NamedIPEndPoint, IPEndPoint, IPAddress, and String types.
The accepted formats, if string is used, are DNS names and the standard IPv6/IPv4 format: FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:192.168.0.1:80, where the FFFF:FFFF:FFFF:FFFF:FFFF:FFFF can be replaced by any hex value with the same structure (both upper or lower case). It is only meaningful in case of IPv6 address and is omitted for IPv4. The 192.168.0.1 part is mandatory and can be any address in the IPv4 format. The :80 part is optional. If omitted, the port must be specified through the SysLogServerPort parameter. If Syslog is set to $null, the configured syslog server, if any, is removed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">NamedIPEndPoint[]</command:parameterValue>
			<dev:type>
				<maml:name>NamedIPEndPoint[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host whose syslog servers you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SysLogServerPort</maml:name>
			<maml:description>
				<maml:para>Specifies the sys log server port. Must be specified if the string that is passed to the SysLogServer parameter does not contain the port value, or the argument of the SysLogServer is an IP address.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The modified NamedIPEndPoint object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para>The updated value of the syslog server for the host.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMHostSysLogServer -SysLogServer &#39;192.168.0.1:133&#39; -VMHost Host</dev:code>
  			<dev:remarks>
				<maml:para>Sets a SysLog server on the Host virtual machine host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMHostSysLogServer -SysLogServer $null -VMHost Host</dev:code>
  			<dev:remarks>
				<maml:para>Removes the SysLog server from the Host virtual machine host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMHostSysLogServer.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostSysLogServer</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMQuestion</command:name>
		<maml:description>
			<maml:para>This cmdlet answers the specified virtual machine question.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMQuestion</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet answers the specified virtual machine question using the value of the Option parameter.  If the DefaultOption parameter is set to $true, the cmdlet answers the question with a default option, if any.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMQuestion</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMQuestion</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine question you want to answer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMQuestion[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "true" pipelineInput = "false" position = "1" >
				<maml:name>Option</maml:name>
				<maml:description>
					<maml:para>Specifies an object or string to provide an option to the virtual machine question. Wildcards are supported for string values. The string can be used to specify an option ID or label. If the string does not match a valid option ID or label, or if there are multiple matches, an error is generated.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Object</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-VMQuestion</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "named" >
				<maml:name>VMQuestion</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine question you want to answer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMQuestion[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DefaultOption</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to answer the virtual machine question using a default option. If no default option exists for the question, an error is generated.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VMQuestion</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine question you want to answer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMQuestion[]</command:parameterValue>
			<dev:type>
				<maml:name>VMQuestion[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="1">
			<maml:name>Option</maml:name>
			<maml:description>
				<maml:para>Specifies an object or string to provide an option to the virtual machine question. Wildcards are supported for string values. The string can be used to specify an option ID or label. If the string does not match a valid option ID or label, or if there are multiple matches, an error is generated.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultOption</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to answer the virtual machine question using a default option. If no default option exists for the question, an error is generated.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The modified VMQuestion object</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>You can also call this cmdlet via the Answer-VMQuestion alias.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMQuestion -VMQuestion $question -DefaultOption</dev:code>
  			<dev:remarks>
				<maml:para>Answers the question stored in the $question with a default option.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMQuestion -VMQuestion $question -Option &quot;Cancel&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Answers the question stored in the $question variable with &quot;cancel&quot;.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM | Get-VMQuestion | Set-VMQuestion -DefaultOption</dev:code>
  			<dev:remarks>
				<maml:para>Answers the question of VM virtual machine with a default option.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMQuestion.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMQuestion</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMResourceConfiguration</command:name>
		<maml:description>
			<maml:para>This cmdlet configures resource allocation between the virtual machines.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMResourceConfiguration</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet configures resource allocation between the virtual machines. To retain the current value of a setting, omit the corresponding parameter. To disable a setting (only applicable to the nullable limit settings), pass $null.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMResourceConfiguration</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Configuration</maml:name>
				<maml:description>
					<maml:para>Specifies the configuration object you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMResourceConfiguration[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HtCoreSharing</maml:name>
				<maml:description>
					<maml:para>Specifies whether a virtual machine is scheduled to share a physical processor core (assuming hyperthreading is enabled on the host at all). The following values are valid:

Any - (default) the virtual CPUs of this virtual machine can freely share cores with other virtual CPUs of this or other virtual machines.

None - the virtual CPUs of this virtual machine have exclusive use of a processor core whenever they are scheduled to it. The other hyperthread of the core is &quot;halted&quot; while this virtual machine is using the core.

Internal - on a virtual machine with exactly two virtual processors, the two virtual processors are allowed to share one physical core (at the discretion of the ESX scheduler), but this virtual machine never shares a core with any other virtual machine. If this virtual machine has any other number of processors than two, this setting is the same as the None setting.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >HTCoreSharing</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuAffinity</maml:name>
				<maml:description>
					<maml:para>The use of this parameter is deprecated. Use CpuAffinityList instead.

Specifies the distribution of virtual machine CPUs across the physical cores or hyperthreads of the host. You must pass exactly as many arguments as the number of CPUs of the virtual machine. Each argument specifies the physical core or hyperthread that the virtual machine will use. Valid arguments are NoAffinity, Cpu1, …, Cpu63.

When the virtual machine resides in a DRS cluster, you cannot use CpuAffinity.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >CpuAffinity</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuAffinityList</maml:name>
				<maml:description>
					<maml:para>Specifies the distribution of virtual machine CPUs across the physical cores or hyperthreads of the host. You must pass exactly as many arguments as the number of CPUs of the virtual machine. Each argument specifies the physical core or hyperthread that the virtual machine will use. Valid arguments are positive integers. To clear formerly specified arguments, pass an empty array.

When the virtual machine resides in a DRS cluster, you cannot use CpuAffinityList.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Int32[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuReservationMhz</maml:name>
				<maml:description>
					<maml:para>Specifies the number of CPU MHz that are guaranteed to be available.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuLimitMhz</maml:name>
				<maml:description>
					<maml:para>Specifies the limit on CPU usage in MHz. Utilization will not exceed this limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>CpuSharesLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU allocation level. Used in relative allocation between virtual machines. The valid values are Custom, High, Low, and Normal.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SharesLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumCpuShares</maml:name>
				<maml:description>
					<maml:para>Specifies the CPU allocation level for this pool. Used in relative allocation between resource consumers. This parameter is ignored unless CpuSharesLevel is set to Custom.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemReservationMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemReservationGB instead.
Specifies the guaranteed available memory in megabytes (MB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemReservationGB</maml:name>
				<maml:description>
					<maml:para>Specifies the guaranteed available memory in gigabytes (GB).</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemLimitMB</maml:name>
				<maml:description>
					<maml:para>This parameter is obsolete. Use MemLimitGB instead.
Specifies a memory usage limit in megabytes (MB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemLimitGB</maml:name>
				<maml:description>
					<maml:para>Specifies a memory usage limit in gigabytes (GB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Decimal</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>MemSharesLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the memory allocation level for this pool. Used in relative allocation between resource consumers. The valid values are Custom, High, Low, and Normal.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SharesLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumMemShares</maml:name>
				<maml:description>
					<maml:para>Specifies the number of memory shares allocated. Used to determine resource allocation in case of resource contention.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Disk</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual hard disk you want to configure.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HardDisk[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NumDiskShares</maml:name>
				<maml:description>
					<maml:para>Specifies the number of shares allocated. Used to determine resource allocation in case of resource contention.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskSharesLevel</maml:name>
				<maml:description>
					<maml:para>Specifies the allocation level. The level is a simplified view of shares. Levels map to a pre-determined set of numeric values for shares. If the shares value does not map to a predefined size, then the level is set as custom.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SharesLevel</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>DiskLimitIOPerSecond</maml:name>
				<maml:description>
					<maml:para>Specifies the disk limit IO per second. The valid values are in the range between 16 and 2147483647. -1 means unlimited.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int64</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Configuration</maml:name>
			<maml:description>
				<maml:para>Specifies the configuration object you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMResourceConfiguration[]</command:parameterValue>
			<dev:type>
				<maml:name>VMResourceConfiguration[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HtCoreSharing</maml:name>
			<maml:description>
				<maml:para>Specifies whether a virtual machine is scheduled to share a physical processor core (assuming hyperthreading is enabled on the host at all). The following values are valid:

Any - (default) the virtual CPUs of this virtual machine can freely share cores with other virtual CPUs of this or other virtual machines.

None - the virtual CPUs of this virtual machine have exclusive use of a processor core whenever they are scheduled to it. The other hyperthread of the core is &quot;halted&quot; while this virtual machine is using the core.

Internal - on a virtual machine with exactly two virtual processors, the two virtual processors are allowed to share one physical core (at the discretion of the ESX scheduler), but this virtual machine never shares a core with any other virtual machine. If this virtual machine has any other number of processors than two, this setting is the same as the None setting.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">HTCoreSharing</command:parameterValue>
			<dev:type>
				<maml:name>HTCoreSharing</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuAffinity</maml:name>
			<maml:description>
				<maml:para>The use of this parameter is deprecated. Use CpuAffinityList instead.

Specifies the distribution of virtual machine CPUs across the physical cores or hyperthreads of the host. You must pass exactly as many arguments as the number of CPUs of the virtual machine. Each argument specifies the physical core or hyperthread that the virtual machine will use. Valid arguments are NoAffinity, Cpu1, …, Cpu63.

When the virtual machine resides in a DRS cluster, you cannot use CpuAffinity.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">CpuAffinity</command:parameterValue>
			<dev:type>
				<maml:name>CpuAffinity</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuAffinityList</maml:name>
			<maml:description>
				<maml:para>Specifies the distribution of virtual machine CPUs across the physical cores or hyperthreads of the host. You must pass exactly as many arguments as the number of CPUs of the virtual machine. Each argument specifies the physical core or hyperthread that the virtual machine will use. Valid arguments are positive integers. To clear formerly specified arguments, pass an empty array.

When the virtual machine resides in a DRS cluster, you cannot use CpuAffinityList.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			<dev:type>
				<maml:name>Int32[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuReservationMhz</maml:name>
			<maml:description>
				<maml:para>Specifies the number of CPU MHz that are guaranteed to be available.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuLimitMhz</maml:name>
			<maml:description>
				<maml:para>Specifies the limit on CPU usage in MHz. Utilization will not exceed this limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CpuSharesLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU allocation level. Used in relative allocation between virtual machines. The valid values are Custom, High, Low, and Normal.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SharesLevel</command:parameterValue>
			<dev:type>
				<maml:name>SharesLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumCpuShares</maml:name>
			<maml:description>
				<maml:para>Specifies the CPU allocation level for this pool. Used in relative allocation between resource consumers. This parameter is ignored unless CpuSharesLevel is set to Custom.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemReservationMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemReservationGB instead.
Specifies the guaranteed available memory in megabytes (MB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemReservationGB</maml:name>
			<maml:description>
				<maml:para>Specifies the guaranteed available memory in gigabytes (GB).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemLimitMB</maml:name>
			<maml:description>
				<maml:para>This parameter is obsolete. Use MemLimitGB instead.
Specifies a memory usage limit in megabytes (MB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemLimitGB</maml:name>
			<maml:description>
				<maml:para>Specifies a memory usage limit in gigabytes (GB). If this parameter is set, utilization will not exceed the specified limit even if there are available resources.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Decimal</command:parameterValue>
			<dev:type>
				<maml:name>Decimal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemSharesLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the memory allocation level for this pool. Used in relative allocation between resource consumers. The valid values are Custom, High, Low, and Normal.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SharesLevel</command:parameterValue>
			<dev:type>
				<maml:name>SharesLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumMemShares</maml:name>
			<maml:description>
				<maml:para>Specifies the number of memory shares allocated. Used to determine resource allocation in case of resource contention.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Disk</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual hard disk you want to configure.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HardDisk[]</command:parameterValue>
			<dev:type>
				<maml:name>HardDisk[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NumDiskShares</maml:name>
			<maml:description>
				<maml:para>Specifies the number of shares allocated. Used to determine resource allocation in case of resource contention.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskSharesLevel</maml:name>
			<maml:description>
				<maml:para>Specifies the allocation level. The level is a simplified view of shares. Levels map to a pre-determined set of numeric values for shares. If the shares value does not map to a predefined size, then the level is set as custom.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SharesLevel</command:parameterValue>
			<dev:type>
				<maml:name>SharesLevel</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiskLimitIOPerSecond</maml:name>
			<maml:description>
				<maml:para>Specifies the disk limit IO per second. The valid values are in the range between 16 and 2147483647. -1 means unlimited.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
			<dev:type>
				<maml:name>Int64</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VMResourceConfiguration objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Set-VMResourceConfiguration -Configuration $conf -CpuAffinity ([CpuAffinity]::Cpu1 -bor [CpuAffinity]::Cpu2)</dev:code>
  			<dev:remarks>
				<maml:para>Specifies two affinities for the virtual machine resource configuration in the $conf variable. Bit Or is used.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMResourceConfiguration.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMResourceConfiguration</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Set-VMStartPolicy</command:name>
		<maml:description>
			<maml:para>This cmdlet modifies the virtual machine start policy.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>VMStartPolicy</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet modifies the virtual machine start policy. Start policy defines what happens to virtual machines when the server starts up or stops.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-VMStartPolicy</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>StartPolicy</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine start policy you want to modify.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMStartPolicy[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartAction</maml:name>
				<maml:description>
					<maml:para>Specifies a start action for virtual machines. It can be None or PowerOn.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VmStartAction</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartOrder</maml:name>
				<maml:description>
					<maml:para>Specifies a number to define the virtual machines start order.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritStopActionFromHost</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual machine uses the value of the StopAction parameter of the host.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritStopDelayFromHost</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual machine uses the value of the StopDelay parameter of the host.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritWaitForHeartbeatFromHost</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual machine uses the value of the WaitforHeartbeat parameter of the host.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>InheritStartDelayFromHost</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual machine uses the value of the StartDelay parameter of the host.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>UnspecifiedStartOrder</maml:name>
				<maml:description>
					<maml:para>Indicates that no order is defined for starting the virtual machines.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StartDelay</maml:name>
				<maml:description>
					<maml:para>Specifies a default start delay in seconds.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StopAction</maml:name>
				<maml:description>
					<maml:para>Specifies the default action of the virtual machine when the server stops. The valid values are None, Suspend, PowerOff, and GuestShutDown.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >VmStopAction</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>StopDelay</maml:name>
				<maml:description>
					<maml:para>Specifies the default stop delay in seconds.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WaitForHeartBeat</maml:name>
				<maml:description>
					<maml:para>Indicates whether the virtual machine should start after receiving a heartbeat, ignore heartbeats and start after the StartDelay has elapsed ($true), or follow the system default before powering on ($false). When a virtual machine is next in the start order, the system either waits a specified period of time for a virtual machine to power on or it waits until it receives a successful heartbeat from a powered on virtual machine.</maml:para>
				</maml:description>
			<command:parameterValue required="false" variableLength = "false" >Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>StartPolicy</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine start policy you want to modify.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMStartPolicy[]</command:parameterValue>
			<dev:type>
				<maml:name>VMStartPolicy[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StartAction</maml:name>
			<maml:description>
				<maml:para>Specifies a start action for virtual machines. It can be None or PowerOn.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VmStartAction</command:parameterValue>
			<dev:type>
				<maml:name>VmStartAction</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StartOrder</maml:name>
			<maml:description>
				<maml:para>Specifies a number to define the virtual machines start order.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritStopActionFromHost</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual machine uses the value of the StopAction parameter of the host.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritStopDelayFromHost</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual machine uses the value of the StopDelay parameter of the host.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritWaitForHeartbeatFromHost</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual machine uses the value of the WaitforHeartbeat parameter of the host.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InheritStartDelayFromHost</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual machine uses the value of the StartDelay parameter of the host.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UnspecifiedStartOrder</maml:name>
			<maml:description>
				<maml:para>Indicates that no order is defined for starting the virtual machines.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StartDelay</maml:name>
			<maml:description>
				<maml:para>Specifies a default start delay in seconds.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StopAction</maml:name>
			<maml:description>
				<maml:para>Specifies the default action of the virtual machine when the server stops. The valid values are None, Suspend, PowerOff, and GuestShutDown.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">VmStopAction</command:parameterValue>
			<dev:type>
				<maml:name>VmStopAction</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StopDelay</maml:name>
			<maml:description>
				<maml:para>Specifies the default stop delay in seconds.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WaitForHeartBeat</maml:name>
			<maml:description>
				<maml:para>Indicates whether the virtual machine should start after receiving a heartbeat, ignore heartbeats and start after the StartDelay has elapsed ($true), or follow the system default before powering on ($false). When a virtual machine is next in the start order, the system either waits a specified period of time for a virtual machine to power on or it waits until it receives a successful heartbeat from a powered on virtual machine.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more modified VMStartPolicy objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vmstartpolicy = Get-VMStartPolicy -VM VM

Set-VMStartPolicy -StartPolicy $vmstartpolicy -StartAction PowerOn</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves the start policy of the VM virtual machine and defines that when the server starts, the virtual machine is powered on.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM | Get-VMStartPolicy | Set-VMStartpolicy -InheritStopActionFromHost -InheritStopDelayFromHost</dev:code>
  			<dev:remarks>
				<maml:para>Reconfigures the start policy of the VM virtual machine to inherit the values of the StopAction and StopDelay from the host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM | Get-VMStartPolicy | Set-VMStartpolicy -StartAction PowerOn -StartOrder 2 -StartDelay 300 -StopAction GuestShutDown -StopDelay 300</dev:code>
  			<dev:remarks>
				<maml:para>Retrieve the start policy of the specified virtual machine and modify its configuration settings.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Set-VMStartPolicy.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMStartPolicy</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Start-VApp</command:name>
		<maml:description>
			<maml:para>This cmdlet starts vApps.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Start</command:verb>
		<command:noun>VApp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet starts vApps.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Start-VApp</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VApp</maml:name>
				<maml:description>
					<maml:para>Specifies the vApp that you want to start.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VApp[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VApp</maml:name>
			<maml:description>
				<maml:para>Specifies the vApp that you want to start.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VApp[]</command:parameterValue>
			<dev:type>
				<maml:name>VApp[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more started VApp objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost MyVMHost1 | Get-VApp | Start-VApp</dev:code>
  			<dev:remarks>
				<maml:para>Starts all vApps on the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Start-VApp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Start-VM</command:name>
		<maml:description>
			<maml:para>This cmdlet powers on virtual machines.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Start</command:verb>
		<command:noun>VM</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet powers on the virtual machines specified by the VM parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Start-VM</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines you want to power on.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines you want to power on.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more powered-on VirtualMachine objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Start-VM -VM VM -Confirm -RunAsync</dev:code>
  			<dev:remarks>
				<maml:para>Asynchronously starts the virtual machine named VM. Before initializing the task, asks for confirmation.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Start-VM.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Start-VMHost</command:name>
		<maml:description>
			<maml:para>This cmdlet starts the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Start</command:verb>
		<command:noun>VMHost</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet starts the specified hosts. The task completes when the host successfully exits standby state and sends a heartbeat signal. If nothing is received from the host for the time defined by the TimeoutSeconds parameter, the host is declared timed out, and the task is assumed failed.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Start-VMHost</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts you want to start.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>TimeoutSeconds</maml:name>
				<maml:description>
					<maml:para>Specifies a time period in seconds to wait for a heartbeat signal from the host. If nothing is received from the host for the specified time, the host is declared timed out, and the task is assumed failed. The default value is 300.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts you want to start.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSeconds</maml:name>
			<maml:description>
				<maml:para>Specifies a time period in seconds to wait for a heartbeat signal from the host. If nothing is received from the host for the specified time, the host is declared timed out, and the task is assumed failed. The default value is 300.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>300</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more powered-on VMHost objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Start-VMHost 10.23.112.235 -RunAsync</dev:code>
  			<dev:remarks>
				<maml:para>Starts the specified host. The command returns without waiting for the task to complete.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Start-VMHost.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Start-VMHostService</command:name>
		<maml:description>
			<maml:para>This cmdlet starts the specified host services.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Start</command:verb>
		<command:noun>VMHostService</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet starts the specified host services.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Start-VMHostService</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HostService</maml:name>
				<maml:description>
					<maml:para>Specifies the host services you want to start.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HostService[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HostService</maml:name>
			<maml:description>
				<maml:para>Specifies the host services you want to start.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HostService[]</command:parameterValue>
			<dev:type>
				<maml:name>HostService[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more restarted HostService objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Start-VMHostService -Service $vmHostService</dev:code>
  			<dev:remarks>
				<maml:para>Starts a host service.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Start-VMHostService.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Stop-Task</command:name>
		<maml:description>
			<maml:para>This cmdlet stops the specified tasks.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Stop</command:verb>
		<command:noun>Task</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet stops the tasks specified by the Task parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Stop-Task</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Task</maml:name>
				<maml:description>
					<maml:para>Specifies the tasks you want to stop.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Task[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Task</maml:name>
			<maml:description>
				<maml:para>Specifies the tasks you want to stop.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Task[]</command:parameterValue>
			<dev:type>
				<maml:name>Task[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Get-VM -Name &quot;VM1&quot;

$datacenter = Get-Datacenter -Name &quot;Datacenter1&quot;

$task = New-Template -Name &quot;Template1&quot; -Location $datacenter -VM $vm -RunAsync

Stop-Task -Task $task</dev:code>
  			<dev:remarks>
				<maml:para>Stops the process of creating a new template from a virtual machine.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Stop-Task.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Task</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Wait-Task</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Stop-VApp</command:name>
		<maml:description>
			<maml:para>This cmdlet stops vApps.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Stop</command:verb>
		<command:noun>VApp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet stops vApps.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Stop-VApp</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that the virtual machines are powered off regardless of the auto-start configuration of the vApps.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VApp</maml:name>
				<maml:description>
					<maml:para>Specifies the vApp that you want to stop.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VApp[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that the virtual machines are powered off regardless of the auto-start configuration of the vApps.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VApp</maml:name>
			<maml:description>
				<maml:para>Specifies the vApp that you want to stop.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VApp[]</command:parameterValue>
			<dev:type>
				<maml:name>VApp[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more stopped VApp objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMHost MyVMHost1 | Get-VApp | Stop-VApp</dev:code>
  			<dev:remarks>
				<maml:para>Stops all virtual appliances on the specified host.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Stop-VApp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VApp</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Stop-VM</command:name>
		<maml:description>
			<maml:para>This cmdlet powers off  virtual machines.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Stop</command:verb>
		<command:noun>VM</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet stops the virtual machines specified by the VM parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Stop-VM</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Kill</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to stop the specified virtual machines by terminating their processes running on the ESX. You can use this parameter to stop a virtual machine that is not responding and cannot be stopped or restarted in other ways. To use the Kill parameter, you need to have a direct connection to ESX 4.1 or later.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines you want to power off.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Kill</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to stop the specified virtual machines by terminating their processes running on the ESX. You can use this parameter to stop a virtual machine that is not responding and cannot be stopped or restarted in other ways. To use the Kill parameter, you need to have a direct connection to ESX 4.1 or later.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines you want to power off.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more powered-off VirtualMachine objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Stop-VM -VM VM -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Stops the virtual machine named VM after confirmation by the user.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Stop-VM -VM VM -Kill -Confirm:$false</dev:code>
  			<dev:remarks>
				<maml:para>Stops the virtual machine VM by terminating its process running on the ESX.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Stop-VM.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Stop-VMGuest</command:name>
		<maml:description>
			<maml:para>This cmdlet shuts down the specified virtual machine guest OS.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Stop</command:verb>
		<command:noun>VMGuest</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet issues a command to the guest operating system asking it to prepare for a shutdown operation. Returns immediately and does not wait for the guest operating system to complete the operation.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Stop-VMGuest</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines whose operating systems you want to shut down. The virtual machines must have VMware Tools installed.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Stop-VMGuest</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Guest</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machine guests you want to shut down.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuest[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines whose operating systems you want to shut down. The virtual machines must have VMware Tools installed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Guest</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machine guests you want to shut down.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuest[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuest[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more shutdown VMGuest objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM | Stop-VMGuest</dev:code>
  			<dev:remarks>
				<maml:para>Shuts down the guest OS of the virtual machine named VM.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Stop-VMGuest.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Stop-VMHost</command:name>
		<maml:description>
			<maml:para>This cmdlet powers off the specified hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Stop</command:verb>
		<command:noun>VMHost</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet powers off the specified hosts. When the cmdlet runs asynchronously (with the RunAsync parameter) and you are connected directly to the host, the returned task object contains no indicator of success.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Stop-VMHost</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts you want to power off.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Indicates that you want to stop the hosts even if they are not in a maintenance mode.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts you want to power off.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Indicates that you want to stop the hosts even if they are not in a maintenance mode.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more powered-off VMHost objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Stop-VMHost 10.23.112.235 -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Shutdowns the specified host after user confirmation.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Stop-VMHost.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Suspend-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Stop-VMHostService</command:name>
		<maml:description>
			<maml:para>This cmdlet stops the specified host services.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Stop</command:verb>
		<command:noun>VMHostService</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet stops the host service specified by the Service parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Stop-VMHostService</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HostService</maml:name>
				<maml:description>
					<maml:para>Specifies the host services you want to stop.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >HostService[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HostService</maml:name>
			<maml:description>
				<maml:para>Specifies the host services you want to stop.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">HostService[]</command:parameterValue>
			<dev:type>
				<maml:name>HostService[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more stopped HostService objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Start-VMHostService -Service $vmHostService</dev:code>
  			<dev:remarks>
				<maml:para>Stops a host service.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Stop-VMHostService.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHostService</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Suspend-VM</command:name>
		<maml:description>
			<maml:para>This cmdlet suspends virtual machines.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Suspend</command:verb>
		<command:noun>VM</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet suspends the virtual machines specified by the VM parameter. You can use the suspend feature to make resources available on a short-term basis or for other situations in which you want to put a virtual machine on hold without powering it down. Using wildcards is supported with virtual machine names.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Suspend-VM</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines you want to suspend.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines you want to suspend.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more suspended VirtualMachine objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM | Suspend-VM</dev:code>
  			<dev:remarks>
				<maml:para>Suspends the virtual machine named VM.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Suspend-VM.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VM</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Suspend-VMGuest</command:name>
		<maml:description>
			<maml:para>This cmdlet suspends the specified guest operating systems.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Suspend</command:verb>
		<command:noun>VMGuest</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet issues a command to the specified guest operating system asking it to prepare for a suspend operation.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Suspend-VMGuest</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines whose operating systems you want to suspend. The virtual machines must have VMware Tools installed.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Suspend-VMGuest</maml:name>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Guest</maml:name>
				<maml:description>
					<maml:para>Specifies the guest operating systems you want to suspend.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuest[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines whose operating systems you want to suspend. The virtual machines must have VMware Tools installed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Guest</maml:name>
			<maml:description>
				<maml:para>Specifies the guest operating systems you want to suspend.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuest[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuest[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more suspended VMGuest objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VM VM| Suspend-VMGuest</dev:code>
  			<dev:remarks>
				<maml:para>Suspends the guest OS of the virtual machine named VM.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Suspend-VMGuest.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMGuest</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Suspend-VMHost</command:name>
		<maml:description>
			<maml:para>This cmdlet suspends hosts.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Suspend</command:verb>
		<command:noun>VMHost</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet puts the specified host machines in standby mode. You can use the suspend feature to make resources available on a short-term basis or for other situations in which you want to put a host on hold without powering it off.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Suspend-VMHost</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the hosts you want to suspend.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>TimeoutSeconds</maml:name>
				<maml:description>
					<maml:para>Specifies a time period in seconds to wait for the host to enter standby mode. If the host is not suspended for the specified time, the host is declared timed out, and the task is assumed failed. The default value is 300.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Evacuate</maml:name>
				<maml:description>
					<maml:para>If the value is $true, vCenter Server automatically reregisters the virtual machines that are compatible for reregistration. If they are not compatible, they remain on the suspended host. If there are powered-on virtual machines that cannot be reregistered, the operation waits until they are powered off manually. The Evacuate parameter is valid only when connected to a vCenter Server system and the virtual machine host is part of a DRS-enabled cluster.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the hosts you want to suspend.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSeconds</maml:name>
			<maml:description>
				<maml:para>Specifies a time period in seconds to wait for the host to enter standby mode. If the host is not suspended for the specified time, the host is declared timed out, and the task is assumed failed. The default value is 300.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>300</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Evacuate</maml:name>
			<maml:description>
				<maml:para>If the value is $true, vCenter Server automatically reregisters the virtual machines that are compatible for reregistration. If they are not compatible, they remain on the suspended host. If there are powered-on virtual machines that cannot be reregistered, the operation waits until they are powered off manually. The Evacuate parameter is valid only when connected to a vCenter Server system and the virtual machine host is part of a DRS-enabled cluster.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made and actually no objects are modified.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running. If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more suspended VMHost objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Works only against vCenter Server 4.1 and later.  The host should be configured to support standby mode using Wake-on-Lan  or the Intelligent Platform Management Interface Protocol (IPMI) protocol (vCenter Server 4.1).
The Evacuate parameter is valid only when the host is a part of a DRS-enabled cluster.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Suspend-VMHost 10.23.112.54 -TimeOutSeconds 60 -Confirm</dev:code>
  			<dev:remarks>
				<maml:para>Suspends the specified host after user confirmation. If the host is not suspended within 60 seconds, the task is reported failed.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Suspend-VMHost.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restart-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Start-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-VMHost</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Test-VMHostProfileCompliance</command:name>
		<maml:description>
			<maml:para>This cmdlet tests hosts for profile compliance.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Test</command:verb>
		<command:noun>VMHostProfileCompliance</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet tests hosts for profile compliance. The Profile and VMHost parameters cannot be set at the same time. If the Profile parameter is set, the specified host profile is tested for compliance with the hosts, to which it is associated. If the VMHost parameter is specified, the host is tested for compliance with the profiles associated with it. If no profiles are associated with the host, then the profile associated with the cluster is applied.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Test-VMHostProfileCompliance</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>Specifies the host you want to test for profile compliance with the profile associated with it. If no profile is associated with it, the host is tested for compliance with the profile associated with the cluster, to which the host belongs. Do not set this parameter if the Profile parameter is set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHost[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>UseCache</maml:name>
				<maml:description>
					<maml:para>Indicates that you want the vCenter Server to return cached information. If vCenter Server does not have cached information, a compliance scanning is performed.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Test-VMHostProfileCompliance</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Profile</maml:name>
				<maml:description>
					<maml:para>Specifies a host profile against which to test the specified host for compliance with the host to which it is associated. Do not set this parameter if the VMHost parameter is set.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMHostProfile[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>UseCache</maml:name>
				<maml:description>
					<maml:para>Indicates that you want the vCenter Server to return cached information. If vCenter Server does not have cached information, a compliance scanning is performed.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>Specifies the host you want to test for profile compliance with the profile associated with it. If no profile is associated with it, the host is tested for compliance with the profile associated with the cluster, to which the host belongs. Do not set this parameter if the Profile parameter is set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHost[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHost[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseCache</maml:name>
			<maml:description>
				<maml:para>Indicates that you want the vCenter Server to return cached information. If vCenter Server does not have cached information, a compliance scanning is performed.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Profile</maml:name>
			<maml:description>
				<maml:para>Specifies a host profile against which to test the specified host for compliance with the host to which it is associated. Do not set this parameter if the VMHost parameter is set.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMHostProfile[]</command:parameterValue>
			<dev:type>
				<maml:name>VMHostProfile[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VMHostProfileIncompliance objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Test-VMHostProfileCompliance -VMHost Host</dev:code>
  			<dev:remarks>
				<maml:para>Tests the specified host for compliance with the profiles associated with it.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$profile = Get-VMHostProfile -Name Profile

Apply-VMHostProfile -AssociateOnly -Profile $profile -Entity 10.0.0.126

Test-VMHostProfileCompliance -VMHost 10.0.0.126 | fl *</dev:code>
  			<dev:remarks>
				<maml:para>Test the profile compliance of a non-compliant virtual machine host associated with the profile.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Test-VMHostProfileCompliance -Profile $profile | fl *</dev:code>
  			<dev:remarks>
				<maml:para>Test the profile compliance of a virtual machine host profile with the hosts it is associated with.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Test-VMHostProfileCompliance.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Invoke-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostProfile</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Test-VMHostSnmp</command:name>
		<maml:description>
			<maml:para>This cmdlet tests the host SNMP.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Test</command:verb>
		<command:noun>VMHostSnmp</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet tests the host SNMP specified by the HostSNMP parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Test-VMHostSnmp</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>HostSnmp</maml:name>
				<maml:description>
					<maml:para>Specifies the host SNMP you want to test.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VmHostSnmp[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>HostSnmp</maml:name>
			<maml:description>
				<maml:para>Specifies the host SNMP you want to test.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VmHostSnmp[]</command:parameterValue>
			<dev:type>
				<maml:name>VmHostSnmp[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VmHostSnmp objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Test-VMHostSNMP -HostSNMP (Get-VMHostSNMP)</dev:code>
  			<dev:remarks>
				<maml:para>Retrieves and tests the SNMP of the default server.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Test-VMHostSnmp.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-VMHostSNMP</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-VMHostSNMP</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Update-Tools</command:name>
		<maml:description>
			<maml:para>This cmdlet upgrades VMware Tools on the specified virtual machine guest OS.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Update</command:verb>
		<command:noun>Tools</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet upgrades the VMware Tools on the specified virtual machine guest OS. VMware Tools must be installed prior to updating it. After VMware Tools is updated, the virtual machine is restarted unless the NoReboot parameter is specified.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Update-Tools</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoReboot</maml:name>
				<maml:description>
					<maml:para>Indicates that you do not want to reboot the system after updating VMware Tools. This parameter is supported only for Windows operating systems. NoReboot passes the following set of options to the VMware Tools installer on the guest OS:

/s /v&quot;/qn REBOOT=ReallySuppress”

However, the virtual machine might still reboot after updating VMware Tools, depending on the currently installed VMware Tools version, the VMware Tools version to which you want to upgrade, and the vCenter Center/ESX versions.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Guest</maml:name>
				<maml:description>
					<maml:para>Specifies the guest operating systems on which you want to update VMware Tools.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuest[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Update-Tools</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>NoReboot</maml:name>
				<maml:description>
					<maml:para>Indicates that you do not want to reboot the system after updating VMware Tools. This parameter is supported only for Windows operating systems. NoReboot passes the following set of options to the VMware Tools installer on the guest OS:

/s /v&quot;/qn REBOOT=ReallySuppress”

However, the virtual machine might still reboot after updating VMware Tools, depending on the currently installed VMware Tools version, the VMware Tools version to which you want to upgrade, and the vCenter Center/ESX versions.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>RunAsync</maml:name>
				<maml:description>
					<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies a list of the virtual machines whose VMware Tools you want to upgrade.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "2" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NoReboot</maml:name>
			<maml:description>
				<maml:para>Indicates that you do not want to reboot the system after updating VMware Tools. This parameter is supported only for Windows operating systems. NoReboot passes the following set of options to the VMware Tools installer on the guest OS:

/s /v&quot;/qn REBOOT=ReallySuppress”

However, the virtual machine might still reboot after updating VMware Tools, depending on the currently installed VMware Tools version, the VMware Tools version to which you want to upgrade, and the vCenter Center/ESX versions.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RunAsync</maml:name>
			<maml:description>
				<maml:para>Indicates that the command returns immediately without waiting for the task to complete. In this mode, the output of the cmdlet is a Task object. For more information about the RunAsync parameter run &quot;help About_RunAsync&quot; in the vSphere PowerCLI console.</maml:para>
			</maml:description>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Guest</maml:name>
			<maml:description>
				<maml:para>Specifies the guest operating systems on which you want to update VMware Tools.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuest[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuest[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="1">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies a list of the virtual machines whose VMware Tools you want to upgrade.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="2">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>None</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>On non-Windows operating systems, Update-Tools might not be able to perform automatic upgrade of VMware Tools. In such cases, the cmdlet only mounts the VMware Tools installation drive and you must do the upgrade manually.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Update-Tools VM</dev:code>
  			<dev:remarks>
				<maml:para>Updates the VMware Tools on the specified virtual machine. The virtual machine must be powered on.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Get-VMGuest VM | Update-Tools</dev:code>
  			<dev:remarks>
				<maml:para>Updates the VMware Tools on the virtual machine specified by its guest operating system. The virtual machine must be powered on.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Update-Tools.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Mount-Tools</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Dismount-Tools</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Wait-Tools</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Wait-Task</command:name>
		<maml:description>
			<maml:para>This cmdlet waits for the completion of the specified tasks.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Wait</command:verb>
		<command:noun>Task</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet waits for the specified tasks to complete or fail before allowing the next command input. The task progress is observed in real time on the console screen.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Wait-Task</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "1" >
				<maml:name>Task</maml:name>
				<maml:description>
					<maml:para>Specifies the tasks you want to wait to complete.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >Task[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Task</maml:name>
			<maml:description>
				<maml:para>Specifies the tasks you want to wait to complete.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Task[]</command:parameterValue>
			<dev:type>
				<maml:name>Task[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>The output of the operation specified by the Task parameter</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$task = Remove-VM -VM VM -Confirm -RunAsync

Wait-Task -Task $task</dev:code>
  			<dev:remarks>
				<maml:para>Waits for the virtual machine to be removed before allowing the next command input.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Wait-Task.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Task</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Stop-Task</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>Wait-Tools</command:name>
		<maml:description>
			<maml:para>This cmdlet waits for VMware Tools on the specified virtual machines to load.</maml:para>
		</maml:description>
		<maml:copyright>
           <maml:para />
		<!--Add copy right info here.-->
		</maml:copyright>
		<command:verb>Wait</command:verb>
		<command:noun>Tools</command:noun>
		<!--Add Dev version info here.-->
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This cmdlet waits for VMware Tools of the specified virtual machines to load. The cmdlet returns the virtual machines or guests on which VMware Tools have loaded successfully within the specified time limits. You can cancel the operation before completion using Ctrl+C.
The successful completion of Wait-Tools means that VMware Tools  have loaded, but it does not guarantee for the start of other services.
Updating the returned VMGuest objects requires additional communication with VMware Tools and some of their properties (OSFullName, IPAddress, HostName, and other) might be still empty right after the completion of Wait-Tools.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Wait-Tools</maml:name>
			<command:parameter required = "true" variableLength = "true" globbing = "true" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>Specifies the virtual machines for which you want to wait VMware Tools to load.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VirtualMachine[]</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>TimeoutSeconds</maml:name>
				<maml:description>
					<maml:para>Specifies the time period in seconds to wait for VMware Tools to start before cancelling the operation.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies credentials for authenticating with the ESX/ESXi host of the specified virtual machine. This parameter is needed only if you have authenticated with vCenter Server via SSPI. If SSPI is not used, the credentials for authentication with vCenter Server are used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies a username for authenticating with the ESX/ESXi host of the specified virtual machine. This parameter is needed only if you have authenticated with vCenter Server via SSPI. If SSPI is not used, the username for authentication with vCenter Server is used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies a password for authenticating with the ESX host of the specified virtual machine. This parameter is needed only if you have authenticated with the vCenter Server via SSPI. If no SSPI is used, the password for authentication with vCenter Server is used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "true" globbing = "true" pipelineInput = "false" position = "named" >
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VIServer[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Wait-Tools</maml:name>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "1" >
				<maml:name>TimeoutSeconds</maml:name>
				<maml:description>
					<maml:para>Specifies the time period in seconds to wait for VMware Tools to start before cancelling the operation.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostCredential</maml:name>
				<maml:description>
					<maml:para>Specifies credentials for authenticating with the ESX/ESXi host of the specified virtual machine. This parameter is needed only if you have authenticated with vCenter Server via SSPI. If SSPI is not used, the credentials for authentication with vCenter Server are used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostUser</maml:name>
				<maml:description>
					<maml:para>Specifies a username for authenticating with the ESX/ESXi host of the specified virtual machine. This parameter is needed only if you have authenticated with vCenter Server via SSPI. If SSPI is not used, the username for authentication with vCenter Server is used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >String</command:parameterValue>
			</command:parameter>
			<command:parameter required = "false" variableLength = "false" globbing = "false" pipelineInput = "false" position = "named" >
				<maml:name>HostPassword</maml:name>
				<maml:description>
					<maml:para>Specifies a password for authenticating with the ESX host of the specified virtual machine. This parameter is needed only if you have authenticated with the vCenter Server via SSPI. If no SSPI is used, the password for authentication with vCenter Server is used.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "false" >SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required = "true" variableLength = "true" globbing = "false" pipelineInput = "true (ByValue)" position = "2" >
				<maml:name>Guest</maml:name>
				<maml:description>
					<maml:para>Specifies the guest operating systems for which you want to wait VMware Tools to load.</maml:para>
				</maml:description>
			<command:parameterValue required="true" variableLength = "true" >VMGuest[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByValue)" position="2">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>Specifies the virtual machines for which you want to wait VMware Tools to load.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VirtualMachine[]</command:parameterValue>
			<dev:type>
				<maml:name>VirtualMachine[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>TimeoutSeconds</maml:name>
			<maml:description>
				<maml:para>Specifies the time period in seconds to wait for VMware Tools to start before cancelling the operation.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostCredential</maml:name>
			<maml:description>
				<maml:para>Specifies credentials for authenticating with the ESX/ESXi host of the specified virtual machine. This parameter is needed only if you have authenticated with vCenter Server via SSPI. If SSPI is not used, the credentials for authentication with vCenter Server are used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostUser</maml:name>
			<maml:description>
				<maml:para>Specifies a username for authenticating with the ESX/ESXi host of the specified virtual machine. This parameter is needed only if you have authenticated with vCenter Server via SSPI. If SSPI is not used, the username for authentication with vCenter Server is used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HostPassword</maml:name>
			<maml:description>
				<maml:para>Specifies a password for authenticating with the ESX host of the specified virtual machine. This parameter is needed only if you have authenticated with the vCenter Server via SSPI. If no SSPI is used, the password for authentication with vCenter Server is used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Specifies the vCenter Server systems on which you want to run the cmdlet. If no value is given to this parameter, the command runs on the default servers. For more information about default servers, see the description of Connect-VIServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VIServer[]</command:parameterValue>
			<dev:type>
				<maml:name>VIServer[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Guest</maml:name>
			<maml:description>
				<maml:para>Specifies the guest operating systems for which you want to wait VMware Tools to load.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">VMGuest[]</command:parameterValue>
			<dev:type>
				<maml:name>VMGuest[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Zero or more VirtualMachine or VMGuest objects</maml:name>
				<maml:uri />
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors>
	</command:terminatingErrors>
	<command:nonTerminatingErrors>
	</command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>
--------------  Example 1 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>$vm = Start-VM VM* | Wait-Tools</dev:code>
  			<dev:remarks>
				<maml:para>Starts the virtual machines with names starting with VM and Waits for their VMware Tools to load.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 2 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Wait-Tools -VM $vm -TimeoutSeconds 180</dev:code>
  			<dev:remarks>
				<maml:para>Waits for the VMware Tools of the virtual machines in the $vm variable to start. If VMware Tools do not load after 180 seconds, the operation is aborted.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 3 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Wait-Tools -VM VM* -TimeoutSeconds 120 -HostCredential $vmhostCredential</dev:code>
  			<dev:remarks>
				<maml:para>Waits for the VMware Tools of the virtual machines in the $vm variable to start. If VMware Tools do not load after 120 seconds, the operation is aborted. Host credentials are required when you run the cmdlet on environments older than vSphere 4.0.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>
--------------  Example 4 --------------			</maml:title>
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
C:\PS&gt;			</maml:introduction>
  			<dev:code>Restart-VMGuest WindowsXP | Wait-Tools</dev:code>
  			<dev:remarks>
				<maml:para>Restart the guest operating system WindowsXP and waits for the VMware Tools to load.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para>
				</maml:para>
				<maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://www.vmware.com/support/developer/PowerCLI/PowerCLI63R1/html/Wait-Tools.html</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Mount-Tools</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Dismount-Tools</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Update-Tools</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
</helpItems>
